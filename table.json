{"alert":{"0":"Missing Anti-clickjacking Header","1":"Content Security Policy (CSP) Header Not Set","2":"Content Security Policy (CSP) Header Not Set","3":"Missing Anti-clickjacking Header","4":"Missing Anti-clickjacking Header","5":"Missing Anti-clickjacking Header","6":"Missing Anti-clickjacking Header","7":"Missing Anti-clickjacking Header","8":"Missing Anti-clickjacking Header","9":"Missing Anti-clickjacking Header","10":"Missing Anti-clickjacking Header","11":"Missing Anti-clickjacking Header","12":"Missing Anti-clickjacking Header","13":"Re-examine Cache-control Directives","14":"Content Security Policy (CSP) Header Not Set","15":"Re-examine Cache-control Directives","16":"Strict-Transport-Security Header Not Set","17":"Missing Anti-clickjacking Header","18":"Re-examine Cache-control Directives","19":"Missing Anti-clickjacking Header","20":"Content Security Policy (CSP) Header Not Set","21":"Content Security Policy (CSP) Header Not Set","22":"Cross-Domain JavaScript Source File Inclusion","23":"Missing Anti-clickjacking Header","24":"Modern Web Application","25":"Re-examine Cache-control Directives","26":"Re-examine Cache-control Directives","27":"Re-examine Cache-control Directives","28":"Strict-Transport-Security Header Not Set","29":"Strict-Transport-Security Header Not Set","30":"Missing Anti-clickjacking Header","31":"Re-examine Cache-control Directives","32":"Re-examine Cache-control Directives","33":"Missing Anti-clickjacking Header","34":"Content Security Policy (CSP) Header Not Set","35":"Content Security Policy (CSP) Header Not Set","36":"Strict-Transport-Security Header Not Set","37":"Missing Anti-clickjacking Header","38":"Re-examine Cache-control Directives","39":"Content Security Policy (CSP) Header Not Set","40":"Strict-Transport-Security Header Not Set","41":"Re-examine Cache-control Directives","42":"Content Security Policy (CSP) Header Not Set","43":"X-Content-Type-Options Header Missing","44":"X-Content-Type-Options Header Missing","45":"Content Security Policy (CSP) Header Not Set","46":"Missing Anti-clickjacking Header","47":"Content Security Policy (CSP) Header Not Set","48":"Content Security Policy (CSP) Header Not Set","49":"Missing Anti-clickjacking Header","50":"Cross-Domain JavaScript Source File Inclusion","51":"Re-examine Cache-control Directives","52":"Private IP Disclosure","53":"Content Security Policy (CSP) Header Not Set","54":"Re-examine Cache-control Directives","55":"Missing Anti-clickjacking Header","56":"X-Content-Type-Options Header Missing","57":"Re-examine Cache-control Directives","58":"Missing Anti-clickjacking Header","59":"Missing Anti-clickjacking Header","60":"Content Security Policy (CSP) Header Not Set","61":"Modern Web Application","62":"Strict-Transport-Security Header Not Set","63":"Re-examine Cache-control Directives","64":"Re-examine Cache-control Directives","65":"Content Security Policy (CSP) Header Not Set","66":"Strict-Transport-Security Header Not Set","67":"Strict-Transport-Security Header Not Set","68":"Strict-Transport-Security Header Not Set","69":"Strict-Transport-Security Header Not Set","70":"Re-examine Cache-control Directives","71":"Content Security Policy (CSP) Header Not Set","72":"Content Security Policy (CSP) Header Not Set","73":"Re-examine Cache-control Directives","74":"Strict-Transport-Security Header Not Set","75":"Strict-Transport-Security Header Not Set","76":"Content Security Policy (CSP) Header Not Set","77":"Missing Anti-clickjacking Header","78":"Re-examine Cache-control Directives","79":"Re-examine Cache-control Directives","80":"Strict-Transport-Security Header Not Set","81":"Strict-Transport-Security Header Not Set","82":"Content Security Policy (CSP) Header Not Set","83":"Cross-Domain JavaScript Source File Inclusion","84":"X-Content-Type-Options Header Missing","85":"X-Content-Type-Options Header Missing","86":"X-Content-Type-Options Header Missing","87":"Content Security Policy (CSP) Header Not Set","88":"Content Security Policy (CSP) Header Not Set","89":"X-Content-Type-Options Header Missing","90":"Content Security Policy (CSP) Header Not Set","91":"X-Content-Type-Options Header Missing","92":"X-Content-Type-Options Header Missing","93":"Strict-Transport-Security Header Not Set","94":"X-Content-Type-Options Header Missing","95":"Content Security Policy (CSP) Header Not Set","96":"Content Security Policy (CSP) Header Not Set","97":"Secure Pages Include Mixed Content (Including Scripts)","98":"Strict-Transport-Security Header Not Set","99":"Content Security Policy (CSP) Header Not Set","100":"X-Content-Type-Options Header Missing","101":"X-Content-Type-Options Header Missing","102":"Missing Anti-clickjacking Header","103":"Strict-Transport-Security Header Not Set","104":"Strict-Transport-Security Header Not Set","105":"Strict-Transport-Security Header Not Set","106":"Strict-Transport-Security Header Not Set","107":"Missing Anti-clickjacking Header","108":"Missing Anti-clickjacking Header","109":"Missing Anti-clickjacking Header","110":"Missing Anti-clickjacking Header","111":"Modern Web Application","112":"Missing Anti-clickjacking Header","113":"Cross-Domain JavaScript Source File Inclusion","114":"X-Content-Type-Options Header Missing","115":"Missing Anti-clickjacking Header","116":"Modern Web Application","117":"Strict-Transport-Security Header Not Set","118":"X-Content-Type-Options Header Missing","119":"Strict-Transport-Security Header Not Set","120":"Missing Anti-clickjacking Header","121":"Missing Anti-clickjacking Header","122":"X-Content-Type-Options Header Missing","123":"X-Content-Type-Options Header Missing","124":"Content Security Policy (CSP) Header Not Set","125":"X-Content-Type-Options Header Missing","126":"X-Content-Type-Options Header Missing","127":"Strict-Transport-Security Header Not Set","128":"Content Security Policy (CSP) Header Not Set","129":"Modern Web Application","130":"Missing Anti-clickjacking Header","131":"Content Security Policy (CSP) Header Not Set","132":"Content Security Policy (CSP) Header Not Set","133":"Content Security Policy (CSP) Header Not Set","134":"Content Security Policy (CSP) Header Not Set","135":"Strict-Transport-Security Header Not Set","136":"Content Security Policy (CSP) Header Not Set","137":"X-Content-Type-Options Header Missing","138":"Content Security Policy (CSP) Header Not Set","139":"X-Content-Type-Options Header Missing","140":"Missing Anti-clickjacking Header","141":"Content Security Policy (CSP) Header Not Set","142":"Missing Anti-clickjacking Header","143":"Modern Web Application","144":"Missing Anti-clickjacking Header","145":"Missing Anti-clickjacking Header","146":"Missing Anti-clickjacking Header","147":"Cross-Domain JavaScript Source File Inclusion","148":"X-Content-Type-Options Header Missing","149":"Strict-Transport-Security Header Not Set","150":"Content Security Policy (CSP) Header Not Set","151":"Cross-Domain JavaScript Source File Inclusion","152":"Cross-Domain JavaScript Source File Inclusion","153":"Modern Web Application","154":"X-Content-Type-Options Header Missing","155":"Modern Web Application","156":"Modern Web Application","157":"Missing Anti-clickjacking Header","158":"Cross-Domain JavaScript Source File Inclusion","159":"Modern Web Application","160":"Content Security Policy (CSP) Header Not Set","161":"Missing Anti-clickjacking Header","162":"Content Security Policy (CSP) Header Not Set","163":"Strict-Transport-Security Header Not Set","164":"Content Security Policy (CSP) Header Not Set","165":"Content Security Policy (CSP) Header Not Set","166":"Content Security Policy (CSP) Header Not Set","167":"Modern Web Application","168":"Missing Anti-clickjacking Header","169":"X-Content-Type-Options Header Missing","170":"Modern Web Application","171":"Modern Web Application","172":"Modern Web Application","173":"Strict-Transport-Security Header Not Set","174":"Strict-Transport-Security Header Not Set","175":"Missing Anti-clickjacking Header","176":"Strict-Transport-Security Header Not Set","177":"Content Security Policy (CSP) Header Not Set","178":"Modern Web Application","179":"Strict-Transport-Security Header Not Set","180":"Modern Web Application","181":"Modern Web Application","182":"Content Security Policy (CSP) Header Not Set","183":"X-Content-Type-Options Header Missing","184":"Cross-Domain JavaScript Source File Inclusion","185":"Cross-Domain JavaScript Source File Inclusion","186":"Cross-Domain JavaScript Source File Inclusion","187":"Strict-Transport-Security Header Not Set","188":"Content Security Policy (CSP) Header Not Set","189":"Strict-Transport-Security Header Not Set","190":"Missing Anti-clickjacking Header","191":"Strict-Transport-Security Header Not Set","192":"Strict-Transport-Security Header Not Set","193":"X-Content-Type-Options Header Missing","194":"X-Content-Type-Options Header Missing","195":"Content Security Policy (CSP) Header Not Set","196":"X-Content-Type-Options Header Missing","197":"Modern Web Application","198":"Strict-Transport-Security Header Not Set","199":"Strict-Transport-Security Header Not Set","200":"X-Content-Type-Options Header Missing","201":"Cross-Domain JavaScript Source File Inclusion","202":"Strict-Transport-Security Header Not Set","203":"Missing Anti-clickjacking Header","204":"Modern Web Application","205":"Modern Web Application","206":"Modern Web Application","207":"Cross-Domain JavaScript Source File Inclusion","208":"X-Content-Type-Options Header Missing","209":"X-Content-Type-Options Header Missing","210":"Content Security Policy (CSP) Header Not Set","211":"X-Content-Type-Options Header Missing","212":"X-Content-Type-Options Header Missing","213":"Missing Anti-clickjacking Header","214":"Cross-Domain JavaScript Source File Inclusion","215":"Missing Anti-clickjacking Header","216":"Strict-Transport-Security Header Not Set","217":"Missing Anti-clickjacking Header","218":"X-Content-Type-Options Header Missing","219":"X-Content-Type-Options Header Missing","220":"Missing Anti-clickjacking Header","221":"X-Content-Type-Options Header Missing","222":"Absence of Anti-CSRF Tokens","223":"Content Security Policy (CSP) Header Not Set","224":"Strict-Transport-Security Header Not Set","225":"Strict-Transport-Security Header Not Set","226":"Strict-Transport-Security Header Not Set","227":"Modern Web Application","228":"Missing Anti-clickjacking Header","229":"Missing Anti-clickjacking Header","230":"Cross-Domain JavaScript Source File Inclusion","231":"Missing Anti-clickjacking Header","232":"Missing Anti-clickjacking Header","233":"Content Security Policy (CSP) Header Not Set","234":"Modern Web Application","235":"Content Security Policy (CSP) Header Not Set","236":"X-Content-Type-Options Header Missing","237":"Content Security Policy (CSP) Header Not Set","238":"Missing Anti-clickjacking Header","239":"Missing Anti-clickjacking Header","240":"Content Security Policy (CSP) Header Not Set","241":"Missing Anti-clickjacking Header","242":"Cross-Domain JavaScript Source File Inclusion","243":"Modern Web Application","244":"X-Content-Type-Options Header Missing","245":"X-Content-Type-Options Header Missing","246":"X-Content-Type-Options Header Missing","247":"Strict-Transport-Security Header Not Set","248":"Content Security Policy (CSP) Header Not Set","249":"Content Security Policy (CSP) Header Not Set","250":"Modern Web Application","251":"Content Security Policy (CSP) Header Not Set","252":"Content Security Policy (CSP) Header Not Set","253":"Cross-Domain JavaScript Source File Inclusion","254":"Strict-Transport-Security Header Not Set","255":"Modern Web Application","256":"Cross-Domain JavaScript Source File Inclusion","257":"Missing Anti-clickjacking Header","258":"Cross-Domain JavaScript Source File Inclusion","259":"Content Security Policy (CSP) Header Not Set","260":"Re-examine Cache-control Directives","261":"Strict-Transport-Security Header Not Set","262":"Modern Web Application","263":"Content Security Policy (CSP) Header Not Set","264":"Missing Anti-clickjacking Header","265":"Missing Anti-clickjacking Header","266":"Missing Anti-clickjacking Header","267":"X-Content-Type-Options Header Missing","268":"Modern Web Application","269":"Cross-Domain JavaScript Source File Inclusion","270":"Strict-Transport-Security Header Not Set","271":"Modern Web Application","272":"Cross-Domain JavaScript Source File Inclusion","273":"Private IP Disclosure","274":"Strict-Transport-Security Header Not Set","275":"X-Content-Type-Options Header Missing","276":"Modern Web Application","277":"Content Security Policy (CSP) Header Not Set","278":"Content Security Policy (CSP) Header Not Set","279":"Cross-Domain JavaScript Source File Inclusion","280":"Modern Web Application","281":"Strict-Transport-Security Header Not Set","282":"Cross-Domain JavaScript Source File Inclusion","283":"X-Content-Type-Options Header Missing","284":"Content Security Policy (CSP) Header Not Set","285":"Content Security Policy (CSP) Header Not Set","286":"Content Security Policy (CSP) Header Not Set","287":"Strict-Transport-Security Header Not Set","288":"Missing Anti-clickjacking Header","289":"Secure Pages Include Mixed Content (Including Scripts)","290":"X-Content-Type-Options Header Missing","291":"Strict-Transport-Security Header Not Set","292":"Modern Web Application","293":"Secure Pages Include Mixed Content (Including Scripts)","294":"X-Content-Type-Options Header Missing","295":"Missing Anti-clickjacking Header","296":"Strict-Transport-Security Header Not Set","297":"Modern Web Application","298":"Strict-Transport-Security Header Not Set","299":"Secure Pages Include Mixed Content (Including Scripts)","300":"Strict-Transport-Security Header Not Set","301":"X-Content-Type-Options Header Missing","302":"Missing Anti-clickjacking Header","303":"Modern Web Application","304":"Modern Web Application","305":"Modern Web Application","306":"Modern Web Application","307":"X-Content-Type-Options Header Missing","308":"Content Security Policy (CSP) Header Not Set","309":"Modern Web Application","310":"X-Content-Type-Options Header Missing","311":"Missing Anti-clickjacking Header","312":"Strict-Transport-Security Header Not Set","313":"Modern Web Application","314":"Missing Anti-clickjacking Header","315":"Content Security Policy (CSP) Header Not Set","316":"Strict-Transport-Security Header Not Set","317":"X-Content-Type-Options Header Missing","318":"Modern Web Application","319":"User Controllable HTML Element Attribute (Potential XSS)","320":"X-Content-Type-Options Header Missing","321":"Missing Anti-clickjacking Header","322":"Strict-Transport-Security Header Not Set","323":"Content Security Policy (CSP) Header Not Set","324":"Strict-Transport-Security Header Not Set","325":"Strict-Transport-Security Header Not Set","326":"Strict-Transport-Security Header Not Set","327":"Missing Anti-clickjacking Header","328":"Modern Web Application","329":"Strict-Transport-Security Header Not Set","330":"Missing Anti-clickjacking Header","331":"Content Security Policy (CSP) Header Not Set","332":"X-Content-Type-Options Header Missing","333":"Strict-Transport-Security Header Not Set","334":"Modern Web Application","335":"Content Security Policy (CSP) Header Not Set","336":"X-Content-Type-Options Header Missing","337":"Missing Anti-clickjacking Header","338":"X-Content-Type-Options Header Missing","339":"Strict-Transport-Security Header Not Set","340":"Missing Anti-clickjacking Header","341":"User Controllable HTML Element Attribute (Potential XSS)","342":"Modern Web Application","343":"Content Security Policy (CSP) Header Not Set","344":"X-Content-Type-Options Header Missing","345":"X-Content-Type-Options Header Missing","346":"X-Content-Type-Options Header Missing","347":"Content Security Policy (CSP) Header Not Set","348":"Strict-Transport-Security Header Not Set","349":"User Controllable HTML Element Attribute (Potential XSS)","350":"Content Security Policy (CSP) Header Not Set","351":"Modern Web Application","352":"Missing Anti-clickjacking Header","353":"User Controllable HTML Element Attribute (Potential XSS)","354":"Strict-Transport-Security Header Not Set","355":"Modern Web Application","356":"Missing Anti-clickjacking Header","357":"Content Security Policy (CSP) Header Not Set","358":"User Controllable HTML Element Attribute (Potential XSS)","359":"Missing Anti-clickjacking Header","360":"Content Security Policy (CSP) Header Not Set","361":"Cross-Domain JavaScript Source File Inclusion","362":"Strict-Transport-Security Header Not Set","363":"X-Content-Type-Options Header Missing","364":"Missing Anti-clickjacking Header","365":"Missing Anti-clickjacking Header","366":"Re-examine Cache-control Directives","367":"Modern Web Application","368":"X-Content-Type-Options Header Missing","369":"X-Content-Type-Options Header Missing","370":"Strict-Transport-Security Header Not Set","371":"Strict-Transport-Security Header Not Set","372":"X-Content-Type-Options Header Missing","373":"Content Security Policy (CSP) Header Not Set","374":"Strict-Transport-Security Header Not Set","375":"X-Content-Type-Options Header Missing","376":"Content Security Policy (CSP) Header Not Set","377":"Modern Web Application","378":"X-Content-Type-Options Header Missing","379":"Modern Web Application","380":"Content Security Policy (CSP) Header Not Set","381":"Missing Anti-clickjacking Header","382":"X-Content-Type-Options Header Missing","383":"Modern Web Application","384":"Content Security Policy (CSP) Header Not Set","385":"Content Security Policy (CSP) Header Not Set","386":"Strict-Transport-Security Header Not Set","387":"Strict-Transport-Security Header Not Set","388":"Missing Anti-clickjacking Header","389":"Missing Anti-clickjacking Header","390":"X-Content-Type-Options Header Missing","391":"X-Content-Type-Options Header Missing","392":"Strict-Transport-Security Header Not Set","393":"Missing Anti-clickjacking Header","394":"X-Content-Type-Options Header Missing","395":"Missing Anti-clickjacking Header","396":"Strict-Transport-Security Header Not Set","397":"Modern Web Application","398":"Missing Anti-clickjacking Header","399":"Strict-Transport-Security Header Not Set","400":"Strict-Transport-Security Header Not Set","401":"Strict-Transport-Security Header Not Set","402":"Content Security Policy (CSP) Header Not Set","403":"Missing Anti-clickjacking Header","404":"Modern Web Application","405":"Strict-Transport-Security Header Not Set","406":"X-Content-Type-Options Header Missing","407":"X-Content-Type-Options Header Missing","408":"Content Security Policy (CSP) Header Not Set","409":"Content Security Policy (CSP) Header Not Set","410":"Missing Anti-clickjacking Header","411":"Missing Anti-clickjacking Header","412":"X-Content-Type-Options Header Missing","413":"Re-examine Cache-control Directives","414":"Content Security Policy (CSP) Header Not Set","415":"Session Management Response Identified","416":"Strict-Transport-Security Header Not Set","417":"X-Content-Type-Options Header Missing","418":"Content Security Policy (CSP) Header Not Set","419":"X-Content-Type-Options Header Missing","420":"X-Content-Type-Options Header Missing","421":"User Controllable HTML Element Attribute (Potential XSS)","422":"Modern Web Application","423":"Content Security Policy (CSP) Header Not Set","424":"Strict-Transport-Security Header Not Set","425":"X-Content-Type-Options Header Missing","426":"Missing Anti-clickjacking Header","427":"Session Management Response Identified","428":"Modern Web Application","429":"Modern Web Application","430":"Content Security Policy (CSP) Header Not Set","431":"Content Security Policy (CSP) Header Not Set","432":"Content Security Policy (CSP) Header Not Set","433":"Missing Anti-clickjacking Header","434":"Missing Anti-clickjacking Header","435":"Modern Web Application","436":"X-Content-Type-Options Header Missing","437":"Missing Anti-clickjacking Header","438":"Modern Web Application","439":"Missing Anti-clickjacking Header","440":"Re-examine Cache-control Directives","441":"X-Content-Type-Options Header Missing","442":"Strict-Transport-Security Header Not Set","443":"Strict-Transport-Security Header Not Set","444":"X-Content-Type-Options Header Missing","445":"Missing Anti-clickjacking Header","446":"Missing Anti-clickjacking Header","447":"Content Security Policy (CSP) Header Not Set","448":"Strict-Transport-Security Header Not Set","449":"Strict-Transport-Security Header Not Set","450":"Modern Web Application","451":"Modern Web Application","452":"Modern Web Application","453":"Content Security Policy (CSP) Header Not Set","454":"Content Security Policy (CSP) Header Not Set","455":"Strict-Transport-Security Header Not Set","456":"Missing Anti-clickjacking Header","457":"Content Security Policy (CSP) Header Not Set","458":"Strict-Transport-Security Header Not Set","459":"Strict-Transport-Security Header Not Set","460":"Content Security Policy (CSP) Header Not Set","461":"X-Content-Type-Options Header Missing","462":"X-Content-Type-Options Header Missing","463":"Missing Anti-clickjacking Header","464":"Missing Anti-clickjacking Header","465":"Content Security Policy (CSP) Header Not Set","466":"Modern Web Application","467":"CSP: Notices","468":"X-Content-Type-Options Header Missing","469":"X-Content-Type-Options Header Missing","470":"Strict-Transport-Security Header Not Set","471":"Strict-Transport-Security Header Not Set","472":"Strict-Transport-Security Header Not Set","473":"Modern Web Application","474":"Cookie without SameSite Attribute","475":"X-Content-Type-Options Header Missing","476":"Modern Web Application","477":"Content Security Policy (CSP) Header Not Set","478":"X-Content-Type-Options Header Missing","479":"X-Content-Type-Options Header Missing","480":"Modern Web Application","481":"Missing Anti-clickjacking Header","482":"Content Security Policy (CSP) Header Not Set","483":"Strict-Transport-Security Header Not Set","484":"Content Security Policy (CSP) Header Not Set","485":"Cookie without SameSite Attribute","486":"Strict-Transport-Security Header Not Set","487":"CSP: Failure to Define Directive with No Fallback","488":"Missing Anti-clickjacking Header","489":"X-Content-Type-Options Header Missing","490":"Missing Anti-clickjacking Header","491":"X-Content-Type-Options Header Missing","492":"X-Content-Type-Options Header Missing","493":"Strict-Transport-Security Header Not Set","494":"Cookie Without Secure Flag","495":"Missing Anti-clickjacking Header","496":"Strict-Transport-Security Header Not Set","497":"Modern Web Application","498":"Strict-Transport-Security Header Not Set","499":"Missing Anti-clickjacking Header","500":"Missing Anti-clickjacking Header","501":"X-Content-Type-Options Header Missing","502":"Strict-Transport-Security Header Not Set","503":"Content Security Policy (CSP) Header Not Set","504":"Modern Web Application","505":"Cookie Without Secure Flag","506":"X-Content-Type-Options Header Missing","507":"CSP: Wildcard Directive","508":"Re-examine Cache-control Directives","509":"Strict-Transport-Security Header Not Set","510":"Content Security Policy (CSP) Header Not Set","511":"Missing Anti-clickjacking Header","512":"X-Content-Type-Options Header Missing","513":"Missing Anti-clickjacking Header","514":"Strict-Transport-Security Header Not Set","515":"Content Security Policy (CSP) Header Not Set","516":"X-Content-Type-Options Header Missing","517":"Strict-Transport-Security Header Not Set","518":"X-Content-Type-Options Header Missing","519":"Content Security Policy (CSP) Header Not Set","520":"Content Security Policy (CSP) Header Not Set","521":"X-Content-Type-Options Header Missing","522":"Missing Anti-clickjacking Header","523":"Strict-Transport-Security Header Not Set","524":"Strict-Transport-Security Header Not Set","525":"Modern Web Application","526":"Missing Anti-clickjacking Header","527":"CSP: style-src unsafe-inline","528":"Content Security Policy (CSP) Header Not Set","529":"Open Redirect","530":"Modern Web Application","531":"Content Security Policy (CSP) Header Not Set","532":"Missing Anti-clickjacking Header","533":"Content Security Policy (CSP) Header Not Set","534":"X-Content-Type-Options Header Missing","535":"Strict-Transport-Security Header Not Set","536":"Missing Anti-clickjacking Header","537":"X-Content-Type-Options Header Missing","538":"Missing Anti-clickjacking Header","539":"Modern Web Application","540":"Strict-Transport-Security Header Not Set","541":"X-Content-Type-Options Header Missing","542":"X-Content-Type-Options Header Missing","543":"Content Security Policy (CSP) Header Not Set","544":"X-Content-Type-Options Header Missing","545":"Strict-Transport-Security Header Not Set","546":"Content Security Policy (CSP) Header Not Set","547":"CSP: script-src unsafe-eval","548":"Cross-Domain JavaScript Source File Inclusion","549":"Strict-Transport-Security Header Not Set","550":"Missing Anti-clickjacking Header","551":"Modern Web Application","552":"X-Content-Type-Options Header Missing","553":"Content Security Policy (CSP) Header Not Set","554":"Missing Anti-clickjacking Header","555":"X-Content-Type-Options Header Missing","556":"Content Security Policy (CSP) Header Not Set","557":"Missing Anti-clickjacking Header","558":"Content Security Policy (CSP) Header Not Set","559":"User Controllable HTML Element Attribute (Potential XSS)","560":"Strict-Transport-Security Header Not Set","561":"Missing Anti-clickjacking Header","562":"Missing Anti-clickjacking Header","563":"Strict-Transport-Security Header Not Set","564":"X-Content-Type-Options Header Missing","565":"Missing Anti-clickjacking Header","566":"Modern Web Application","567":"Strict-Transport-Security Header Not Set","568":"Modern Web Application","569":"X-Content-Type-Options Header Missing","570":"Content Security Policy (CSP) Header Not Set","571":"Strict-Transport-Security Header Not Set","572":"Missing Anti-clickjacking Header","573":"Modern Web Application","574":"Content Security Policy (CSP) Header Not Set","575":"Missing Anti-clickjacking Header","576":"Modern Web Application","577":"Content Security Policy (CSP) Header Not Set","578":"Strict-Transport-Security Missing Max-Age (Non-compliant with Spec)","579":"X-Content-Type-Options Header Missing","580":"X-Content-Type-Options Header Missing","581":"User Controllable HTML Element Attribute (Potential XSS)","582":"Content Security Policy (CSP) Header Not Set","583":"Content Security Policy (CSP) Header Not Set","584":"Strict-Transport-Security Header Not Set","585":"Missing Anti-clickjacking Header","586":"Content Security Policy (CSP) Header Not Set","587":"X-Content-Type-Options Header Missing","588":"Strict-Transport-Security Header Not Set","589":"Missing Anti-clickjacking Header","590":"Modern Web Application","591":"X-Content-Type-Options Header Missing","592":"Strict-Transport-Security Header Not Set","593":"Content Security Policy (CSP) Header Not Set","594":"Modern Web Application","595":"Re-examine Cache-control Directives","596":"Strict-Transport-Security Header Not Set","597":"X-Content-Type-Options Header Missing","598":"X-Content-Type-Options Header Missing","599":"Missing Anti-clickjacking Header","600":"Missing Anti-clickjacking Header","601":"X-Content-Type-Options Header Missing","602":"Strict-Transport-Security Header Not Set","603":"Strict-Transport-Security Header Not Set","604":"X-Content-Type-Options Header Missing","605":"Modern Web Application","606":"Content Security Policy (CSP) Header Not Set","607":"Missing Anti-clickjacking Header","608":"X-Content-Type-Options Header Missing","609":"Strict-Transport-Security Header Not Set","610":"Content Security Policy (CSP) Header Not Set","611":"Missing Anti-clickjacking Header","612":"X-Content-Type-Options Header Missing","613":"Modern Web Application","614":"Strict-Transport-Security Header Not Set","615":"Content Security Policy (CSP) Header Not Set","616":"X-Content-Type-Options Header Missing","617":"Missing Anti-clickjacking Header","618":"Missing Anti-clickjacking Header","619":"Re-examine Cache-control Directives","620":"Content Security Policy (CSP) Header Not Set","621":"User Controllable HTML Element Attribute (Potential XSS)","622":"X-Content-Type-Options Header Missing","623":"Missing Anti-clickjacking Header","624":"Missing Anti-clickjacking Header","625":"Strict-Transport-Security Header Not Set","626":"Modern Web Application","627":"Content Security Policy (CSP) Header Not Set","628":"Missing Anti-clickjacking Header","629":"X-Content-Type-Options Header Missing","630":"X-Content-Type-Options Header Missing","631":"Content Security Policy (CSP) Header Not Set","632":"Strict-Transport-Security Header Not Set","633":"Missing Anti-clickjacking Header","634":"X-Content-Type-Options Header Missing","635":"Modern Web Application","636":"Missing Anti-clickjacking Header","637":"Re-examine Cache-control Directives","638":"Content Security Policy (CSP) Header Not Set","639":"Content Security Policy (CSP) Header Not Set","640":"Modern Web Application","641":"X-Content-Type-Options Header Missing","642":"Missing Anti-clickjacking Header","643":"Content Security Policy (CSP) Header Not Set","644":"Content Security Policy (CSP) Header Not Set","645":"Strict-Transport-Security Header Not Set","646":"X-Content-Type-Options Header Missing","647":"Content Security Policy (CSP) Header Not Set","648":"Strict-Transport-Security Header Not Set","649":"Missing Anti-clickjacking Header","650":"Missing Anti-clickjacking Header","651":"Modern Web Application","652":"X-Content-Type-Options Header Missing","653":"Content Security Policy (CSP) Header Not Set","654":"Missing Anti-clickjacking Header","655":"Strict-Transport-Security Header Not Set","656":"Content Security Policy (CSP) Header Not Set","657":"Content Security Policy (CSP) Header Not Set","658":"Strict-Transport-Security Header Not Set","659":"Strict-Transport-Security Header Not Set","660":"Modern Web Application","661":"Missing Anti-clickjacking Header","662":"Modern Web Application","663":"Content Security Policy (CSP) Header Not Set","664":"Modern Web Application","665":"X-Content-Type-Options Header Missing","666":"Missing Anti-clickjacking Header","667":"Information Disclosure - Suspicious Comments","668":"X-Content-Type-Options Header Missing","669":"Content Security Policy (CSP) Header Not Set","670":"Content Security Policy (CSP) Header Not Set","671":"Strict-Transport-Security Header Not Set","672":"Strict-Transport-Security Header Not Set","673":"Missing Anti-clickjacking Header","674":"Content Security Policy (CSP) Header Not Set","675":"X-Content-Type-Options Header Missing","676":"Cross-Domain JavaScript Source File Inclusion","677":"Strict-Transport-Security Header Not Set","678":"X-Content-Type-Options Header Missing","679":"Strict-Transport-Security Header Not Set","680":"X-Content-Type-Options Header Missing","681":"Strict-Transport-Security Header Not Set","682":"Modern Web Application","683":"Content Security Policy (CSP) Header Not Set","684":"Strict-Transport-Security Header Not Set","685":"Content Security Policy (CSP) Header Not Set","686":"Strict-Transport-Security Header Not Set","687":"Modern Web Application","688":"Missing Anti-clickjacking Header","689":"Modern Web Application","690":"Modern Web Application","691":"X-Content-Type-Options Header Missing","692":"X-Content-Type-Options Header Missing","693":"Content Security Policy (CSP) Header Not Set","694":"Modern Web Application","695":"Missing Anti-clickjacking Header","696":"Modern Web Application","697":"X-Content-Type-Options Header Missing","698":"Missing Anti-clickjacking Header","699":"X-Content-Type-Options Header Missing","700":"Strict-Transport-Security Header Not Set","701":"X-Content-Type-Options Header Missing","702":"Strict-Transport-Security Header Not Set","703":"Modern Web Application","704":"X-Content-Type-Options Header Missing","705":"Missing Anti-clickjacking Header","706":"Modern Web Application","707":"Strict-Transport-Security Header Not Set","708":"Content Security Policy (CSP) Header Not Set","709":"Strict-Transport-Security Header Not Set","710":"Strict-Transport-Security Header Not Set","711":"Strict-Transport-Security Header Not Set","712":"Modern Web Application","713":"Missing Anti-clickjacking Header","714":"Strict-Transport-Security Header Not Set","715":"Content Security Policy (CSP) Header Not Set","716":"Strict-Transport-Security Header Not Set","717":"Missing Anti-clickjacking Header","718":"Content Security Policy (CSP) Header Not Set","719":"Missing Anti-clickjacking Header","720":"Content Security Policy (CSP) Header Not Set","721":"Strict-Transport-Security Header Not Set","722":"X-Content-Type-Options Header Missing","723":"Missing Anti-clickjacking Header","724":"Missing Anti-clickjacking Header","725":"Strict-Transport-Security Header Not Set","726":"Content Security Policy (CSP) Header Not Set","727":"X-Content-Type-Options Header Missing","728":"Strict-Transport-Security Header Not Set","729":"X-Content-Type-Options Header Missing","730":"X-Content-Type-Options Header Missing","731":"Missing Anti-clickjacking Header","732":"Strict-Transport-Security Header Not Set","733":"Content Security Policy (CSP) Header Not Set","734":"X-Content-Type-Options Header Missing","735":"Information Disclosure - Suspicious Comments","736":"X-Content-Type-Options Header Missing","737":"Content Security Policy (CSP) Header Not Set","738":"Modern Web Application","739":"Modern Web Application","740":"Content Security Policy (CSP) Header Not Set","741":"X-Content-Type-Options Header Missing","742":"Content Security Policy (CSP) Header Not Set","743":"Missing Anti-clickjacking Header","744":"Content Security Policy (CSP) Header Not Set","745":"X-Content-Type-Options Header Missing","746":"Modern Web Application","747":"Missing Anti-clickjacking Header","748":"X-Content-Type-Options Header Missing","749":"Missing Anti-clickjacking Header","750":"Missing Anti-clickjacking Header","751":"Content Security Policy (CSP) Header Not Set","752":"X-Content-Type-Options Header Missing","753":"Information Disclosure - Suspicious Comments","754":"Strict-Transport-Security Header Not Set","755":"Modern Web Application","756":"Modern Web Application","757":"Strict-Transport-Security Header Not Set","758":"Content Security Policy (CSP) Header Not Set","759":"Strict-Transport-Security Header Not Set","760":"Strict-Transport-Security Header Not Set","761":"Modern Web Application","762":"Content Security Policy (CSP) Header Not Set","763":"Content Security Policy (CSP) Header Not Set","764":"Strict-Transport-Security Header Not Set","765":"Strict-Transport-Security Header Not Set","766":"Missing Anti-clickjacking Header","767":"Content Security Policy (CSP) Header Not Set","768":"Strict-Transport-Security Header Not Set","769":"Content Security Policy (CSP) Header Not Set","770":"Content Security Policy (CSP) Header Not Set","771":"Cross-Domain JavaScript Source File Inclusion","772":"Missing Anti-clickjacking Header","773":"Modern Web Application","774":"Missing Anti-clickjacking Header","775":"Strict-Transport-Security Header Not Set","776":"Strict-Transport-Security Header Not Set","777":"X-Content-Type-Options Header Missing","778":"Modern Web Application","779":"X-Content-Type-Options Header Missing","780":"X-Content-Type-Options Header Missing","781":"Strict-Transport-Security Header Not Set","782":"Information Disclosure - Suspicious Comments","783":"Strict-Transport-Security Header Not Set","784":"X-Content-Type-Options Header Missing","785":"X-Content-Type-Options Header Missing","786":"Content Security Policy (CSP) Header Not Set","787":"Modern Web Application","788":"Strict-Transport-Security Header Not Set","789":"Strict-Transport-Security Header Not Set","790":"Absence of Anti-CSRF Tokens","791":"Strict-Transport-Security Header Not Set","792":"Content Security Policy (CSP) Header Not Set","793":"Strict-Transport-Security Header Not Set","794":"Content Security Policy (CSP) Header Not Set","795":"X-Content-Type-Options Header Missing","796":"X-Content-Type-Options Header Missing","797":"Strict-Transport-Security Header Not Set","798":"Content Security Policy (CSP) Header Not Set","799":"Strict-Transport-Security Header Not Set","800":"Strict-Transport-Security Header Not Set","801":"X-Content-Type-Options Header Missing","802":"Modern Web Application","803":"Strict-Transport-Security Header Not Set","804":"Content Security Policy (CSP) Header Not Set","805":"Strict-Transport-Security Header Not Set","806":"Modern Web Application","807":"Strict-Transport-Security Header Not Set","808":"Content Security Policy (CSP) Header Not Set","809":"X-Content-Type-Options Header Missing","810":"X-Content-Type-Options Header Missing","811":"Modern Web Application","812":"Strict-Transport-Security Header Not Set","813":"X-Content-Type-Options Header Missing","814":"Modern Web Application","815":"Missing Anti-clickjacking Header","816":"Strict-Transport-Security Header Not Set","817":"X-Content-Type-Options Header Missing","818":"Information Disclosure - Suspicious Comments","819":"Content Security Policy (CSP) Header Not Set","820":"Missing Anti-clickjacking Header","821":"Missing Anti-clickjacking Header","822":"Strict-Transport-Security Header Not Set","823":"Missing Anti-clickjacking Header","824":"Information Disclosure - Suspicious Comments","825":"Content Security Policy (CSP) Header Not Set","826":"Strict-Transport-Security Header Not Set","827":"X-Content-Type-Options Header Missing","828":"Strict-Transport-Security Header Not Set","829":"Strict-Transport-Security Header Not Set","830":"Strict-Transport-Security Header Not Set","831":"Missing Anti-clickjacking Header","832":"X-Content-Type-Options Header Missing","833":"Missing Anti-clickjacking Header","834":"Strict-Transport-Security Header Not Set","835":"Missing Anti-clickjacking Header","836":"Content Security Policy (CSP) Header Not Set","837":"Modern Web Application","838":"Missing Anti-clickjacking Header","839":"Strict-Transport-Security Header Not Set","840":"Content Security Policy (CSP) Header Not Set","841":"Content Security Policy (CSP) Header Not Set","842":"X-Content-Type-Options Header Missing","843":"Content Security Policy (CSP) Header Not Set","844":"Modern Web Application","845":"Strict-Transport-Security Header Not Set","846":"X-Content-Type-Options Header Missing","847":"Content Security Policy (CSP) Header Not Set","848":"Missing Anti-clickjacking Header","849":"Missing Anti-clickjacking Header","850":"X-Content-Type-Options Header Missing","851":"Content Security Policy (CSP) Header Not Set","852":"Missing Anti-clickjacking Header","853":"Content Security Policy (CSP) Header Not Set","854":"X-Content-Type-Options Header Missing","855":"Content Security Policy (CSP) Header Not Set","856":"Strict-Transport-Security Header Not Set","857":"Strict-Transport-Security Header Not Set","858":"Content Security Policy (CSP) Header Not Set","859":"Missing Anti-clickjacking Header","860":"Strict-Transport-Security Header Not Set","861":"Strict-Transport-Security Header Not Set","862":"Strict-Transport-Security Header Not Set","863":"Content Security Policy (CSP) Header Not Set","864":"Strict-Transport-Security Header Not Set","865":"Missing Anti-clickjacking Header","866":"Missing Anti-clickjacking Header","867":"Content Security Policy (CSP) Header Not Set","868":"Strict-Transport-Security Header Not Set","869":"Content Security Policy (CSP) Header Not Set","870":"Strict-Transport-Security Header Not Set","871":"Content Security Policy (CSP) Header Not Set","872":"Content Security Policy (CSP) Header Not Set","873":"Modern Web Application","874":"Missing Anti-clickjacking Header","875":"X-Content-Type-Options Header Missing","876":"Modern Web Application","877":"X-Content-Type-Options Header Missing","878":"Modern Web Application","879":"X-Content-Type-Options Header Missing","880":"Content Security Policy (CSP) Header Not Set","881":"X-Content-Type-Options Header Missing","882":"X-Content-Type-Options Header Missing","883":"X-Content-Type-Options Header Missing","884":"Strict-Transport-Security Header Not Set","885":"Content Security Policy (CSP) Header Not Set","886":"Content Security Policy (CSP) Header Not Set","887":"Missing Anti-clickjacking Header","888":"Strict-Transport-Security Header Not Set","889":"Modern Web Application","890":"X-Content-Type-Options Header Missing","891":"Strict-Transport-Security Header Not Set","892":"Modern Web Application","893":"Strict-Transport-Security Header Not Set","894":"Content Security Policy (CSP) Header Not Set","895":"Strict-Transport-Security Header Not Set","896":"Missing Anti-clickjacking Header","897":"Strict-Transport-Security Header Not Set","898":"Missing Anti-clickjacking Header","899":"Modern Web Application","900":"Missing Anti-clickjacking Header","901":"Missing Anti-clickjacking Header","902":"Missing Anti-clickjacking Header","903":"Missing Anti-clickjacking Header","904":"Strict-Transport-Security Header Not Set","905":"Content Security Policy (CSP) Header Not Set","906":"Modern Web Application","907":"X-Content-Type-Options Header Missing","908":"Content Security Policy (CSP) Header Not Set","909":"Strict-Transport-Security Header Not Set","910":"Missing Anti-clickjacking Header","911":"Strict-Transport-Security Header Not Set","912":"Missing Anti-clickjacking Header","913":"X-Content-Type-Options Header Missing","914":"Strict-Transport-Security Header Not Set","915":"X-Content-Type-Options Header Missing","916":"Content Security Policy (CSP) Header Not Set","917":"X-Content-Type-Options Header Missing","918":"Content Security Policy (CSP) Header Not Set","919":"Strict-Transport-Security Header Not Set","920":"Content Security Policy (CSP) Header Not Set","921":"Content Security Policy (CSP) Header Not Set","922":"Content Security Policy (CSP) Header Not Set","923":"X-Content-Type-Options Header Missing","924":"Content Security Policy (CSP) Header Not Set","925":"Strict-Transport-Security Header Not Set","926":"Strict-Transport-Security Header Not Set","927":"X-Content-Type-Options Header Missing","928":"Modern Web Application","929":"Missing Anti-clickjacking Header","930":"Content Security Policy (CSP) Header Not Set","931":"X-Content-Type-Options Header Missing","932":"Content Security Policy (CSP) Header Not Set","933":"Missing Anti-clickjacking Header","934":"X-Content-Type-Options Header Missing","935":"Missing Anti-clickjacking Header","936":"Modern Web Application","937":"Strict-Transport-Security Header Not Set","938":"Missing Anti-clickjacking Header","939":"X-Content-Type-Options Header Missing","940":"Modern Web Application","941":"Modern Web Application","942":"Strict-Transport-Security Header Not Set","943":"Missing Anti-clickjacking Header","944":"Modern Web Application","945":"X-Content-Type-Options Header Missing","946":"Missing Anti-clickjacking Header","947":"Strict-Transport-Security Header Not Set","948":"Missing Anti-clickjacking Header","949":"Content Security Policy (CSP) Header Not Set","950":"Strict-Transport-Security Header Not Set","951":"Missing Anti-clickjacking Header","952":"Modern Web Application","953":"Content Security Policy (CSP) Header Not Set","954":"Missing Anti-clickjacking Header","955":"Content Security Policy (CSP) Header Not Set","956":"Strict-Transport-Security Header Not Set","957":"X-Content-Type-Options Header Missing","958":"Content Security Policy (CSP) Header Not Set","959":"Strict-Transport-Security Header Not Set","960":"Missing Anti-clickjacking Header","961":"Strict-Transport-Security Header Not Set","962":"X-Content-Type-Options Header Missing","963":"Strict-Transport-Security Header Not Set","964":"Content Security Policy (CSP) Header Not Set","965":"Missing Anti-clickjacking Header","966":"Content Security Policy (CSP) Header Not Set","967":"X-Content-Type-Options Header Missing","968":"Modern Web Application","969":"Content Security Policy (CSP) Header Not Set","970":"X-Content-Type-Options Header Missing","971":"Content Security Policy (CSP) Header Not Set","972":"Strict-Transport-Security Header Not Set","973":"Modern Web Application","974":"Content Security Policy (CSP) Header Not Set","975":"Strict-Transport-Security Header Not Set","976":"X-Content-Type-Options Header Missing","977":"Missing Anti-clickjacking Header","978":"Modern Web Application","979":"X-Content-Type-Options Header Missing","980":"Content Security Policy (CSP) Header Not Set","981":"X-Content-Type-Options Header Missing","982":"Missing Anti-clickjacking Header","983":"X-Content-Type-Options Header Missing","984":"Modern Web Application","985":"Modern Web Application","986":"Content Security Policy (CSP) Header Not Set","987":"Missing Anti-clickjacking Header","988":"Strict-Transport-Security Header Not Set","989":"Modern Web Application","990":"Missing Anti-clickjacking Header","991":"Modern Web Application","992":"X-Content-Type-Options Header Missing","993":"Strict-Transport-Security Header Not Set","994":"Modern Web Application","995":"X-Content-Type-Options Header Missing","996":"Missing Anti-clickjacking Header","997":"Strict-Transport-Security Header Not Set","998":"Content Security Policy (CSP) Header Not Set","999":"Missing Anti-clickjacking Header","1000":"Modern Web Application","1001":"Missing Anti-clickjacking Header","1002":"Content Security Policy (CSP) Header Not Set","1003":"Strict-Transport-Security Header Not Set","1004":"Missing Anti-clickjacking Header","1005":"Strict-Transport-Security Header Not Set","1006":"Strict-Transport-Security Header Not Set","1007":"Content Security Policy (CSP) Header Not Set","1008":"X-Content-Type-Options Header Missing","1009":"Strict-Transport-Security Header Not Set","1010":"Content Security Policy (CSP) Header Not Set","1011":"Strict-Transport-Security Header Not Set","1012":"Missing Anti-clickjacking Header","1013":"X-Content-Type-Options Header Missing","1014":"Strict-Transport-Security Header Not Set","1015":"Missing Anti-clickjacking Header","1016":"Content Security Policy (CSP) Header Not Set","1017":"X-Content-Type-Options Header Missing","1018":"Modern Web Application","1019":"Content Security Policy (CSP) Header Not Set","1020":"Strict-Transport-Security Header Not Set","1021":"Content Security Policy (CSP) Header Not Set","1022":"Modern Web Application","1023":"X-Content-Type-Options Header Missing","1024":"Content Security Policy (CSP) Header Not Set","1025":"X-Content-Type-Options Header Missing","1026":"X-Content-Type-Options Header Missing","1027":"Modern Web Application","1028":"X-Content-Type-Options Header Missing","1029":"Missing Anti-clickjacking Header","1030":"Modern Web Application","1031":"X-Content-Type-Options Header Missing","1032":"Content Security Policy (CSP) Header Not Set","1033":"Missing Anti-clickjacking Header","1034":"X-Content-Type-Options Header Missing","1035":"Content Security Policy (CSP) Header Not Set","1036":"Modern Web Application","1037":"Application Error Disclosure","1038":"Strict-Transport-Security Header Not Set","1039":"Strict-Transport-Security Header Not Set","1040":"X-Content-Type-Options Header Missing","1041":"Modern Web Application","1042":"Strict-Transport-Security Header Not Set","1043":"Modern Web Application","1044":"Missing Anti-clickjacking Header","1045":"Missing Anti-clickjacking Header","1046":"Strict-Transport-Security Header Not Set","1047":"Missing Anti-clickjacking Header","1048":"Missing Anti-clickjacking Header","1049":"Content Security Policy (CSP) Header Not Set","1050":"Strict-Transport-Security Header Not Set","1051":"Missing Anti-clickjacking Header","1052":"Modern Web Application","1053":"Content Security Policy (CSP) Header Not Set","1054":"Missing Anti-clickjacking Header","1055":"Modern Web Application","1056":"Strict-Transport-Security Header Not Set","1057":"Content Security Policy (CSP) Header Not Set","1058":"X-Content-Type-Options Header Missing","1059":"X-Content-Type-Options Header Missing","1060":"Missing Anti-clickjacking Header","1061":"Strict-Transport-Security Header Not Set","1062":"X-Content-Type-Options Header Missing","1063":"Strict-Transport-Security Header Not Set","1064":"Content Security Policy (CSP) Header Not Set","1065":"Content Security Policy (CSP) Header Not Set","1066":"X-Content-Type-Options Header Missing","1067":"Content Security Policy (CSP) Header Not Set","1068":"Content Security Policy (CSP) Header Not Set","1069":"Modern Web Application","1070":"X-Content-Type-Options Header Missing","1071":"Content Security Policy (CSP) Header Not Set","1072":"Strict-Transport-Security Header Not Set","1073":"Strict-Transport-Security Header Not Set","1074":"Content Security Policy (CSP) Header Not Set","1075":"Strict-Transport-Security Header Not Set","1076":"X-Content-Type-Options Header Missing","1077":"Strict-Transport-Security Header Not Set","1078":"Missing Anti-clickjacking Header","1079":"Missing Anti-clickjacking Header","1080":"Content Security Policy (CSP) Header Not Set","1081":"X-Content-Type-Options Header Missing","1082":"Missing Anti-clickjacking Header","1083":"X-Content-Type-Options Header Missing","1084":"Modern Web Application","1085":"Modern Web Application","1086":"Missing Anti-clickjacking Header","1087":"Modern Web Application","1088":"Modern Web Application","1089":"Strict-Transport-Security Header Not Set","1090":"Missing Anti-clickjacking Header","1091":"Modern Web Application","1092":"X-Content-Type-Options Header Missing","1093":"X-Content-Type-Options Header Missing","1094":"X-Content-Type-Options Header Missing","1095":"Modern Web Application","1096":"Missing Anti-clickjacking Header","1097":"Missing Anti-clickjacking Header","1098":"Content Security Policy (CSP) Header Not Set","1099":"Content Security Policy (CSP) Header Not Set","1100":"Modern Web Application","1101":"Missing Anti-clickjacking Header","1102":"Content Security Policy (CSP) Header Not Set","1103":"Strict-Transport-Security Header Not Set","1104":"Missing Anti-clickjacking Header","1105":"Strict-Transport-Security Header Not Set","1106":"Content Security Policy (CSP) Header Not Set","1107":"Strict-Transport-Security Header Not Set","1108":"Strict-Transport-Security Header Not Set","1109":"X-Content-Type-Options Header Missing","1110":"Content Security Policy (CSP) Header Not Set","1111":"Strict-Transport-Security Header Not Set","1112":"Missing Anti-clickjacking Header","1113":"Missing Anti-clickjacking Header","1114":"Strict-Transport-Security Header Not Set","1115":"Missing Anti-clickjacking Header","1116":"Content Security Policy (CSP) Header Not Set","1117":"Content Security Policy (CSP) Header Not Set","1118":"Strict-Transport-Security Header Not Set","1119":"Modern Web Application","1120":"Modern Web Application","1121":"Content Security Policy (CSP) Header Not Set","1122":"Modern Web Application","1123":"X-Content-Type-Options Header Missing","1124":"X-Content-Type-Options Header Missing","1125":"Content Security Policy (CSP) Header Not Set","1126":"Modern Web Application","1127":"X-Content-Type-Options Header Missing","1128":"X-Content-Type-Options Header Missing","1129":"Missing Anti-clickjacking Header","1130":"Modern Web Application","1131":"X-Content-Type-Options Header Missing","1132":"Content Security Policy (CSP) Header Not Set","1133":"Content Security Policy (CSP) Header Not Set","1134":"X-Content-Type-Options Header Missing","1135":"Content Security Policy (CSP) Header Not Set","1136":"Strict-Transport-Security Header Not Set","1137":"Modern Web Application","1138":"Strict-Transport-Security Header Not Set","1139":"Strict-Transport-Security Header Not Set","1140":"X-Content-Type-Options Header Missing","1141":"Strict-Transport-Security Header Not Set","1142":"Strict-Transport-Security Header Not Set","1143":"Missing Anti-clickjacking Header","1144":"Missing Anti-clickjacking Header","1145":"Strict-Transport-Security Header Not Set","1146":"Strict-Transport-Security Header Not Set","1147":"Missing Anti-clickjacking Header","1148":"Missing Anti-clickjacking Header","1149":"Strict-Transport-Security Header Not Set","1150":"Content Security Policy (CSP) Header Not Set","1151":"Missing Anti-clickjacking Header","1152":"Modern Web Application","1153":"Strict-Transport-Security Header Not Set","1154":"Missing Anti-clickjacking Header","1155":"Strict-Transport-Security Header Not Set","1156":"X-Content-Type-Options Header Missing","1157":"Strict-Transport-Security Header Not Set","1158":"X-Content-Type-Options Header Missing","1159":"X-Content-Type-Options Header Missing","1160":"Missing Anti-clickjacking Header","1161":"X-Content-Type-Options Header Missing","1162":"X-Content-Type-Options Header Missing","1163":"Content Security Policy (CSP) Header Not Set","1164":"X-Content-Type-Options Header Missing","1165":"Content Security Policy (CSP) Header Not Set","1166":"X-Content-Type-Options Header Missing","1167":"Content Security Policy (CSP) Header Not Set","1168":"Content Security Policy (CSP) Header Not Set","1169":"X-Content-Type-Options Header Missing","1170":"Modern Web Application","1171":"Content Security Policy (CSP) Header Not Set","1172":"Strict-Transport-Security Header Not Set","1173":"X-Content-Type-Options Header Missing","1174":"Content Security Policy (CSP) Header Not Set","1175":"X-Content-Type-Options Header Missing","1176":"Missing Anti-clickjacking Header","1177":"X-Content-Type-Options Header Missing","1178":"Missing Anti-clickjacking Header","1179":"Missing Anti-clickjacking Header","1180":"Re-examine Cache-control Directives","1181":"Missing Anti-clickjacking Header","1182":"Strict-Transport-Security Header Not Set","1183":"Strict-Transport-Security Header Not Set","1184":"Missing Anti-clickjacking Header","1185":"Strict-Transport-Security Header Not Set","1186":"Missing Anti-clickjacking Header","1187":"Modern Web Application","1188":"Modern Web Application","1189":"Strict-Transport-Security Header Not Set","1190":"Modern Web Application","1191":"X-Content-Type-Options Header Missing","1192":"Modern Web Application","1193":"Content Security Policy (CSP) Header Not Set","1194":"Content Security Policy (CSP) Header Not Set","1195":"Content Security Policy (CSP) Header Not Set","1196":"Content Security Policy (CSP) Header Not Set","1197":"Content Security Policy (CSP) Header Not Set","1198":"X-Content-Type-Options Header Missing","1199":"X-Content-Type-Options Header Missing","1200":"Content Security Policy (CSP) Header Not Set","1201":"X-Content-Type-Options Header Missing","1202":"Content Security Policy (CSP) Header Not Set","1203":"Strict-Transport-Security Header Not Set","1204":"Strict-Transport-Security Header Not Set","1205":"X-Content-Type-Options Header Missing","1206":"Strict-Transport-Security Header Not Set","1207":"Strict-Transport-Security Header Not Set","1208":"Modern Web Application","1209":"Modern Web Application","1210":"Strict-Transport-Security Header Not Set","1211":"Modern Web Application","1212":"Strict-Transport-Security Header Not Set","1213":"Modern Web Application","1214":"Modern Web Application","1215":"X-Content-Type-Options Header Missing","1216":"X-Content-Type-Options Header Missing","1217":"X-Content-Type-Options Header Missing","1218":"X-Content-Type-Options Header Missing","1219":"Strict-Transport-Security Header Not Set","1220":"Strict-Transport-Security Header Not Set","1221":"X-Content-Type-Options Header Missing","1222":"Strict-Transport-Security Header Not Set","1223":"User Controllable JavaScript Event (XSS)","1224":"Strict-Transport-Security Header Not Set","1225":"Strict-Transport-Security Header Not Set","1226":"X-Content-Type-Options Header Missing","1227":"X-Content-Type-Options Header Missing","1228":"X-Content-Type-Options Header Missing","1229":"X-Content-Type-Options Header Missing","1230":"X-Content-Type-Options Header Missing","1231":"X-Content-Type-Options Header Missing","1232":"Missing Anti-clickjacking Header","1233":"Missing Anti-clickjacking Header","1234":"Missing Anti-clickjacking Header","1235":"Missing Anti-clickjacking Header","1236":"Missing Anti-clickjacking Header","1237":"Missing Anti-clickjacking Header","1238":"Missing Anti-clickjacking Header","1239":"Missing Anti-clickjacking Header","1240":"Missing Anti-clickjacking Header","1241":"Missing Anti-clickjacking Header","1242":"Strict-Transport-Security Header Not Set","1243":"Missing Anti-clickjacking Header","1244":"Missing Anti-clickjacking Header","1245":"Missing Anti-clickjacking Header","1246":"Missing Anti-clickjacking Header","1247":"Missing Anti-clickjacking Header","1248":"Content Security Policy (CSP) Header Not Set","1249":"Missing Anti-clickjacking Header","1250":"Missing Anti-clickjacking Header","1251":"Content Security Policy (CSP) Header Not Set","1252":"Strict-Transport-Security Header Not Set","1253":"Strict-Transport-Security Header Not Set","1254":"Content Security Policy (CSP) Header Not Set","1255":"Content Security Policy (CSP) Header Not Set","1256":"X-Content-Type-Options Header Missing","1257":"Content Security Policy (CSP) Header Not Set","1258":"Content Security Policy (CSP) Header Not Set","1259":"Content Security Policy (CSP) Header Not Set","1260":"Content Security Policy (CSP) Header Not Set","1261":"Content Security Policy (CSP) Header Not Set","1262":"Content Security Policy (CSP) Header Not Set","1263":"Content Security Policy (CSP) Header Not Set","1264":"Content Security Policy (CSP) Header Not Set","1265":"Content Security Policy (CSP) Header Not Set","1266":"Content Security Policy (CSP) Header Not Set","1267":"Content Security Policy (CSP) Header Not Set","1268":"Modern Web Application","1269":"Content Security Policy (CSP) Header Not Set","1270":"Content Security Policy (CSP) Header Not Set","1271":"Missing Anti-clickjacking Header","1272":"Strict-Transport-Security Header Not Set","1273":"Modern Web Application","1274":"Content Security Policy (CSP) Header Not Set","1275":"Modern Web Application","1276":"Cross-Domain JavaScript Source File Inclusion","1277":"Missing Anti-clickjacking Header","1278":"Modern Web Application","1279":"Modern Web Application","1280":"Strict-Transport-Security Header Not Set","1281":"Strict-Transport-Security Header Not Set","1282":"Modern Web Application","1283":"Modern Web Application","1284":"Cross-Domain JavaScript Source File Inclusion","1285":"Modern Web Application","1286":"Strict-Transport-Security Header Not Set","1287":"Strict-Transport-Security Header Not Set","1288":"Cross-Domain JavaScript Source File Inclusion","1289":"Modern Web Application","1290":"Strict-Transport-Security Header Not Set","1291":"Modern Web Application","1292":"User Controllable JavaScript Event (XSS)","1293":"Content Security Policy (CSP) Header Not Set","1294":"Strict-Transport-Security Header Not Set","1295":"Strict-Transport-Security Header Not Set","1296":"Strict-Transport-Security Header Not Set","1297":"Content Security Policy (CSP) Header Not Set","1298":"Secure Pages Include Mixed Content (Including Scripts)","1299":"Strict-Transport-Security Header Not Set","1300":"Strict-Transport-Security Header Not Set","1301":"X-Content-Type-Options Header Missing","1302":"User Controllable JavaScript Event (XSS)","1303":"Strict-Transport-Security Header Not Set","1304":"Secure Pages Include Mixed Content (Including Scripts)","1305":"Strict-Transport-Security Header Not Set","1306":"X-Content-Type-Options Header Missing","1307":"Strict-Transport-Security Header Not Set","1308":"X-Content-Type-Options Header Missing","1309":"Secure Pages Include Mixed Content (Including Scripts)","1310":"Strict-Transport-Security Header Not Set","1311":"X-Content-Type-Options Header Missing","1312":"X-Content-Type-Options Header Missing","1313":"Strict-Transport-Security Header Not Set","1314":"Missing Anti-clickjacking Header","1315":"X-Content-Type-Options Header Missing","1316":"Modern Web Application","1317":"X-Content-Type-Options Header Missing","1318":"X-Content-Type-Options Header Missing","1319":"X-Content-Type-Options Header Missing","1320":"Strict-Transport-Security Header Not Set","1321":"X-Content-Type-Options Header Missing","1322":"Missing Anti-clickjacking Header","1323":"X-Content-Type-Options Header Missing","1324":"Modern Web Application","1325":"X-Content-Type-Options Header Missing","1326":"Missing Anti-clickjacking Header","1327":"Modern Web Application","1328":"X-Content-Type-Options Header Missing","1329":"Missing Anti-clickjacking Header","1330":"X-Content-Type-Options Header Missing","1331":"Missing Anti-clickjacking Header","1332":"X-Content-Type-Options Header Missing","1333":"Content Security Policy (CSP) Header Not Set","1334":"Strict-Transport-Security Header Not Set","1335":"Strict-Transport-Security Header Not Set","1336":"Missing Anti-clickjacking Header","1337":"Strict-Transport-Security Header Not Set","1338":"X-Content-Type-Options Header Missing","1339":"Strict-Transport-Security Header Not Set","1340":"Content Security Policy (CSP) Header Not Set","1341":"Missing Anti-clickjacking Header","1342":"Content Security Policy (CSP) Header Not Set","1343":"Strict-Transport-Security Header Not Set","1344":"Missing Anti-clickjacking Header","1345":"Content Security Policy (CSP) Header Not Set","1346":"Strict-Transport-Security Header Not Set","1347":"Content Security Policy (CSP) Header Not Set","1348":"Content Security Policy (CSP) Header Not Set","1349":"Missing Anti-clickjacking Header","1350":"Content Security Policy (CSP) Header Not Set","1351":"Modern Web Application","1352":"Missing Anti-clickjacking Header","1353":"X-Content-Type-Options Header Missing","1354":"X-Content-Type-Options Header Missing","1355":"Content Security Policy (CSP) Header Not Set","1356":"X-Content-Type-Options Header Missing","1357":"X-Content-Type-Options Header Missing","1358":"Strict-Transport-Security Header Not Set","1359":"Strict-Transport-Security Header Not Set","1360":"X-Content-Type-Options Header Missing","1361":"Strict-Transport-Security Header Not Set","1362":"Content Security Policy (CSP) Header Not Set","1363":"Strict-Transport-Security Header Not Set","1364":"Content Security Policy (CSP) Header Not Set","1365":"X-Content-Type-Options Header Missing","1366":"Strict-Transport-Security Header Not Set","1367":"Strict-Transport-Security Header Not Set","1368":"Strict-Transport-Security Header Not Set","1369":"Content Security Policy (CSP) Header Not Set","1370":"Strict-Transport-Security Header Not Set","1371":"Re-examine Cache-control Directives","1372":"Strict-Transport-Security Header Not Set","1373":"Strict-Transport-Security Header Not Set","1374":"Strict-Transport-Security Header Not Set","1375":"Strict-Transport-Security Header Not Set","1376":"X-Content-Type-Options Header Missing","1377":"Strict-Transport-Security Header Not Set","1378":"Strict-Transport-Security Header Not Set","1379":"X-Content-Type-Options Header Missing","1380":"Strict-Transport-Security Header Not Set","1381":"Strict-Transport-Security Header Not Set","1382":"X-Content-Type-Options Header Missing","1383":"Absence of Anti-CSRF Tokens","1384":"Strict-Transport-Security Header Not Set","1385":"X-Content-Type-Options Header Missing","1386":"Strict-Transport-Security Header Not Set","1387":"X-Content-Type-Options Header Missing","1388":"Strict-Transport-Security Header Not Set","1389":"Content Security Policy (CSP) Header Not Set","1390":"X-Content-Type-Options Header Missing","1391":"X-Content-Type-Options Header Missing","1392":"X-Content-Type-Options Header Missing","1393":"X-Content-Type-Options Header Missing","1394":"X-Content-Type-Options Header Missing","1395":"X-Content-Type-Options Header Missing","1396":"X-Content-Type-Options Header Missing","1397":"Strict-Transport-Security Header Not Set","1398":"X-Content-Type-Options Header Missing","1399":"X-Content-Type-Options Header Missing","1400":"Strict-Transport-Security Header Not Set","1401":"Application Error Disclosure","1402":"Strict-Transport-Security Header Not Set","1403":"X-Content-Type-Options Header Missing","1404":"X-Content-Type-Options Header Missing","1405":"Strict-Transport-Security Header Not Set","1406":"X-Content-Type-Options Header Missing","1407":"Missing Anti-clickjacking Header","1408":"Strict-Transport-Security Header Not Set","1409":"Strict-Transport-Security Header Not Set","1410":"Strict-Transport-Security Header Not Set","1411":"X-Content-Type-Options Header Missing","1412":"X-Content-Type-Options Header Missing","1413":"Content Security Policy (CSP) Header Not Set","1414":"X-Content-Type-Options Header Missing","1415":"X-Content-Type-Options Header Missing","1416":"Content Security Policy (CSP) Header Not Set","1417":"X-Content-Type-Options Header Missing","1418":"Strict-Transport-Security Header Not Set","1419":"Absence of Anti-CSRF Tokens","1420":"Strict-Transport-Security Header Not Set","1421":"X-Content-Type-Options Header Missing","1422":"Missing Anti-clickjacking Header","1423":"Strict-Transport-Security Header Not Set","1424":"Strict-Transport-Security Header Not Set","1425":"Strict-Transport-Security Header Not Set","1426":"Re-examine Cache-control Directives","1427":"Content Security Policy (CSP) Header Not Set","1428":"Strict-Transport-Security Header Not Set","1429":"X-Content-Type-Options Header Missing","1430":"Strict-Transport-Security Header Not Set","1431":"Strict-Transport-Security Header Not Set","1432":"Strict-Transport-Security Header Not Set","1433":"Strict-Transport-Security Header Not Set","1434":"Strict-Transport-Security Header Not Set","1435":"Strict-Transport-Security Header Not Set","1436":"Strict-Transport-Security Header Not Set","1437":"Strict-Transport-Security Header Not Set","1438":"Strict-Transport-Security Header Not Set","1439":"Strict-Transport-Security Header Not Set","1440":"Strict-Transport-Security Header Not Set","1441":"Missing Anti-clickjacking Header","1442":"Strict-Transport-Security Header Not Set","1443":"Strict-Transport-Security Header Not Set","1444":"Missing Anti-clickjacking Header","1445":"Re-examine Cache-control Directives","1446":"Re-examine Cache-control Directives","1447":"Content Security Policy (CSP) Header Not Set","1448":"Missing Anti-clickjacking Header","1449":"Content Security Policy (CSP) Header Not Set","1450":"Private IP Disclosure","1451":"Strict-Transport-Security Header Not Set","1452":"Re-examine Cache-control Directives","1453":"Strict-Transport-Security Header Not Set","1454":"Strict-Transport-Security Header Not Set","1455":"Content Security Policy (CSP) Header Not Set","1456":"X-Content-Type-Options Header Missing","1457":"Strict-Transport-Security Header Not Set","1458":"X-Content-Type-Options Header Missing","1459":"Strict-Transport-Security Header Not Set","1460":"Missing Anti-clickjacking Header","1461":"Strict-Transport-Security Header Not Set","1462":"Content Security Policy (CSP) Header Not Set","1463":"Missing Anti-clickjacking Header","1464":"Strict-Transport-Security Header Not Set","1465":"Strict-Transport-Security Header Not Set","1466":"Strict-Transport-Security Header Not Set","1467":"X-Content-Type-Options Header Missing","1468":"Re-examine Cache-control Directives","1469":"Strict-Transport-Security Header Not Set","1470":"Content Security Policy (CSP) Header Not Set","1471":"Strict-Transport-Security Header Not Set","1472":"Strict-Transport-Security Header Not Set","1473":"Application Error Disclosure","1474":"Content Security Policy (CSP) Header Not Set","1475":"Strict-Transport-Security Header Not Set","1476":"Modern Web Application","1477":"Content Security Policy (CSP) Header Not Set","1478":"Strict-Transport-Security Header Not Set","1479":"Missing Anti-clickjacking Header","1480":"Strict-Transport-Security Header Not Set","1481":"Strict-Transport-Security Header Not Set","1482":"X-Content-Type-Options Header Missing","1483":"Strict-Transport-Security Header Not Set","1484":"Content Security Policy (CSP) Header Not Set","1485":"X-Content-Type-Options Header Missing","1486":"Missing Anti-clickjacking Header","1487":"Missing Anti-clickjacking Header","1488":"Application Error Disclosure","1489":"Missing Anti-clickjacking Header","1490":"Strict-Transport-Security Header Not Set","1491":"Modern Web Application","1492":"Content Security Policy (CSP) Header Not Set","1493":"Content Security Policy (CSP) Header Not Set","1494":"Content Security Policy (CSP) Header Not Set","1495":"Strict-Transport-Security Header Not Set","1496":"Re-examine Cache-control Directives","1497":"Modern Web Application","1498":"Modern Web Application","1499":"Strict-Transport-Security Header Not Set","1500":"X-Content-Type-Options Header Missing","1501":"Content Security Policy (CSP) Header Not Set","1502":"Strict-Transport-Security Header Not Set","1503":"Strict-Transport-Security Header Not Set","1504":"X-Content-Type-Options Header Missing","1505":"Strict-Transport-Security Header Not Set","1506":"X-Content-Type-Options Header Missing","1507":"X-Content-Type-Options Header Missing","1508":"Missing Anti-clickjacking Header","1509":"Strict-Transport-Security Header Not Set","1510":"Strict-Transport-Security Header Not Set","1511":"Strict-Transport-Security Header Not Set","1512":"Strict-Transport-Security Header Not Set","1513":"Strict-Transport-Security Header Not Set","1514":"Strict-Transport-Security Header Not Set","1515":"Strict-Transport-Security Header Not Set","1516":"Missing Anti-clickjacking Header","1517":"Application Error Disclosure","1518":"Application Error Disclosure","1519":"Content Security Policy (CSP) Header Not Set","1520":"Content Security Policy (CSP) Header Not Set","1521":"Content Security Policy (CSP) Header Not Set","1522":"Modern Web Application","1523":"Content Security Policy (CSP) Header Not Set","1524":"Strict-Transport-Security Header Not Set","1525":"Strict-Transport-Security Header Not Set","1526":"Strict-Transport-Security Header Not Set","1527":"Modern Web Application","1528":"Missing Anti-clickjacking Header","1529":"Strict-Transport-Security Header Not Set","1530":"X-Content-Type-Options Header Missing","1531":"Strict-Transport-Security Header Not Set","1532":"Content Security Policy (CSP) Header Not Set","1533":"Missing Anti-clickjacking Header","1534":"Strict-Transport-Security Header Not Set","1535":"Missing Anti-clickjacking Header","1536":"Strict-Transport-Security Header Not Set","1537":"X-Content-Type-Options Header Missing","1538":"Missing Anti-clickjacking Header","1539":"Modern Web Application","1540":"Strict-Transport-Security Header Not Set","1541":"Content Security Policy (CSP) Header Not Set","1542":"Content Security Policy (CSP) Header Not Set","1543":"Content Security Policy (CSP) Header Not Set","1544":"Strict-Transport-Security Header Not Set","1545":"Strict-Transport-Security Header Not Set","1546":"Application Error Disclosure","1547":"Modern Web Application","1548":"Modern Web Application","1549":"Modern Web Application","1550":"X-Content-Type-Options Header Missing","1551":"Missing Anti-clickjacking Header","1552":"Content Security Policy (CSP) Header Not Set","1553":"Strict-Transport-Security Header Not Set","1554":"Strict-Transport-Security Header Not Set","1555":"Strict-Transport-Security Header Not Set","1556":"Content Security Policy (CSP) Header Not Set","1557":"Strict-Transport-Security Header Not Set","1558":"Strict-Transport-Security Header Not Set","1559":"X-Content-Type-Options Header Missing","1560":"X-Content-Type-Options Header Missing","1561":"X-Content-Type-Options Header Missing","1562":"Modern Web Application","1563":"Strict-Transport-Security Header Not Set","1564":"Strict-Transport-Security Header Not Set","1565":"Strict-Transport-Security Header Not Set","1566":"Strict-Transport-Security Header Not Set","1567":"Strict-Transport-Security Header Not Set","1568":"Missing Anti-clickjacking Header","1569":"Strict-Transport-Security Header Not Set","1570":"Application Error Disclosure","1571":"Strict-Transport-Security Header Not Set","1572":"Strict-Transport-Security Header Not Set","1573":"Application Error Disclosure","1574":"X-Content-Type-Options Header Missing","1575":"Re-examine Cache-control Directives","1576":"Content Security Policy (CSP) Header Not Set","1577":"Content Security Policy (CSP) Header Not Set","1578":"Content Security Policy (CSP) Header Not Set","1579":"Strict-Transport-Security Header Not Set","1580":"Strict-Transport-Security Header Not Set","1581":"Strict-Transport-Security Header Not Set","1582":"X-Content-Type-Options Header Missing","1583":"Strict-Transport-Security Header Not Set","1584":"Missing Anti-clickjacking Header","1585":"Missing Anti-clickjacking Header","1586":"Missing Anti-clickjacking Header","1587":"Re-examine Cache-control Directives","1588":"Missing Anti-clickjacking Header","1589":"Missing Anti-clickjacking Header","1590":"Re-examine Cache-control Directives","1591":"Content Security Policy (CSP) Header Not Set","1592":"Re-examine Cache-control Directives","1593":"Session Management Response Identified","1594":"Re-examine Cache-control Directives","1595":"Content Security Policy (CSP) Header Not Set","1596":"Session Management Response Identified","1597":"Re-examine Cache-control Directives","1598":"Strict-Transport-Security Header Not Set","1599":"Content Security Policy (CSP) Header Not Set","1600":"Strict-Transport-Security Header Not Set","1601":"Content Security Policy (CSP) Header Not Set","1602":"Application Error Disclosure","1603":"Strict-Transport-Security Header Not Set","1604":"Content Security Policy (CSP) Header Not Set","1605":"X-Content-Type-Options Header Missing","1606":"Strict-Transport-Security Header Not Set","1607":"Missing Anti-clickjacking Header","1608":"Application Error Disclosure","1609":"Secure Pages Include Mixed Content (Including Scripts)","1610":"Content Security Policy (CSP) Header Not Set","1611":"X-Content-Type-Options Header Missing","1612":"Strict-Transport-Security Header Not Set","1613":"Application Error Disclosure","1614":"X-Content-Type-Options Header Missing","1615":"Content Security Policy (CSP) Header Not Set","1616":"Modern Web Application","1617":"Application Error Disclosure","1618":"Re-examine Cache-control Directives","1619":"Strict-Transport-Security Header Not Set","1620":"Application Error Disclosure","1621":"Application Error Disclosure","1622":"X-Content-Type-Options Header Missing","1623":"Content Security Policy (CSP) Header Not Set","1624":"Strict-Transport-Security Header Not Set","1625":"Strict-Transport-Security Header Not Set","1626":"Content Security Policy (CSP) Header Not Set","1627":"Content Security Policy (CSP) Header Not Set","1628":"Application Error Disclosure","1629":"Content Security Policy (CSP) Header Not Set","1630":"Content Security Policy (CSP) Header Not Set","1631":"Application Error Disclosure","1632":"Strict-Transport-Security Header Not Set","1633":"Application Error Disclosure","1634":"X-Content-Type-Options Header Missing","1635":"Strict-Transport-Security Header Not Set","1636":"Content Security Policy (CSP) Header Not Set","1637":"Strict-Transport-Security Header Not Set","1638":"Strict-Transport-Security Header Not Set","1639":"Strict-Transport-Security Header Not Set","1640":"Content Security Policy (CSP) Header Not Set","1641":"Application Error Disclosure","1642":"Application Error Disclosure","1643":"Application Error Disclosure","1644":"Content Security Policy (CSP) Header Not Set","1645":"Application Error Disclosure","1646":"Strict-Transport-Security Header Not Set","1647":"X-Content-Type-Options Header Missing","1648":"Content Security Policy (CSP) Header Not Set","1649":"Strict-Transport-Security Header Not Set","1650":"Content Security Policy (CSP) Header Not Set","1651":"Content Security Policy (CSP) Header Not Set","1652":"Strict-Transport-Security Header Not Set","1653":"Content Security Policy (CSP) Header Not Set","1654":"Missing Anti-clickjacking Header","1655":"Strict-Transport-Security Header Not Set","1656":"Strict-Transport-Security Header Not Set","1657":"Strict-Transport-Security Header Not Set","1658":"Strict-Transport-Security Header Not Set","1659":"Content Security Policy (CSP) Header Not Set","1660":"Strict-Transport-Security Header Not Set","1661":"X-Content-Type-Options Header Missing","1662":"Application Error Disclosure","1663":"Content Security Policy (CSP) Header Not Set","1664":"Strict-Transport-Security Header Not Set","1665":"Strict-Transport-Security Header Not Set","1666":"Strict-Transport-Security Header Not Set","1667":"Missing Anti-clickjacking Header","1668":"Re-examine Cache-control Directives","1669":"Content Security Policy (CSP) Header Not Set","1670":"Strict-Transport-Security Header Not Set","1671":"X-Content-Type-Options Header Missing","1672":"Application Error Disclosure","1673":"Missing Anti-clickjacking Header","1674":"Missing Anti-clickjacking Header","1675":"Content Security Policy (CSP) Header Not Set","1676":"Missing Anti-clickjacking Header","1677":"Content Security Policy (CSP) Header Not Set","1678":"Application Error Disclosure","1679":"Strict-Transport-Security Header Not Set","1680":"Application Error Disclosure","1681":"Application Error Disclosure","1682":"Missing Anti-clickjacking Header","1683":"Content Security Policy (CSP) Header Not Set","1684":"Strict-Transport-Security Header Not Set","1685":"Content Security Policy (CSP) Header Not Set","1686":"Content Security Policy (CSP) Header Not Set","1687":"Re-examine Cache-control Directives","1688":"Modern Web Application","1689":"Content Security Policy (CSP) Header Not Set","1690":"Content Security Policy (CSP) Header Not Set","1691":"Information Disclosure - Suspicious Comments","1692":"Strict-Transport-Security Header Not Set","1693":"Content Security Policy (CSP) Header Not Set","1694":"Content Security Policy (CSP) Header Not Set","1695":"Content Security Policy (CSP) Header Not Set","1696":"Content Security Policy (CSP) Header Not Set","1697":"Information Disclosure - Suspicious Comments","1698":"Information Disclosure - Suspicious Comments","1699":"Strict-Transport-Security Header Not Set","1700":"Information Disclosure - Suspicious Comments","1701":"Strict-Transport-Security Header Not Set","1702":"Modern Web Application","1703":"Application Error Disclosure","1704":"Strict-Transport-Security Header Not Set","1705":"Modern Web Application","1706":"Strict-Transport-Security Header Not Set","1707":"Content Security Policy (CSP) Header Not Set","1708":"Modern Web Application","1709":"Modern Web Application","1710":"X-Content-Type-Options Header Missing","1711":"Strict-Transport-Security Header Not Set","1712":"Modern Web Application","1713":"Content Security Policy (CSP) Header Not Set","1714":"Strict-Transport-Security Header Not Set","1715":"Application Error Disclosure","1716":"Strict-Transport-Security Header Not Set","1717":"Missing Anti-clickjacking Header","1718":"Modern Web Application","1719":"Strict-Transport-Security Header Not Set","1720":"Strict-Transport-Security Header Not Set","1721":"X-Content-Type-Options Header Missing","1722":"Strict-Transport-Security Header Not Set","1723":"Content Security Policy (CSP) Header Not Set","1724":"X-Content-Type-Options Header Missing","1725":"Strict-Transport-Security Header Not Set","1726":"X-Content-Type-Options Header Missing","1727":"Content Security Policy (CSP) Header Not Set","1728":"Strict-Transport-Security Header Not Set","1729":"X-Content-Type-Options Header Missing","1730":"X-Content-Type-Options Header Missing","1731":"Application Error Disclosure","1732":"Application Error Disclosure","1733":"Missing Anti-clickjacking Header","1734":"X-Content-Type-Options Header Missing","1735":"Missing Anti-clickjacking Header","1736":"Strict-Transport-Security Header Not Set","1737":"Missing Anti-clickjacking Header","1738":"X-Content-Type-Options Header Missing","1739":"Modern Web Application","1740":"Content Security Policy (CSP) Header Not Set","1741":"Content Security Policy (CSP) Header Not Set","1742":"Missing Anti-clickjacking Header","1743":"Content Security Policy (CSP) Header Not Set","1744":"Missing Anti-clickjacking Header","1745":"Content Security Policy (CSP) Header Not Set","1746":"Content Security Policy (CSP) Header Not Set","1747":"Strict-Transport-Security Header Not Set","1748":"Strict-Transport-Security Header Not Set","1749":"Strict-Transport-Security Header Not Set","1750":"Re-examine Cache-control Directives","1751":"Information Disclosure - Suspicious Comments","1752":"Content Security Policy (CSP) Header Not Set","1753":"Modern Web Application","1754":"Information Disclosure - Suspicious Comments","1755":"X-Content-Type-Options Header Missing","1756":"Missing Anti-clickjacking Header","1757":"Content Security Policy (CSP) Header Not Set","1758":"Modern Web Application","1759":"Strict-Transport-Security Header Not Set","1760":"Strict-Transport-Security Header Not Set","1761":"Modern Web Application","1762":"Strict-Transport-Security Header Not Set","1763":"Modern Web Application","1764":"Re-examine Cache-control Directives","1765":"Strict-Transport-Security Header Not Set","1766":"Strict-Transport-Security Header Not Set","1767":"Strict-Transport-Security Header Not Set","1768":"X-Content-Type-Options Header Missing","1769":"Strict-Transport-Security Header Not Set","1770":"Strict-Transport-Security Header Not Set","1771":"Content Security Policy (CSP) Header Not Set","1772":"X-Content-Type-Options Header Missing","1773":"X-Content-Type-Options Header Missing","1774":"Strict-Transport-Security Header Not Set","1775":"X-Content-Type-Options Header Missing","1776":"X-Content-Type-Options Header Missing","1777":"Strict-Transport-Security Header Not Set","1778":"Missing Anti-clickjacking Header","1779":"Strict-Transport-Security Header Not Set","1780":"Strict-Transport-Security Header Not Set","1781":"Strict-Transport-Security Header Not Set","1782":"X-Content-Type-Options Header Missing","1783":"Re-examine Cache-control Directives","1784":"Strict-Transport-Security Header Not Set","1785":"Content Security Policy (CSP) Header Not Set","1786":"Missing Anti-clickjacking Header","1787":"Strict-Transport-Security Header Not Set","1788":"Re-examine Cache-control Directives","1789":"X-Content-Type-Options Header Missing","1790":"Content Security Policy (CSP) Header Not Set","1791":"Strict-Transport-Security Header Not Set","1792":"Strict-Transport-Security Header Not Set","1793":"Strict-Transport-Security Header Not Set","1794":"X-Content-Type-Options Header Missing","1795":"X-Content-Type-Options Header Missing","1796":"Session Management Response Identified","1797":"Session Management Response Identified","1798":"CSP: Failure to Define Directive with No Fallback","1799":"CSP: Failure to Define Directive with No Fallback","1800":"Missing Anti-clickjacking Header","1801":"CSP: Failure to Define Directive with No Fallback","1802":"Content Security Policy (CSP) Header Not Set","1803":"Modern Web Application","1804":"X-Content-Type-Options Header Missing","1805":"Missing Cookie Consent Banner","1806":"Missing Privacy Policy"},"risk":{"0":"Medium","1":"Medium","2":"Medium","3":"Medium","4":"Medium","5":"Medium","6":"Medium","7":"Medium","8":"Medium","9":"Medium","10":"Medium","11":"Medium","12":"Medium","13":"Informational","14":"Medium","15":"Informational","16":"Low","17":"Medium","18":"Informational","19":"Medium","20":"Medium","21":"Medium","22":"Low","23":"Medium","24":"Informational","25":"Informational","26":"Informational","27":"Informational","28":"Low","29":"Low","30":"Medium","31":"Informational","32":"Informational","33":"Medium","34":"Medium","35":"Medium","36":"Low","37":"Medium","38":"Informational","39":"Medium","40":"Low","41":"Informational","42":"Medium","43":"Low","44":"Low","45":"Medium","46":"Medium","47":"Medium","48":"Medium","49":"Medium","50":"Low","51":"Informational","52":"Low","53":"Medium","54":"Informational","55":"Medium","56":"Low","57":"Informational","58":"Medium","59":"Medium","60":"Medium","61":"Informational","62":"Low","63":"Informational","64":"Informational","65":"Medium","66":"Low","67":"Low","68":"Low","69":"Low","70":"Informational","71":"Medium","72":"Medium","73":"Informational","74":"Low","75":"Low","76":"Medium","77":"Medium","78":"Informational","79":"Informational","80":"Low","81":"Low","82":"Medium","83":"Low","84":"Low","85":"Low","86":"Low","87":"Medium","88":"Medium","89":"Low","90":"Medium","91":"Low","92":"Low","93":"Low","94":"Low","95":"Medium","96":"Medium","97":"Medium","98":"Low","99":"Medium","100":"Low","101":"Low","102":"Medium","103":"Low","104":"Low","105":"Low","106":"Low","107":"Medium","108":"Medium","109":"Medium","110":"Medium","111":"Informational","112":"Medium","113":"Low","114":"Low","115":"Medium","116":"Informational","117":"Low","118":"Low","119":"Low","120":"Medium","121":"Medium","122":"Low","123":"Low","124":"Medium","125":"Low","126":"Low","127":"Low","128":"Medium","129":"Informational","130":"Medium","131":"Medium","132":"Medium","133":"Medium","134":"Medium","135":"Low","136":"Medium","137":"Low","138":"Medium","139":"Low","140":"Medium","141":"Medium","142":"Medium","143":"Informational","144":"Medium","145":"Medium","146":"Medium","147":"Low","148":"Low","149":"Low","150":"Medium","151":"Low","152":"Low","153":"Informational","154":"Low","155":"Informational","156":"Informational","157":"Medium","158":"Low","159":"Informational","160":"Medium","161":"Medium","162":"Medium","163":"Low","164":"Medium","165":"Medium","166":"Medium","167":"Informational","168":"Medium","169":"Low","170":"Informational","171":"Informational","172":"Informational","173":"Low","174":"Low","175":"Medium","176":"Low","177":"Medium","178":"Informational","179":"Low","180":"Informational","181":"Informational","182":"Medium","183":"Low","184":"Low","185":"Low","186":"Low","187":"Low","188":"Medium","189":"Low","190":"Medium","191":"Low","192":"Low","193":"Low","194":"Low","195":"Medium","196":"Low","197":"Informational","198":"Low","199":"Low","200":"Low","201":"Low","202":"Low","203":"Medium","204":"Informational","205":"Informational","206":"Informational","207":"Low","208":"Low","209":"Low","210":"Medium","211":"Low","212":"Low","213":"Medium","214":"Low","215":"Medium","216":"Low","217":"Medium","218":"Low","219":"Low","220":"Medium","221":"Low","222":"Medium","223":"Medium","224":"Low","225":"Low","226":"Low","227":"Informational","228":"Medium","229":"Medium","230":"Low","231":"Medium","232":"Medium","233":"Medium","234":"Informational","235":"Medium","236":"Low","237":"Medium","238":"Medium","239":"Medium","240":"Medium","241":"Medium","242":"Low","243":"Informational","244":"Low","245":"Low","246":"Low","247":"Low","248":"Medium","249":"Medium","250":"Informational","251":"Medium","252":"Medium","253":"Low","254":"Low","255":"Informational","256":"Low","257":"Medium","258":"Low","259":"Medium","260":"Informational","261":"Low","262":"Informational","263":"Medium","264":"Medium","265":"Medium","266":"Medium","267":"Low","268":"Informational","269":"Low","270":"Low","271":"Informational","272":"Low","273":"Low","274":"Low","275":"Low","276":"Informational","277":"Medium","278":"Medium","279":"Low","280":"Informational","281":"Low","282":"Low","283":"Low","284":"Medium","285":"Medium","286":"Medium","287":"Low","288":"Medium","289":"Medium","290":"Low","291":"Low","292":"Informational","293":"Medium","294":"Low","295":"Medium","296":"Low","297":"Informational","298":"Low","299":"Medium","300":"Low","301":"Low","302":"Medium","303":"Informational","304":"Informational","305":"Informational","306":"Informational","307":"Low","308":"Medium","309":"Informational","310":"Low","311":"Medium","312":"Low","313":"Informational","314":"Medium","315":"Medium","316":"Low","317":"Low","318":"Informational","319":"Informational","320":"Low","321":"Medium","322":"Low","323":"Medium","324":"Low","325":"Low","326":"Low","327":"Medium","328":"Informational","329":"Low","330":"Medium","331":"Medium","332":"Low","333":"Low","334":"Informational","335":"Medium","336":"Low","337":"Medium","338":"Low","339":"Low","340":"Medium","341":"Informational","342":"Informational","343":"Medium","344":"Low","345":"Low","346":"Low","347":"Medium","348":"Low","349":"Informational","350":"Medium","351":"Informational","352":"Medium","353":"Informational","354":"Low","355":"Informational","356":"Medium","357":"Medium","358":"Informational","359":"Medium","360":"Medium","361":"Low","362":"Low","363":"Low","364":"Medium","365":"Medium","366":"Informational","367":"Informational","368":"Low","369":"Low","370":"Low","371":"Low","372":"Low","373":"Medium","374":"Low","375":"Low","376":"Medium","377":"Informational","378":"Low","379":"Informational","380":"Medium","381":"Medium","382":"Low","383":"Informational","384":"Medium","385":"Medium","386":"Low","387":"Low","388":"Medium","389":"Medium","390":"Low","391":"Low","392":"Low","393":"Medium","394":"Low","395":"Medium","396":"Low","397":"Informational","398":"Medium","399":"Low","400":"Low","401":"Low","402":"Medium","403":"Medium","404":"Informational","405":"Low","406":"Low","407":"Low","408":"Medium","409":"Medium","410":"Medium","411":"Medium","412":"Low","413":"Informational","414":"Medium","415":"Informational","416":"Low","417":"Low","418":"Medium","419":"Low","420":"Low","421":"Informational","422":"Informational","423":"Medium","424":"Low","425":"Low","426":"Medium","427":"Informational","428":"Informational","429":"Informational","430":"Medium","431":"Medium","432":"Medium","433":"Medium","434":"Medium","435":"Informational","436":"Low","437":"Medium","438":"Informational","439":"Medium","440":"Informational","441":"Low","442":"Low","443":"Low","444":"Low","445":"Medium","446":"Medium","447":"Medium","448":"Low","449":"Low","450":"Informational","451":"Informational","452":"Informational","453":"Medium","454":"Medium","455":"Low","456":"Medium","457":"Medium","458":"Low","459":"Low","460":"Medium","461":"Low","462":"Low","463":"Medium","464":"Medium","465":"Medium","466":"Informational","467":"Low","468":"Low","469":"Low","470":"Low","471":"Low","472":"Low","473":"Informational","474":"Low","475":"Low","476":"Informational","477":"Medium","478":"Low","479":"Low","480":"Informational","481":"Medium","482":"Medium","483":"Low","484":"Medium","485":"Low","486":"Low","487":"Medium","488":"Medium","489":"Low","490":"Medium","491":"Low","492":"Low","493":"Low","494":"Low","495":"Medium","496":"Low","497":"Informational","498":"Low","499":"Medium","500":"Medium","501":"Low","502":"Low","503":"Medium","504":"Informational","505":"Low","506":"Low","507":"Medium","508":"Informational","509":"Low","510":"Medium","511":"Medium","512":"Low","513":"Medium","514":"Low","515":"Medium","516":"Low","517":"Low","518":"Low","519":"Medium","520":"Medium","521":"Low","522":"Medium","523":"Low","524":"Low","525":"Informational","526":"Medium","527":"Medium","528":"Medium","529":"High","530":"Informational","531":"Medium","532":"Medium","533":"Medium","534":"Low","535":"Low","536":"Medium","537":"Low","538":"Medium","539":"Informational","540":"Low","541":"Low","542":"Low","543":"Medium","544":"Low","545":"Low","546":"Medium","547":"Medium","548":"Low","549":"Low","550":"Medium","551":"Informational","552":"Low","553":"Medium","554":"Medium","555":"Low","556":"Medium","557":"Medium","558":"Medium","559":"Informational","560":"Low","561":"Medium","562":"Medium","563":"Low","564":"Low","565":"Medium","566":"Informational","567":"Low","568":"Informational","569":"Low","570":"Medium","571":"Low","572":"Medium","573":"Informational","574":"Medium","575":"Medium","576":"Informational","577":"Medium","578":"Low","579":"Low","580":"Low","581":"Informational","582":"Medium","583":"Medium","584":"Low","585":"Medium","586":"Medium","587":"Low","588":"Low","589":"Medium","590":"Informational","591":"Low","592":"Low","593":"Medium","594":"Informational","595":"Informational","596":"Low","597":"Low","598":"Low","599":"Medium","600":"Medium","601":"Low","602":"Low","603":"Low","604":"Low","605":"Informational","606":"Medium","607":"Medium","608":"Low","609":"Low","610":"Medium","611":"Medium","612":"Low","613":"Informational","614":"Low","615":"Medium","616":"Low","617":"Medium","618":"Medium","619":"Informational","620":"Medium","621":"Informational","622":"Low","623":"Medium","624":"Medium","625":"Low","626":"Informational","627":"Medium","628":"Medium","629":"Low","630":"Low","631":"Medium","632":"Low","633":"Medium","634":"Low","635":"Informational","636":"Medium","637":"Informational","638":"Medium","639":"Medium","640":"Informational","641":"Low","642":"Medium","643":"Medium","644":"Medium","645":"Low","646":"Low","647":"Medium","648":"Low","649":"Medium","650":"Medium","651":"Informational","652":"Low","653":"Medium","654":"Medium","655":"Low","656":"Medium","657":"Medium","658":"Low","659":"Low","660":"Informational","661":"Medium","662":"Informational","663":"Medium","664":"Informational","665":"Low","666":"Medium","667":"Informational","668":"Low","669":"Medium","670":"Medium","671":"Low","672":"Low","673":"Medium","674":"Medium","675":"Low","676":"Low","677":"Low","678":"Low","679":"Low","680":"Low","681":"Low","682":"Informational","683":"Medium","684":"Low","685":"Medium","686":"Low","687":"Informational","688":"Medium","689":"Informational","690":"Informational","691":"Low","692":"Low","693":"Medium","694":"Informational","695":"Medium","696":"Informational","697":"Low","698":"Medium","699":"Low","700":"Low","701":"Low","702":"Low","703":"Informational","704":"Low","705":"Medium","706":"Informational","707":"Low","708":"Medium","709":"Low","710":"Low","711":"Low","712":"Informational","713":"Medium","714":"Low","715":"Medium","716":"Low","717":"Medium","718":"Medium","719":"Medium","720":"Medium","721":"Low","722":"Low","723":"Medium","724":"Medium","725":"Low","726":"Medium","727":"Low","728":"Low","729":"Low","730":"Low","731":"Medium","732":"Low","733":"Medium","734":"Low","735":"Informational","736":"Low","737":"Medium","738":"Informational","739":"Informational","740":"Medium","741":"Low","742":"Medium","743":"Medium","744":"Medium","745":"Low","746":"Informational","747":"Medium","748":"Low","749":"Medium","750":"Medium","751":"Medium","752":"Low","753":"Informational","754":"Low","755":"Informational","756":"Informational","757":"Low","758":"Medium","759":"Low","760":"Low","761":"Informational","762":"Medium","763":"Medium","764":"Low","765":"Low","766":"Medium","767":"Medium","768":"Low","769":"Medium","770":"Medium","771":"Low","772":"Medium","773":"Informational","774":"Medium","775":"Low","776":"Low","777":"Low","778":"Informational","779":"Low","780":"Low","781":"Low","782":"Informational","783":"Low","784":"Low","785":"Low","786":"Medium","787":"Informational","788":"Low","789":"Low","790":"Medium","791":"Low","792":"Medium","793":"Low","794":"Medium","795":"Low","796":"Low","797":"Low","798":"Medium","799":"Low","800":"Low","801":"Low","802":"Informational","803":"Low","804":"Medium","805":"Low","806":"Informational","807":"Low","808":"Medium","809":"Low","810":"Low","811":"Informational","812":"Low","813":"Low","814":"Informational","815":"Medium","816":"Low","817":"Low","818":"Informational","819":"Medium","820":"Medium","821":"Medium","822":"Low","823":"Medium","824":"Informational","825":"Medium","826":"Low","827":"Low","828":"Low","829":"Low","830":"Low","831":"Medium","832":"Low","833":"Medium","834":"Low","835":"Medium","836":"Medium","837":"Informational","838":"Medium","839":"Low","840":"Medium","841":"Medium","842":"Low","843":"Medium","844":"Informational","845":"Low","846":"Low","847":"Medium","848":"Medium","849":"Medium","850":"Low","851":"Medium","852":"Medium","853":"Medium","854":"Low","855":"Medium","856":"Low","857":"Low","858":"Medium","859":"Medium","860":"Low","861":"Low","862":"Low","863":"Medium","864":"Low","865":"Medium","866":"Medium","867":"Medium","868":"Low","869":"Medium","870":"Low","871":"Medium","872":"Medium","873":"Informational","874":"Medium","875":"Low","876":"Informational","877":"Low","878":"Informational","879":"Low","880":"Medium","881":"Low","882":"Low","883":"Low","884":"Low","885":"Medium","886":"Medium","887":"Medium","888":"Low","889":"Informational","890":"Low","891":"Low","892":"Informational","893":"Low","894":"Medium","895":"Low","896":"Medium","897":"Low","898":"Medium","899":"Informational","900":"Medium","901":"Medium","902":"Medium","903":"Medium","904":"Low","905":"Medium","906":"Informational","907":"Low","908":"Medium","909":"Low","910":"Medium","911":"Low","912":"Medium","913":"Low","914":"Low","915":"Low","916":"Medium","917":"Low","918":"Medium","919":"Low","920":"Medium","921":"Medium","922":"Medium","923":"Low","924":"Medium","925":"Low","926":"Low","927":"Low","928":"Informational","929":"Medium","930":"Medium","931":"Low","932":"Medium","933":"Medium","934":"Low","935":"Medium","936":"Informational","937":"Low","938":"Medium","939":"Low","940":"Informational","941":"Informational","942":"Low","943":"Medium","944":"Informational","945":"Low","946":"Medium","947":"Low","948":"Medium","949":"Medium","950":"Low","951":"Medium","952":"Informational","953":"Medium","954":"Medium","955":"Medium","956":"Low","957":"Low","958":"Medium","959":"Low","960":"Medium","961":"Low","962":"Low","963":"Low","964":"Medium","965":"Medium","966":"Medium","967":"Low","968":"Informational","969":"Medium","970":"Low","971":"Medium","972":"Low","973":"Informational","974":"Medium","975":"Low","976":"Low","977":"Medium","978":"Informational","979":"Low","980":"Medium","981":"Low","982":"Medium","983":"Low","984":"Informational","985":"Informational","986":"Medium","987":"Medium","988":"Low","989":"Informational","990":"Medium","991":"Informational","992":"Low","993":"Low","994":"Informational","995":"Low","996":"Medium","997":"Low","998":"Medium","999":"Medium","1000":"Informational","1001":"Medium","1002":"Medium","1003":"Low","1004":"Medium","1005":"Low","1006":"Low","1007":"Medium","1008":"Low","1009":"Low","1010":"Medium","1011":"Low","1012":"Medium","1013":"Low","1014":"Low","1015":"Medium","1016":"Medium","1017":"Low","1018":"Informational","1019":"Medium","1020":"Low","1021":"Medium","1022":"Informational","1023":"Low","1024":"Medium","1025":"Low","1026":"Low","1027":"Informational","1028":"Low","1029":"Medium","1030":"Informational","1031":"Low","1032":"Medium","1033":"Medium","1034":"Low","1035":"Medium","1036":"Informational","1037":"Low","1038":"Low","1039":"Low","1040":"Low","1041":"Informational","1042":"Low","1043":"Informational","1044":"Medium","1045":"Medium","1046":"Low","1047":"Medium","1048":"Medium","1049":"Medium","1050":"Low","1051":"Medium","1052":"Informational","1053":"Medium","1054":"Medium","1055":"Informational","1056":"Low","1057":"Medium","1058":"Low","1059":"Low","1060":"Medium","1061":"Low","1062":"Low","1063":"Low","1064":"Medium","1065":"Medium","1066":"Low","1067":"Medium","1068":"Medium","1069":"Informational","1070":"Low","1071":"Medium","1072":"Low","1073":"Low","1074":"Medium","1075":"Low","1076":"Low","1077":"Low","1078":"Medium","1079":"Medium","1080":"Medium","1081":"Low","1082":"Medium","1083":"Low","1084":"Informational","1085":"Informational","1086":"Medium","1087":"Informational","1088":"Informational","1089":"Low","1090":"Medium","1091":"Informational","1092":"Low","1093":"Low","1094":"Low","1095":"Informational","1096":"Medium","1097":"Medium","1098":"Medium","1099":"Medium","1100":"Informational","1101":"Medium","1102":"Medium","1103":"Low","1104":"Medium","1105":"Low","1106":"Medium","1107":"Low","1108":"Low","1109":"Low","1110":"Medium","1111":"Low","1112":"Medium","1113":"Medium","1114":"Low","1115":"Medium","1116":"Medium","1117":"Medium","1118":"Low","1119":"Informational","1120":"Informational","1121":"Medium","1122":"Informational","1123":"Low","1124":"Low","1125":"Medium","1126":"Informational","1127":"Low","1128":"Low","1129":"Medium","1130":"Informational","1131":"Low","1132":"Medium","1133":"Medium","1134":"Low","1135":"Medium","1136":"Low","1137":"Informational","1138":"Low","1139":"Low","1140":"Low","1141":"Low","1142":"Low","1143":"Medium","1144":"Medium","1145":"Low","1146":"Low","1147":"Medium","1148":"Medium","1149":"Low","1150":"Medium","1151":"Medium","1152":"Informational","1153":"Low","1154":"Medium","1155":"Low","1156":"Low","1157":"Low","1158":"Low","1159":"Low","1160":"Medium","1161":"Low","1162":"Low","1163":"Medium","1164":"Low","1165":"Medium","1166":"Low","1167":"Medium","1168":"Medium","1169":"Low","1170":"Informational","1171":"Medium","1172":"Low","1173":"Low","1174":"Medium","1175":"Low","1176":"Medium","1177":"Low","1178":"Medium","1179":"Medium","1180":"Informational","1181":"Medium","1182":"Low","1183":"Low","1184":"Medium","1185":"Low","1186":"Medium","1187":"Informational","1188":"Informational","1189":"Low","1190":"Informational","1191":"Low","1192":"Informational","1193":"Medium","1194":"Medium","1195":"Medium","1196":"Medium","1197":"Medium","1198":"Low","1199":"Low","1200":"Medium","1201":"Low","1202":"Medium","1203":"Low","1204":"Low","1205":"Low","1206":"Low","1207":"Low","1208":"Informational","1209":"Informational","1210":"Low","1211":"Informational","1212":"Low","1213":"Informational","1214":"Informational","1215":"Low","1216":"Low","1217":"Low","1218":"Low","1219":"Low","1220":"Low","1221":"Low","1222":"Low","1223":"Informational","1224":"Low","1225":"Low","1226":"Low","1227":"Low","1228":"Low","1229":"Low","1230":"Low","1231":"Low","1232":"Medium","1233":"Medium","1234":"Medium","1235":"Medium","1236":"Medium","1237":"Medium","1238":"Medium","1239":"Medium","1240":"Medium","1241":"Medium","1242":"Low","1243":"Medium","1244":"Medium","1245":"Medium","1246":"Medium","1247":"Medium","1248":"Medium","1249":"Medium","1250":"Medium","1251":"Medium","1252":"Low","1253":"Low","1254":"Medium","1255":"Medium","1256":"Low","1257":"Medium","1258":"Medium","1259":"Medium","1260":"Medium","1261":"Medium","1262":"Medium","1263":"Medium","1264":"Medium","1265":"Medium","1266":"Medium","1267":"Medium","1268":"Informational","1269":"Medium","1270":"Medium","1271":"Medium","1272":"Low","1273":"Informational","1274":"Medium","1275":"Informational","1276":"Low","1277":"Medium","1278":"Informational","1279":"Informational","1280":"Low","1281":"Low","1282":"Informational","1283":"Informational","1284":"Low","1285":"Informational","1286":"Low","1287":"Low","1288":"Low","1289":"Informational","1290":"Low","1291":"Informational","1292":"Informational","1293":"Medium","1294":"Low","1295":"Low","1296":"Low","1297":"Medium","1298":"Medium","1299":"Low","1300":"Low","1301":"Low","1302":"Informational","1303":"Low","1304":"Medium","1305":"Low","1306":"Low","1307":"Low","1308":"Low","1309":"Medium","1310":"Low","1311":"Low","1312":"Low","1313":"Low","1314":"Medium","1315":"Low","1316":"Informational","1317":"Low","1318":"Low","1319":"Low","1320":"Low","1321":"Low","1322":"Medium","1323":"Low","1324":"Informational","1325":"Low","1326":"Medium","1327":"Informational","1328":"Low","1329":"Medium","1330":"Low","1331":"Medium","1332":"Low","1333":"Medium","1334":"Low","1335":"Low","1336":"Medium","1337":"Low","1338":"Low","1339":"Low","1340":"Medium","1341":"Medium","1342":"Medium","1343":"Low","1344":"Medium","1345":"Medium","1346":"Low","1347":"Medium","1348":"Medium","1349":"Medium","1350":"Medium","1351":"Informational","1352":"Medium","1353":"Low","1354":"Low","1355":"Medium","1356":"Low","1357":"Low","1358":"Low","1359":"Low","1360":"Low","1361":"Low","1362":"Medium","1363":"Low","1364":"Medium","1365":"Low","1366":"Low","1367":"Low","1368":"Low","1369":"Medium","1370":"Low","1371":"Informational","1372":"Low","1373":"Low","1374":"Low","1375":"Low","1376":"Low","1377":"Low","1378":"Low","1379":"Low","1380":"Low","1381":"Low","1382":"Low","1383":"Medium","1384":"Low","1385":"Low","1386":"Low","1387":"Low","1388":"Low","1389":"Medium","1390":"Low","1391":"Low","1392":"Low","1393":"Low","1394":"Low","1395":"Low","1396":"Low","1397":"Low","1398":"Low","1399":"Low","1400":"Low","1401":"Low","1402":"Low","1403":"Low","1404":"Low","1405":"Low","1406":"Low","1407":"Medium","1408":"Low","1409":"Low","1410":"Low","1411":"Low","1412":"Low","1413":"Medium","1414":"Low","1415":"Low","1416":"Medium","1417":"Low","1418":"Low","1419":"Medium","1420":"Low","1421":"Low","1422":"Medium","1423":"Low","1424":"Low","1425":"Low","1426":"Informational","1427":"Medium","1428":"Low","1429":"Low","1430":"Low","1431":"Low","1432":"Low","1433":"Low","1434":"Low","1435":"Low","1436":"Low","1437":"Low","1438":"Low","1439":"Low","1440":"Low","1441":"Medium","1442":"Low","1443":"Low","1444":"Medium","1445":"Informational","1446":"Informational","1447":"Medium","1448":"Medium","1449":"Medium","1450":"Low","1451":"Low","1452":"Informational","1453":"Low","1454":"Low","1455":"Medium","1456":"Low","1457":"Low","1458":"Low","1459":"Low","1460":"Medium","1461":"Low","1462":"Medium","1463":"Medium","1464":"Low","1465":"Low","1466":"Low","1467":"Low","1468":"Informational","1469":"Low","1470":"Medium","1471":"Low","1472":"Low","1473":"Low","1474":"Medium","1475":"Low","1476":"Informational","1477":"Medium","1478":"Low","1479":"Medium","1480":"Low","1481":"Low","1482":"Low","1483":"Low","1484":"Medium","1485":"Low","1486":"Medium","1487":"Medium","1488":"Low","1489":"Medium","1490":"Low","1491":"Informational","1492":"Medium","1493":"Medium","1494":"Medium","1495":"Low","1496":"Informational","1497":"Informational","1498":"Informational","1499":"Low","1500":"Low","1501":"Medium","1502":"Low","1503":"Low","1504":"Low","1505":"Low","1506":"Low","1507":"Low","1508":"Medium","1509":"Low","1510":"Low","1511":"Low","1512":"Low","1513":"Low","1514":"Low","1515":"Low","1516":"Medium","1517":"Low","1518":"Low","1519":"Medium","1520":"Medium","1521":"Medium","1522":"Informational","1523":"Medium","1524":"Low","1525":"Low","1526":"Low","1527":"Informational","1528":"Medium","1529":"Low","1530":"Low","1531":"Low","1532":"Medium","1533":"Medium","1534":"Low","1535":"Medium","1536":"Low","1537":"Low","1538":"Medium","1539":"Informational","1540":"Low","1541":"Medium","1542":"Medium","1543":"Medium","1544":"Low","1545":"Low","1546":"Low","1547":"Informational","1548":"Informational","1549":"Informational","1550":"Low","1551":"Medium","1552":"Medium","1553":"Low","1554":"Low","1555":"Low","1556":"Medium","1557":"Low","1558":"Low","1559":"Low","1560":"Low","1561":"Low","1562":"Informational","1563":"Low","1564":"Low","1565":"Low","1566":"Low","1567":"Low","1568":"Medium","1569":"Low","1570":"Low","1571":"Low","1572":"Low","1573":"Low","1574":"Low","1575":"Informational","1576":"Medium","1577":"Medium","1578":"Medium","1579":"Low","1580":"Low","1581":"Low","1582":"Low","1583":"Low","1584":"Medium","1585":"Medium","1586":"Medium","1587":"Informational","1588":"Medium","1589":"Medium","1590":"Informational","1591":"Medium","1592":"Informational","1593":"Informational","1594":"Informational","1595":"Medium","1596":"Informational","1597":"Informational","1598":"Low","1599":"Medium","1600":"Low","1601":"Medium","1602":"Low","1603":"Low","1604":"Medium","1605":"Low","1606":"Low","1607":"Medium","1608":"Low","1609":"Medium","1610":"Medium","1611":"Low","1612":"Low","1613":"Low","1614":"Low","1615":"Medium","1616":"Informational","1617":"Low","1618":"Informational","1619":"Low","1620":"Low","1621":"Low","1622":"Low","1623":"Medium","1624":"Low","1625":"Low","1626":"Medium","1627":"Medium","1628":"Low","1629":"Medium","1630":"Medium","1631":"Low","1632":"Low","1633":"Low","1634":"Low","1635":"Low","1636":"Medium","1637":"Low","1638":"Low","1639":"Low","1640":"Medium","1641":"Low","1642":"Low","1643":"Low","1644":"Medium","1645":"Low","1646":"Low","1647":"Low","1648":"Medium","1649":"Low","1650":"Medium","1651":"Medium","1652":"Low","1653":"Medium","1654":"Medium","1655":"Low","1656":"Low","1657":"Low","1658":"Low","1659":"Medium","1660":"Low","1661":"Low","1662":"Low","1663":"Medium","1664":"Low","1665":"Low","1666":"Low","1667":"Medium","1668":"Informational","1669":"Medium","1670":"Low","1671":"Low","1672":"Low","1673":"Medium","1674":"Medium","1675":"Medium","1676":"Medium","1677":"Medium","1678":"Low","1679":"Low","1680":"Low","1681":"Low","1682":"Medium","1683":"Medium","1684":"Low","1685":"Medium","1686":"Medium","1687":"Informational","1688":"Informational","1689":"Medium","1690":"Medium","1691":"Informational","1692":"Low","1693":"Medium","1694":"Medium","1695":"Medium","1696":"Medium","1697":"Informational","1698":"Informational","1699":"Low","1700":"Informational","1701":"Low","1702":"Informational","1703":"Low","1704":"Low","1705":"Informational","1706":"Low","1707":"Medium","1708":"Informational","1709":"Informational","1710":"Low","1711":"Low","1712":"Informational","1713":"Medium","1714":"Low","1715":"Low","1716":"Low","1717":"Medium","1718":"Informational","1719":"Low","1720":"Low","1721":"Low","1722":"Low","1723":"Medium","1724":"Low","1725":"Low","1726":"Low","1727":"Medium","1728":"Low","1729":"Low","1730":"Low","1731":"Low","1732":"Low","1733":"Medium","1734":"Low","1735":"Medium","1736":"Low","1737":"Medium","1738":"Low","1739":"Informational","1740":"Medium","1741":"Medium","1742":"Medium","1743":"Medium","1744":"Medium","1745":"Medium","1746":"Medium","1747":"Low","1748":"Low","1749":"Low","1750":"Informational","1751":"Informational","1752":"Medium","1753":"Informational","1754":"Informational","1755":"Low","1756":"Medium","1757":"Medium","1758":"Informational","1759":"Low","1760":"Low","1761":"Informational","1762":"Low","1763":"Informational","1764":"Informational","1765":"Low","1766":"Low","1767":"Low","1768":"Low","1769":"Low","1770":"Low","1771":"Medium","1772":"Low","1773":"Low","1774":"Low","1775":"Low","1776":"Low","1777":"Low","1778":"Medium","1779":"Low","1780":"Low","1781":"Low","1782":"Low","1783":"Informational","1784":"Low","1785":"Medium","1786":"Medium","1787":"Low","1788":"Informational","1789":"Low","1790":"Medium","1791":"Low","1792":"Low","1793":"Low","1794":"Low","1795":"Low","1796":"Informational","1797":"Informational","1798":"Medium","1799":"Medium","1800":"Medium","1801":"Medium","1802":"Medium","1803":"Informational","1804":"Low","1805":"High","1806":"High"},"confidence":{"0":"Medium","1":"High","2":"High","3":"Medium","4":"Medium","5":"Medium","6":"Medium","7":"Medium","8":"Medium","9":"Medium","10":"Medium","11":"Medium","12":"Medium","13":"Low","14":"High","15":"Low","16":"High","17":"Medium","18":"Low","19":"Medium","20":"High","21":"High","22":"Medium","23":"Medium","24":"Medium","25":"Low","26":"Low","27":"Low","28":"High","29":"High","30":"Medium","31":"Low","32":"Low","33":"Medium","34":"High","35":"High","36":"High","37":"Medium","38":"Low","39":"High","40":"High","41":"Low","42":"High","43":"Medium","44":"Medium","45":"High","46":"Medium","47":"High","48":"High","49":"Medium","50":"Medium","51":"Low","52":"Medium","53":"High","54":"Low","55":"Medium","56":"Medium","57":"Low","58":"Medium","59":"Medium","60":"High","61":"Medium","62":"High","63":"Low","64":"Low","65":"High","66":"High","67":"High","68":"High","69":"High","70":"Low","71":"High","72":"High","73":"Low","74":"High","75":"High","76":"High","77":"Medium","78":"Low","79":"Low","80":"High","81":"High","82":"High","83":"Medium","84":"Medium","85":"Medium","86":"Medium","87":"High","88":"High","89":"Medium","90":"High","91":"Medium","92":"Medium","93":"High","94":"Medium","95":"High","96":"High","97":"Medium","98":"High","99":"High","100":"Medium","101":"Medium","102":"Medium","103":"High","104":"High","105":"High","106":"High","107":"Medium","108":"Medium","109":"Medium","110":"Medium","111":"Medium","112":"Medium","113":"Medium","114":"Medium","115":"Medium","116":"Medium","117":"High","118":"Medium","119":"High","120":"Medium","121":"Medium","122":"Medium","123":"Medium","124":"High","125":"Medium","126":"Medium","127":"High","128":"High","129":"Medium","130":"Medium","131":"High","132":"High","133":"High","134":"High","135":"High","136":"High","137":"Medium","138":"High","139":"Medium","140":"Medium","141":"High","142":"Medium","143":"Medium","144":"Medium","145":"Medium","146":"Medium","147":"Medium","148":"Medium","149":"High","150":"High","151":"Medium","152":"Medium","153":"Medium","154":"Medium","155":"Medium","156":"Medium","157":"Medium","158":"Medium","159":"Medium","160":"High","161":"Medium","162":"High","163":"High","164":"High","165":"High","166":"High","167":"Medium","168":"Medium","169":"Medium","170":"Medium","171":"Medium","172":"Medium","173":"High","174":"High","175":"Medium","176":"High","177":"High","178":"Medium","179":"High","180":"Medium","181":"Medium","182":"High","183":"Medium","184":"Medium","185":"Medium","186":"Medium","187":"High","188":"High","189":"High","190":"Medium","191":"High","192":"High","193":"Medium","194":"Medium","195":"High","196":"Medium","197":"Medium","198":"High","199":"High","200":"Medium","201":"Medium","202":"High","203":"Medium","204":"Medium","205":"Medium","206":"Medium","207":"Medium","208":"Medium","209":"Medium","210":"High","211":"Medium","212":"Medium","213":"Medium","214":"Medium","215":"Medium","216":"High","217":"Medium","218":"Medium","219":"Medium","220":"Medium","221":"Medium","222":"Low","223":"High","224":"High","225":"High","226":"High","227":"Medium","228":"Medium","229":"Medium","230":"Medium","231":"Medium","232":"Medium","233":"High","234":"Medium","235":"High","236":"Medium","237":"High","238":"Medium","239":"Medium","240":"High","241":"Medium","242":"Medium","243":"Medium","244":"Medium","245":"Medium","246":"Medium","247":"High","248":"High","249":"High","250":"Medium","251":"High","252":"High","253":"Medium","254":"High","255":"Medium","256":"Medium","257":"Medium","258":"Medium","259":"High","260":"Low","261":"High","262":"Medium","263":"High","264":"Medium","265":"Medium","266":"Medium","267":"Medium","268":"Medium","269":"Medium","270":"High","271":"Medium","272":"Medium","273":"Medium","274":"High","275":"Medium","276":"Medium","277":"High","278":"High","279":"Medium","280":"Medium","281":"High","282":"Medium","283":"Medium","284":"High","285":"High","286":"High","287":"High","288":"Medium","289":"Medium","290":"Medium","291":"High","292":"Medium","293":"Medium","294":"Medium","295":"Medium","296":"High","297":"Medium","298":"High","299":"Medium","300":"High","301":"Medium","302":"Medium","303":"Medium","304":"Medium","305":"Medium","306":"Medium","307":"Medium","308":"High","309":"Medium","310":"Medium","311":"Medium","312":"High","313":"Medium","314":"Medium","315":"High","316":"High","317":"Medium","318":"Medium","319":"Low","320":"Medium","321":"Medium","322":"High","323":"High","324":"High","325":"High","326":"High","327":"Medium","328":"Medium","329":"High","330":"Medium","331":"High","332":"Medium","333":"High","334":"Medium","335":"High","336":"Medium","337":"Medium","338":"Medium","339":"High","340":"Medium","341":"Low","342":"Medium","343":"High","344":"Medium","345":"Medium","346":"Medium","347":"High","348":"High","349":"Low","350":"High","351":"Medium","352":"Medium","353":"Low","354":"High","355":"Medium","356":"Medium","357":"High","358":"Low","359":"Medium","360":"High","361":"Medium","362":"High","363":"Medium","364":"Medium","365":"Medium","366":"Low","367":"Medium","368":"Medium","369":"Medium","370":"High","371":"High","372":"Medium","373":"High","374":"High","375":"Medium","376":"High","377":"Medium","378":"Medium","379":"Medium","380":"High","381":"Medium","382":"Medium","383":"Medium","384":"High","385":"High","386":"High","387":"High","388":"Medium","389":"Medium","390":"Medium","391":"Medium","392":"High","393":"Medium","394":"Medium","395":"Medium","396":"High","397":"Medium","398":"Medium","399":"High","400":"High","401":"High","402":"High","403":"Medium","404":"Medium","405":"High","406":"Medium","407":"Medium","408":"High","409":"High","410":"Medium","411":"Medium","412":"Medium","413":"Low","414":"High","415":"Medium","416":"High","417":"Medium","418":"High","419":"Medium","420":"Medium","421":"Low","422":"Medium","423":"High","424":"High","425":"Medium","426":"Medium","427":"Medium","428":"Medium","429":"Medium","430":"High","431":"High","432":"High","433":"Medium","434":"Medium","435":"Medium","436":"Medium","437":"Medium","438":"Medium","439":"Medium","440":"Low","441":"Medium","442":"High","443":"High","444":"Medium","445":"Medium","446":"Medium","447":"High","448":"High","449":"High","450":"Medium","451":"Medium","452":"Medium","453":"High","454":"High","455":"High","456":"Medium","457":"High","458":"High","459":"High","460":"High","461":"Medium","462":"Medium","463":"Medium","464":"Medium","465":"High","466":"Medium","467":"High","468":"Medium","469":"Medium","470":"High","471":"High","472":"High","473":"Medium","474":"Medium","475":"Medium","476":"Medium","477":"High","478":"Medium","479":"Medium","480":"Medium","481":"Medium","482":"High","483":"High","484":"High","485":"Medium","486":"High","487":"High","488":"Medium","489":"Medium","490":"Medium","491":"Medium","492":"Medium","493":"High","494":"Medium","495":"Medium","496":"High","497":"Medium","498":"High","499":"Medium","500":"Medium","501":"Medium","502":"High","503":"High","504":"Medium","505":"Medium","506":"Medium","507":"High","508":"Low","509":"High","510":"High","511":"Medium","512":"Medium","513":"Medium","514":"High","515":"High","516":"Medium","517":"High","518":"Medium","519":"High","520":"High","521":"Medium","522":"Medium","523":"High","524":"High","525":"Medium","526":"Medium","527":"High","528":"High","529":"Medium","530":"Medium","531":"High","532":"Medium","533":"High","534":"Medium","535":"High","536":"Medium","537":"Medium","538":"Medium","539":"Medium","540":"High","541":"Medium","542":"Medium","543":"High","544":"Medium","545":"High","546":"High","547":"High","548":"Medium","549":"High","550":"Medium","551":"Medium","552":"Medium","553":"High","554":"Medium","555":"Medium","556":"High","557":"Medium","558":"High","559":"Low","560":"High","561":"Medium","562":"Medium","563":"High","564":"Medium","565":"Medium","566":"Medium","567":"High","568":"Medium","569":"Medium","570":"High","571":"High","572":"Medium","573":"Medium","574":"High","575":"Medium","576":"Medium","577":"High","578":"High","579":"Medium","580":"Medium","581":"Low","582":"High","583":"High","584":"High","585":"Medium","586":"High","587":"Medium","588":"High","589":"Medium","590":"Medium","591":"Medium","592":"High","593":"High","594":"Medium","595":"Low","596":"High","597":"Medium","598":"Medium","599":"Medium","600":"Medium","601":"Medium","602":"High","603":"High","604":"Medium","605":"Medium","606":"High","607":"Medium","608":"Medium","609":"High","610":"High","611":"Medium","612":"Medium","613":"Medium","614":"High","615":"High","616":"Medium","617":"Medium","618":"Medium","619":"Low","620":"High","621":"Low","622":"Medium","623":"Medium","624":"Medium","625":"High","626":"Medium","627":"High","628":"Medium","629":"Medium","630":"Medium","631":"High","632":"High","633":"Medium","634":"Medium","635":"Medium","636":"Medium","637":"Low","638":"High","639":"High","640":"Medium","641":"Medium","642":"Medium","643":"High","644":"High","645":"High","646":"Medium","647":"High","648":"High","649":"Medium","650":"Medium","651":"Medium","652":"Medium","653":"High","654":"Medium","655":"High","656":"High","657":"High","658":"High","659":"High","660":"Medium","661":"Medium","662":"Medium","663":"High","664":"Medium","665":"Medium","666":"Medium","667":"Low","668":"Medium","669":"High","670":"High","671":"High","672":"High","673":"Medium","674":"High","675":"Medium","676":"Medium","677":"High","678":"Medium","679":"High","680":"Medium","681":"High","682":"Medium","683":"High","684":"High","685":"High","686":"High","687":"Medium","688":"Medium","689":"Medium","690":"Medium","691":"Medium","692":"Medium","693":"High","694":"Medium","695":"Medium","696":"Medium","697":"Medium","698":"Medium","699":"Medium","700":"High","701":"Medium","702":"High","703":"Medium","704":"Medium","705":"Medium","706":"Medium","707":"High","708":"High","709":"High","710":"High","711":"High","712":"Medium","713":"Medium","714":"High","715":"High","716":"High","717":"Medium","718":"High","719":"Medium","720":"High","721":"High","722":"Medium","723":"Medium","724":"Medium","725":"High","726":"High","727":"Medium","728":"High","729":"Medium","730":"Medium","731":"Medium","732":"High","733":"High","734":"Medium","735":"Low","736":"Medium","737":"High","738":"Medium","739":"Medium","740":"High","741":"Medium","742":"High","743":"Medium","744":"High","745":"Medium","746":"Medium","747":"Medium","748":"Medium","749":"Medium","750":"Medium","751":"High","752":"Medium","753":"Low","754":"High","755":"Medium","756":"Medium","757":"High","758":"High","759":"High","760":"High","761":"Medium","762":"High","763":"High","764":"High","765":"High","766":"Medium","767":"High","768":"High","769":"High","770":"High","771":"Medium","772":"Medium","773":"Medium","774":"Medium","775":"High","776":"High","777":"Medium","778":"Medium","779":"Medium","780":"Medium","781":"High","782":"Low","783":"High","784":"Medium","785":"Medium","786":"High","787":"Medium","788":"High","789":"High","790":"Low","791":"High","792":"High","793":"High","794":"High","795":"Medium","796":"Medium","797":"High","798":"High","799":"High","800":"High","801":"Medium","802":"Medium","803":"High","804":"High","805":"High","806":"Medium","807":"High","808":"High","809":"Medium","810":"Medium","811":"Medium","812":"High","813":"Medium","814":"Medium","815":"Medium","816":"High","817":"Medium","818":"Low","819":"High","820":"Medium","821":"Medium","822":"High","823":"Medium","824":"Low","825":"High","826":"High","827":"Medium","828":"High","829":"High","830":"High","831":"Medium","832":"Medium","833":"Medium","834":"High","835":"Medium","836":"High","837":"Medium","838":"Medium","839":"High","840":"High","841":"High","842":"Medium","843":"High","844":"Medium","845":"High","846":"Medium","847":"High","848":"Medium","849":"Medium","850":"Medium","851":"High","852":"Medium","853":"High","854":"Medium","855":"High","856":"High","857":"High","858":"High","859":"Medium","860":"High","861":"High","862":"High","863":"High","864":"High","865":"Medium","866":"Medium","867":"High","868":"High","869":"High","870":"High","871":"High","872":"High","873":"Medium","874":"Medium","875":"Medium","876":"Medium","877":"Medium","878":"Medium","879":"Medium","880":"High","881":"Medium","882":"Medium","883":"Medium","884":"High","885":"High","886":"High","887":"Medium","888":"High","889":"Medium","890":"Medium","891":"High","892":"Medium","893":"High","894":"High","895":"High","896":"Medium","897":"High","898":"Medium","899":"Medium","900":"Medium","901":"Medium","902":"Medium","903":"Medium","904":"High","905":"High","906":"Medium","907":"Medium","908":"High","909":"High","910":"Medium","911":"High","912":"Medium","913":"Medium","914":"High","915":"Medium","916":"High","917":"Medium","918":"High","919":"High","920":"High","921":"High","922":"High","923":"Medium","924":"High","925":"High","926":"High","927":"Medium","928":"Medium","929":"Medium","930":"High","931":"Medium","932":"High","933":"Medium","934":"Medium","935":"Medium","936":"Medium","937":"High","938":"Medium","939":"Medium","940":"Medium","941":"Medium","942":"High","943":"Medium","944":"Medium","945":"Medium","946":"Medium","947":"High","948":"Medium","949":"High","950":"High","951":"Medium","952":"Medium","953":"High","954":"Medium","955":"High","956":"High","957":"Medium","958":"High","959":"High","960":"Medium","961":"High","962":"Medium","963":"High","964":"High","965":"Medium","966":"High","967":"Medium","968":"Medium","969":"High","970":"Medium","971":"High","972":"High","973":"Medium","974":"High","975":"High","976":"Medium","977":"Medium","978":"Medium","979":"Medium","980":"High","981":"Medium","982":"Medium","983":"Medium","984":"Medium","985":"Medium","986":"High","987":"Medium","988":"High","989":"Medium","990":"Medium","991":"Medium","992":"Medium","993":"High","994":"Medium","995":"Medium","996":"Medium","997":"High","998":"High","999":"Medium","1000":"Medium","1001":"Medium","1002":"High","1003":"High","1004":"Medium","1005":"High","1006":"High","1007":"High","1008":"Medium","1009":"High","1010":"High","1011":"High","1012":"Medium","1013":"Medium","1014":"High","1015":"Medium","1016":"High","1017":"Medium","1018":"Medium","1019":"High","1020":"High","1021":"High","1022":"Medium","1023":"Medium","1024":"High","1025":"Medium","1026":"Medium","1027":"Medium","1028":"Medium","1029":"Medium","1030":"Medium","1031":"Medium","1032":"High","1033":"Medium","1034":"Medium","1035":"High","1036":"Medium","1037":"Medium","1038":"High","1039":"High","1040":"Medium","1041":"Medium","1042":"High","1043":"Medium","1044":"Medium","1045":"Medium","1046":"High","1047":"Medium","1048":"Medium","1049":"High","1050":"High","1051":"Medium","1052":"Medium","1053":"High","1054":"Medium","1055":"Medium","1056":"High","1057":"High","1058":"Medium","1059":"Medium","1060":"Medium","1061":"High","1062":"Medium","1063":"High","1064":"High","1065":"High","1066":"Medium","1067":"High","1068":"High","1069":"Medium","1070":"Medium","1071":"High","1072":"High","1073":"High","1074":"High","1075":"High","1076":"Medium","1077":"High","1078":"Medium","1079":"Medium","1080":"High","1081":"Medium","1082":"Medium","1083":"Medium","1084":"Medium","1085":"Medium","1086":"Medium","1087":"Medium","1088":"Medium","1089":"High","1090":"Medium","1091":"Medium","1092":"Medium","1093":"Medium","1094":"Medium","1095":"Medium","1096":"Medium","1097":"Medium","1098":"High","1099":"High","1100":"Medium","1101":"Medium","1102":"High","1103":"High","1104":"Medium","1105":"High","1106":"High","1107":"High","1108":"High","1109":"Medium","1110":"High","1111":"High","1112":"Medium","1113":"Medium","1114":"High","1115":"Medium","1116":"High","1117":"High","1118":"High","1119":"Medium","1120":"Medium","1121":"High","1122":"Medium","1123":"Medium","1124":"Medium","1125":"High","1126":"Medium","1127":"Medium","1128":"Medium","1129":"Medium","1130":"Medium","1131":"Medium","1132":"High","1133":"High","1134":"Medium","1135":"High","1136":"High","1137":"Medium","1138":"High","1139":"High","1140":"Medium","1141":"High","1142":"High","1143":"Medium","1144":"Medium","1145":"High","1146":"High","1147":"Medium","1148":"Medium","1149":"High","1150":"High","1151":"Medium","1152":"Medium","1153":"High","1154":"Medium","1155":"High","1156":"Medium","1157":"High","1158":"Medium","1159":"Medium","1160":"Medium","1161":"Medium","1162":"Medium","1163":"High","1164":"Medium","1165":"High","1166":"Medium","1167":"High","1168":"High","1169":"Medium","1170":"Medium","1171":"High","1172":"High","1173":"Medium","1174":"High","1175":"Medium","1176":"Medium","1177":"Medium","1178":"Medium","1179":"Medium","1180":"Low","1181":"Medium","1182":"High","1183":"High","1184":"Medium","1185":"High","1186":"Medium","1187":"Medium","1188":"Medium","1189":"High","1190":"Medium","1191":"Medium","1192":"Medium","1193":"High","1194":"High","1195":"High","1196":"High","1197":"High","1198":"Medium","1199":"Medium","1200":"High","1201":"Medium","1202":"High","1203":"High","1204":"High","1205":"Medium","1206":"High","1207":"High","1208":"Medium","1209":"Medium","1210":"High","1211":"Medium","1212":"High","1213":"Medium","1214":"Medium","1215":"Medium","1216":"Medium","1217":"Medium","1218":"Medium","1219":"High","1220":"High","1221":"Medium","1222":"High","1223":"Low","1224":"High","1225":"High","1226":"Medium","1227":"Medium","1228":"Medium","1229":"Medium","1230":"Medium","1231":"Medium","1232":"Medium","1233":"Medium","1234":"Medium","1235":"Medium","1236":"Medium","1237":"Medium","1238":"Medium","1239":"Medium","1240":"Medium","1241":"Medium","1242":"High","1243":"Medium","1244":"Medium","1245":"Medium","1246":"Medium","1247":"Medium","1248":"High","1249":"Medium","1250":"Medium","1251":"High","1252":"High","1253":"High","1254":"High","1255":"High","1256":"Medium","1257":"High","1258":"High","1259":"High","1260":"High","1261":"High","1262":"High","1263":"High","1264":"High","1265":"High","1266":"High","1267":"High","1268":"Medium","1269":"High","1270":"High","1271":"Medium","1272":"High","1273":"Medium","1274":"High","1275":"Medium","1276":"Medium","1277":"Medium","1278":"Medium","1279":"Medium","1280":"High","1281":"High","1282":"Medium","1283":"Medium","1284":"Medium","1285":"Medium","1286":"High","1287":"High","1288":"Medium","1289":"Medium","1290":"High","1291":"Medium","1292":"Low","1293":"High","1294":"High","1295":"High","1296":"High","1297":"High","1298":"Medium","1299":"High","1300":"High","1301":"Medium","1302":"Low","1303":"High","1304":"Medium","1305":"High","1306":"Medium","1307":"High","1308":"Medium","1309":"Medium","1310":"High","1311":"Medium","1312":"Medium","1313":"High","1314":"Medium","1315":"Medium","1316":"Medium","1317":"Medium","1318":"Medium","1319":"Medium","1320":"High","1321":"Medium","1322":"Medium","1323":"Medium","1324":"Medium","1325":"Medium","1326":"Medium","1327":"Medium","1328":"Medium","1329":"Medium","1330":"Medium","1331":"Medium","1332":"Medium","1333":"High","1334":"High","1335":"High","1336":"Medium","1337":"High","1338":"Medium","1339":"High","1340":"High","1341":"Medium","1342":"High","1343":"High","1344":"Medium","1345":"High","1346":"High","1347":"High","1348":"High","1349":"Medium","1350":"High","1351":"Medium","1352":"Medium","1353":"Medium","1354":"Medium","1355":"High","1356":"Medium","1357":"Medium","1358":"High","1359":"High","1360":"Medium","1361":"High","1362":"High","1363":"High","1364":"High","1365":"Medium","1366":"High","1367":"High","1368":"High","1369":"High","1370":"High","1371":"Low","1372":"High","1373":"High","1374":"High","1375":"High","1376":"Medium","1377":"High","1378":"High","1379":"Medium","1380":"High","1381":"High","1382":"Medium","1383":"Low","1384":"High","1385":"Medium","1386":"High","1387":"Medium","1388":"High","1389":"High","1390":"Medium","1391":"Medium","1392":"Medium","1393":"Medium","1394":"Medium","1395":"Medium","1396":"Medium","1397":"High","1398":"Medium","1399":"Medium","1400":"High","1401":"Medium","1402":"High","1403":"Medium","1404":"Medium","1405":"High","1406":"Medium","1407":"Medium","1408":"High","1409":"High","1410":"High","1411":"Medium","1412":"Medium","1413":"High","1414":"Medium","1415":"Medium","1416":"High","1417":"Medium","1418":"High","1419":"Low","1420":"High","1421":"Medium","1422":"Medium","1423":"High","1424":"High","1425":"High","1426":"Low","1427":"High","1428":"High","1429":"Medium","1430":"High","1431":"High","1432":"High","1433":"High","1434":"High","1435":"High","1436":"High","1437":"High","1438":"High","1439":"High","1440":"High","1441":"Medium","1442":"High","1443":"High","1444":"Medium","1445":"Low","1446":"Low","1447":"High","1448":"Medium","1449":"High","1450":"Medium","1451":"High","1452":"Low","1453":"High","1454":"High","1455":"High","1456":"Medium","1457":"High","1458":"Medium","1459":"High","1460":"Medium","1461":"High","1462":"High","1463":"Medium","1464":"High","1465":"High","1466":"High","1467":"Medium","1468":"Low","1469":"High","1470":"High","1471":"High","1472":"High","1473":"Medium","1474":"High","1475":"High","1476":"Medium","1477":"High","1478":"High","1479":"Medium","1480":"High","1481":"High","1482":"Medium","1483":"High","1484":"High","1485":"Medium","1486":"Medium","1487":"Medium","1488":"Medium","1489":"Medium","1490":"High","1491":"Medium","1492":"High","1493":"High","1494":"High","1495":"High","1496":"Low","1497":"Medium","1498":"Medium","1499":"High","1500":"Medium","1501":"High","1502":"High","1503":"High","1504":"Medium","1505":"High","1506":"Medium","1507":"Medium","1508":"Medium","1509":"High","1510":"High","1511":"High","1512":"High","1513":"High","1514":"High","1515":"High","1516":"Medium","1517":"Medium","1518":"Medium","1519":"High","1520":"High","1521":"High","1522":"Medium","1523":"High","1524":"High","1525":"High","1526":"High","1527":"Medium","1528":"Medium","1529":"High","1530":"Medium","1531":"High","1532":"High","1533":"Medium","1534":"High","1535":"Medium","1536":"High","1537":"Medium","1538":"Medium","1539":"Medium","1540":"High","1541":"High","1542":"High","1543":"High","1544":"High","1545":"High","1546":"Medium","1547":"Medium","1548":"Medium","1549":"Medium","1550":"Medium","1551":"Medium","1552":"High","1553":"High","1554":"High","1555":"High","1556":"High","1557":"High","1558":"High","1559":"Medium","1560":"Medium","1561":"Medium","1562":"Medium","1563":"High","1564":"High","1565":"High","1566":"High","1567":"High","1568":"Medium","1569":"High","1570":"Medium","1571":"High","1572":"High","1573":"Medium","1574":"Medium","1575":"Low","1576":"High","1577":"High","1578":"High","1579":"High","1580":"High","1581":"High","1582":"Medium","1583":"High","1584":"Medium","1585":"Medium","1586":"Medium","1587":"Low","1588":"Medium","1589":"Medium","1590":"Low","1591":"High","1592":"Low","1593":"Medium","1594":"Low","1595":"High","1596":"Medium","1597":"Low","1598":"High","1599":"High","1600":"High","1601":"High","1602":"Medium","1603":"High","1604":"High","1605":"Medium","1606":"High","1607":"Medium","1608":"Medium","1609":"Medium","1610":"High","1611":"Medium","1612":"High","1613":"Medium","1614":"Medium","1615":"High","1616":"Medium","1617":"Medium","1618":"Low","1619":"High","1620":"Medium","1621":"Medium","1622":"Medium","1623":"High","1624":"High","1625":"High","1626":"High","1627":"High","1628":"Medium","1629":"High","1630":"High","1631":"Medium","1632":"High","1633":"Medium","1634":"Medium","1635":"High","1636":"High","1637":"High","1638":"High","1639":"High","1640":"High","1641":"Medium","1642":"Medium","1643":"Medium","1644":"High","1645":"Medium","1646":"High","1647":"Medium","1648":"High","1649":"High","1650":"High","1651":"High","1652":"High","1653":"High","1654":"Medium","1655":"High","1656":"High","1657":"High","1658":"High","1659":"High","1660":"High","1661":"Medium","1662":"Medium","1663":"High","1664":"High","1665":"High","1666":"High","1667":"Medium","1668":"Low","1669":"High","1670":"High","1671":"Medium","1672":"Medium","1673":"Medium","1674":"Medium","1675":"High","1676":"Medium","1677":"High","1678":"Medium","1679":"High","1680":"Medium","1681":"Medium","1682":"Medium","1683":"High","1684":"High","1685":"High","1686":"High","1687":"Low","1688":"Medium","1689":"High","1690":"High","1691":"Low","1692":"High","1693":"High","1694":"High","1695":"High","1696":"High","1697":"Low","1698":"Low","1699":"High","1700":"Low","1701":"High","1702":"Medium","1703":"Medium","1704":"High","1705":"Medium","1706":"High","1707":"High","1708":"Medium","1709":"Medium","1710":"Medium","1711":"High","1712":"Medium","1713":"High","1714":"High","1715":"Medium","1716":"High","1717":"Medium","1718":"Medium","1719":"High","1720":"High","1721":"Medium","1722":"High","1723":"High","1724":"Medium","1725":"High","1726":"Medium","1727":"High","1728":"High","1729":"Medium","1730":"Medium","1731":"Medium","1732":"Medium","1733":"Medium","1734":"Medium","1735":"Medium","1736":"High","1737":"Medium","1738":"Medium","1739":"Medium","1740":"High","1741":"High","1742":"Medium","1743":"High","1744":"Medium","1745":"High","1746":"High","1747":"High","1748":"High","1749":"High","1750":"Low","1751":"Low","1752":"High","1753":"Medium","1754":"Low","1755":"Medium","1756":"Medium","1757":"High","1758":"Medium","1759":"High","1760":"High","1761":"Medium","1762":"High","1763":"Medium","1764":"Low","1765":"High","1766":"High","1767":"High","1768":"Medium","1769":"High","1770":"High","1771":"High","1772":"Medium","1773":"Medium","1774":"High","1775":"Medium","1776":"Medium","1777":"High","1778":"Medium","1779":"High","1780":"High","1781":"High","1782":"Medium","1783":"Low","1784":"High","1785":"High","1786":"Medium","1787":"High","1788":"Low","1789":"Medium","1790":"High","1791":"High","1792":"High","1793":"High","1794":"Medium","1795":"Medium","1796":"Medium","1797":"Medium","1798":"High","1799":"High","1800":"Medium","1801":"High","1802":"High","1803":"Medium","1804":"Medium","1805":"High","1806":"High"},"description":{"0":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","2":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","3":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","4":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","5":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","6":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","7":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","8":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","9":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","10":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","11":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","12":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","13":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","14":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","15":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","16":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","17":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","18":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","19":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","20":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","21":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","22":"The page includes one or more script files from a third-party domain.","23":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","24":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","25":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","26":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","27":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","28":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","29":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","30":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","31":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","32":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","33":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","34":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","35":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","36":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","37":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","38":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","39":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","40":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","41":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","42":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","43":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","44":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","45":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","46":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","47":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","48":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","49":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","50":"The page includes one or more script files from a third-party domain.","51":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","52":"A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.","53":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","54":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","55":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","56":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","57":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","58":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","59":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","60":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","61":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","62":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","63":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","64":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","65":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","66":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","67":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","68":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","69":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","70":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","71":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","72":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","73":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","74":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","75":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","76":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","77":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","78":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","79":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","80":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","81":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","82":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","83":"The page includes one or more script files from a third-party domain.","84":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","85":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","86":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","87":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","88":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","89":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","90":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","91":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","92":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","93":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","94":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","95":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","96":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","97":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","98":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","99":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","100":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","101":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","102":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","103":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","104":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","105":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","106":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","107":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","108":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","109":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","110":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","111":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","112":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","113":"The page includes one or more script files from a third-party domain.","114":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","115":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","116":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","117":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","118":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","119":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","120":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","121":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","122":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","123":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","124":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","125":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","126":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","127":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","128":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","129":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","130":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","131":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","132":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","133":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","134":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","135":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","136":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","137":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","138":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","139":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","140":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","141":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","142":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","143":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","144":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","145":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","146":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","147":"The page includes one or more script files from a third-party domain.","148":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","149":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","150":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","151":"The page includes one or more script files from a third-party domain.","152":"The page includes one or more script files from a third-party domain.","153":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","154":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","155":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","156":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","157":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","158":"The page includes one or more script files from a third-party domain.","159":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","160":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","161":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","162":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","163":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","164":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","165":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","166":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","167":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","168":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","169":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","170":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","171":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","172":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","173":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","174":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","175":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","176":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","177":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","178":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","179":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","180":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","181":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","182":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","183":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","184":"The page includes one or more script files from a third-party domain.","185":"The page includes one or more script files from a third-party domain.","186":"The page includes one or more script files from a third-party domain.","187":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","188":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","189":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","190":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","191":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","192":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","193":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","194":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","195":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","196":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","197":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","198":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","199":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","200":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","201":"The page includes one or more script files from a third-party domain.","202":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","203":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","204":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","205":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","206":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","207":"The page includes one or more script files from a third-party domain.","208":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","209":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","210":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","211":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","212":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","213":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","214":"The page includes one or more script files from a third-party domain.","215":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","216":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","217":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","218":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","219":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","220":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","221":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","222":"No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL\/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.","223":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","224":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","225":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","226":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","227":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","228":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","229":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","230":"The page includes one or more script files from a third-party domain.","231":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","232":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","233":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","234":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","235":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","236":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","237":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","238":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","239":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","240":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","241":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","242":"The page includes one or more script files from a third-party domain.","243":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","244":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","245":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","246":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","247":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","248":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","249":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","250":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","251":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","252":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","253":"The page includes one or more script files from a third-party domain.","254":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","255":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","256":"The page includes one or more script files from a third-party domain.","257":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","258":"The page includes one or more script files from a third-party domain.","259":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","260":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","261":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","262":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","263":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","264":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","265":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","266":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","267":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","268":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","269":"The page includes one or more script files from a third-party domain.","270":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","271":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","272":"The page includes one or more script files from a third-party domain.","273":"A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.","274":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","275":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","276":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","277":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","278":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","279":"The page includes one or more script files from a third-party domain.","280":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","281":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","282":"The page includes one or more script files from a third-party domain.","283":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","284":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","285":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","286":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","287":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","288":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","289":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","290":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","291":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","292":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","293":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","294":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","295":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","296":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","297":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","298":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","299":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","300":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","301":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","302":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","303":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","304":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","305":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","306":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","307":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","308":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","309":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","310":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","311":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","312":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","313":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","314":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","315":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","316":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","317":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","318":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","319":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","320":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","321":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","322":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","323":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","324":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","325":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","326":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","327":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","328":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","329":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","330":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","331":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","332":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","333":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","334":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","335":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","336":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","337":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","338":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","339":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","340":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","341":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","342":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","343":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","344":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","345":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","346":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","347":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","348":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","349":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","350":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","351":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","352":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","353":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","354":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","355":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","356":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","357":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","358":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","359":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","360":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","361":"The page includes one or more script files from a third-party domain.","362":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","363":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","364":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","365":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","366":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","367":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","368":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","369":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","370":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","371":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","372":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","373":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","374":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","375":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","376":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","377":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","378":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","379":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","380":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","381":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","382":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","383":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","384":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","385":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","386":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","387":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","388":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","389":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","390":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","391":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","392":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","393":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","394":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","395":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","396":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","397":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","398":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","399":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","400":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","401":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","402":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","403":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","404":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","405":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","406":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","407":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","408":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","409":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","410":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","411":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","412":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","413":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","414":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","415":"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.","416":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","417":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","418":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","419":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","420":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","421":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","422":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","423":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","424":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","425":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","426":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","427":"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.","428":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","429":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","430":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","431":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","432":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","433":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","434":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","435":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","436":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","437":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","438":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","439":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","440":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","441":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","442":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","443":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","444":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","445":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","446":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","447":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","448":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","449":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","450":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","451":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","452":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","453":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","454":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","455":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","456":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","457":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","458":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","459":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","460":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","461":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","462":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","463":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","464":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","465":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","466":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","467":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","468":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","469":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","470":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","471":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","472":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","473":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","474":"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.","475":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","476":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","477":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","478":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","479":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","480":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","481":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","482":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","483":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","484":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","485":"A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.","486":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","487":"The Content Security Policy fails to define one of the directives that has no fallback. Missing\/excluding them is the same as allowing anything.","488":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","489":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","490":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","491":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","492":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","493":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","494":"A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.","495":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","496":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","497":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","498":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","499":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","500":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","501":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","502":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","503":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","504":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","505":"A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.","506":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","507":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","508":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","509":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","510":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","511":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","512":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","513":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","514":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","515":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","516":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","517":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","518":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","519":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","520":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","521":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","522":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","523":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","524":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","525":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","526":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","527":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","528":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","529":"Open redirects are one of the OWASP 2010 Top Ten vulnerabilities. This check looks at user-supplied input in query string parameters and POST data to identify where open redirects might be possible. Open redirects occur when an application allows user-supplied input (e.g. https:\/\/nottrusted.com) to control an offsite redirect. This is generally a pretty accurate way to find where 301 or 302 redirects could be exploited by spammers or phishing attacks.\n\nFor example an attacker could supply a user with the following link: https:\/\/example.com\/example.php?url=https:\/\/malicious.example.com.","530":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","531":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","532":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","533":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","534":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","535":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","536":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","537":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","538":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","539":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","540":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","541":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","542":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","543":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","544":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","545":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","546":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","547":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","548":"The page includes one or more script files from a third-party domain.","549":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","550":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","551":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","552":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","553":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","554":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","555":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","556":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","557":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","558":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","559":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","560":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","561":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","562":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","563":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","564":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","565":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","566":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","567":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","568":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","569":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","570":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","571":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","572":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","573":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","574":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","575":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","576":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","577":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","578":"A HTTP Strict Transport Security (HSTS) header was found, but it is missing the max-age directive (or the directive is missing a value). See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL).","579":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","580":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","581":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","582":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","583":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","584":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","585":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","586":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","587":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","588":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","589":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","590":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","591":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","592":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","593":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","594":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","595":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","596":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","597":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","598":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","599":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","600":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","601":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","602":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","603":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","604":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","605":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","606":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","607":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","608":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","609":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","610":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","611":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","612":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","613":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","614":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","615":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","616":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","617":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","618":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","619":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","620":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","621":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","622":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","623":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","624":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","625":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","626":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","627":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","628":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","629":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","630":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","631":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","632":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","633":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","634":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","635":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","636":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","637":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","638":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","639":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","640":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","641":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","642":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","643":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","644":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","645":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","646":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","647":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","648":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","649":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","650":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","651":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","652":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","653":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","654":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","655":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","656":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","657":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","658":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","659":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","660":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","661":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","662":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","663":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","664":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","665":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","666":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","667":"The response appears to contain suspicious comments which may help an attacker.","668":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","669":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","670":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","671":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","672":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","673":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","674":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","675":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","676":"The page includes one or more script files from a third-party domain.","677":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","678":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","679":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","680":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","681":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","682":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","683":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","684":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","685":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","686":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","687":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","688":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","689":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","690":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","691":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","692":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","693":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","694":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","695":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","696":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","697":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","698":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","699":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","700":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","701":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","702":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","703":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","704":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","705":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","706":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","707":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","708":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","709":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","710":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","711":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","712":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","713":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","714":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","715":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","716":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","717":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","718":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","719":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","720":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","721":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","722":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","723":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","724":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","725":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","726":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","727":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","728":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","729":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","730":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","731":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","732":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","733":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","734":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","735":"The response appears to contain suspicious comments which may help an attacker.","736":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","737":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","738":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","739":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","740":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","741":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","742":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","743":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","744":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","745":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","746":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","747":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","748":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","749":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","750":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","751":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","752":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","753":"The response appears to contain suspicious comments which may help an attacker.","754":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","755":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","756":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","757":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","758":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","759":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","760":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","761":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","762":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","763":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","764":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","765":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","766":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","767":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","768":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","769":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","770":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","771":"The page includes one or more script files from a third-party domain.","772":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","773":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","774":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","775":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","776":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","777":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","778":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","779":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","780":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","781":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","782":"The response appears to contain suspicious comments which may help an attacker.","783":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","784":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","785":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","786":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","787":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","788":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","789":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","790":"No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL\/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.","791":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","792":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","793":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","794":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","795":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","796":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","797":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","798":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","799":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","800":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","801":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","802":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","803":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","804":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","805":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","806":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","807":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","808":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","809":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","810":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","811":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","812":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","813":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","814":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","815":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","816":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","817":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","818":"The response appears to contain suspicious comments which may help an attacker.","819":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","820":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","821":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","822":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","823":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","824":"The response appears to contain suspicious comments which may help an attacker.","825":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","826":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","827":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","828":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","829":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","830":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","831":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","832":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","833":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","834":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","835":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","836":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","837":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","838":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","839":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","840":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","841":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","842":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","843":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","844":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","845":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","846":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","847":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","848":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","849":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","850":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","851":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","852":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","853":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","854":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","855":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","856":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","857":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","858":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","859":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","860":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","861":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","862":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","863":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","864":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","865":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","866":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","867":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","868":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","869":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","870":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","871":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","872":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","873":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","874":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","875":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","876":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","877":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","878":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","879":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","880":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","881":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","882":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","883":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","884":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","885":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","886":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","887":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","888":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","889":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","890":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","891":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","892":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","893":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","894":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","895":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","896":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","897":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","898":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","899":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","900":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","901":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","902":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","903":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","904":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","905":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","906":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","907":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","908":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","909":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","910":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","911":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","912":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","913":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","914":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","915":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","916":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","917":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","918":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","919":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","920":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","921":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","922":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","923":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","924":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","925":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","926":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","927":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","928":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","929":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","930":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","931":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","932":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","933":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","934":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","935":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","936":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","937":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","938":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","939":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","940":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","941":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","942":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","943":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","944":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","945":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","946":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","947":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","948":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","949":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","950":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","951":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","952":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","953":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","954":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","955":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","956":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","957":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","958":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","959":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","960":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","961":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","962":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","963":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","964":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","965":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","966":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","967":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","968":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","969":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","970":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","971":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","972":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","973":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","974":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","975":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","976":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","977":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","978":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","979":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","980":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","981":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","982":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","983":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","984":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","985":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","986":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","987":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","988":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","989":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","990":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","991":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","992":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","993":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","994":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","995":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","996":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","997":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","998":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","999":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1000":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1001":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1002":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1003":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1004":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1005":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1006":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1007":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1008":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1009":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1010":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1011":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1012":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1013":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1014":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1015":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1016":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1017":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1018":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1019":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1020":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1021":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1022":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1023":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1024":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1025":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1026":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1027":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1028":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1029":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1030":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1031":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1032":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1033":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1034":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1035":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1036":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1037":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1038":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1039":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1040":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1041":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1042":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1043":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1044":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1045":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1046":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1047":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1048":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1049":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1050":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1051":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1052":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1053":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1054":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1055":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1056":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1057":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1058":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1059":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1060":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1061":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1062":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1063":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1064":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1065":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1066":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1067":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1068":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1069":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1070":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1071":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1072":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1073":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1074":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1075":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1076":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1077":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1078":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1079":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1080":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1081":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1082":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1083":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1084":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1085":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1086":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1087":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1088":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1089":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1090":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1091":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1092":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1093":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1094":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1095":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1096":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1097":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1098":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1099":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1100":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1101":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1102":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1103":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1104":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1105":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1106":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1107":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1108":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1109":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1110":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1111":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1112":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1113":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1114":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1115":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1116":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1117":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1118":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1119":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1120":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1121":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1122":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1123":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1124":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1125":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1126":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1127":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1128":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1129":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1130":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1131":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1132":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1133":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1134":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1135":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1136":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1137":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1138":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1139":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1140":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1141":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1142":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1143":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1144":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1145":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1146":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1147":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1148":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1149":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1150":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1151":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1152":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1153":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1154":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1155":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1156":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1157":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1158":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1159":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1160":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1161":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1162":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1163":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1164":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1165":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1166":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1167":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1168":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1169":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1170":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1171":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1172":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1173":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1174":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1175":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1176":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1177":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1178":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1179":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1180":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1181":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1182":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1183":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1184":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1185":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1186":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1187":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1188":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1189":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1190":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1191":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1192":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1193":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1194":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1195":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1196":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1197":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1198":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1199":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1200":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1201":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1202":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1203":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1204":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1205":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1206":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1207":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1208":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1209":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1210":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1211":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1212":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1213":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1214":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1215":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1216":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1217":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1218":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1219":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1220":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1221":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1222":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1223":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","1224":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1225":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1226":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1227":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1228":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1229":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1230":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1231":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1232":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1233":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1234":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1235":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1236":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1237":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1238":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1239":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1240":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1241":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1242":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1243":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1244":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1245":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1246":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1247":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1248":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1249":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1250":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1251":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1252":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1253":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1254":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1255":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1256":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1257":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1258":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1259":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1260":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1261":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1262":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1263":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1264":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1265":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1266":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1267":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1268":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1269":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1270":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1271":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1272":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1273":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1274":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1275":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1276":"The page includes one or more script files from a third-party domain.","1277":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1278":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1279":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1280":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1281":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1282":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1283":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1284":"The page includes one or more script files from a third-party domain.","1285":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1286":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1287":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1288":"The page includes one or more script files from a third-party domain.","1289":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1290":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1291":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1292":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","1293":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1294":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1295":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1296":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1297":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1298":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","1299":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1300":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1301":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1302":"This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.","1303":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1304":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","1305":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1306":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1307":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1308":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1309":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","1310":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1311":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1312":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1313":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1314":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1315":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1316":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1317":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1318":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1319":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1320":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1321":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1322":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1323":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1324":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1325":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1326":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1327":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1328":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1329":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1330":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1331":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1332":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1333":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1334":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1335":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1336":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1337":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1338":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1339":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1340":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1341":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1342":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1343":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1344":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1345":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1346":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1347":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1348":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1349":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1350":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1351":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1352":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1353":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1354":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1355":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1356":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1357":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1358":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1359":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1360":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1361":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1362":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1363":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1364":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1365":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1366":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1367":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1368":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1369":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1370":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1371":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1372":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1373":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1374":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1375":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1376":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1377":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1378":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1379":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1380":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1381":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1382":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1383":"No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL\/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.","1384":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1385":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1386":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1387":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1388":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1389":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1390":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1391":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1392":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1393":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1394":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1395":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1396":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1397":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1398":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1399":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1400":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1401":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1402":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1403":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1404":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1405":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1406":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1407":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1408":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1409":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1410":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1411":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1412":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1413":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1414":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1415":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1416":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1417":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1418":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1419":"No Anti-CSRF tokens were found in a HTML submission form.\nA cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL\/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.\n\nCSRF attacks are effective in a number of situations, including:\n    * The victim has an active session on the target site.\n    * The victim is authenticated via HTTP auth on the target site.\n    * The victim is on the same local network as the target site.\n\nCSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.","1420":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1421":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1422":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1423":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1424":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1425":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1426":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1427":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1428":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1429":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1430":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1431":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1432":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1433":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1434":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1435":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1436":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1437":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1438":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1439":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1440":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1441":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1442":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1443":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1444":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1445":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1446":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1447":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1448":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1449":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1450":"A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.","1451":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1452":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1453":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1454":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1455":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1456":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1457":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1458":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1459":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1460":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1461":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1462":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1463":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1464":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1465":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1466":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1467":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1468":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1469":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1470":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1471":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1472":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1473":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1474":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1475":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1476":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1477":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1478":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1479":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1480":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1481":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1482":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1483":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1484":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1485":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1486":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1487":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1488":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1489":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1490":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1491":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1492":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1493":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1494":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1495":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1496":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1497":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1498":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1499":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1500":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1501":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1502":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1503":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1504":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1505":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1506":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1507":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1508":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1509":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1510":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1511":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1512":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1513":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1514":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1515":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1516":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1517":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1518":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1519":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1520":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1521":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1522":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1523":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1524":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1525":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1526":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1527":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1528":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1529":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1530":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1531":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1532":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1533":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1534":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1535":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1536":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1537":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1538":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1539":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1540":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1541":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1542":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1543":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1544":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1545":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1546":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1547":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1548":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1549":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1550":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1551":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1552":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1553":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1554":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1555":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1556":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1557":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1558":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1559":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1560":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1561":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1562":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1563":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1564":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1565":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1566":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1567":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1568":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1569":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1570":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1571":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1572":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1573":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1574":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1575":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1576":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1577":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1578":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1579":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1580":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1581":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1582":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1583":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1584":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1585":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1586":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1587":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1588":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1589":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1590":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1591":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1592":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1593":"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.","1594":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1595":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1596":"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.","1597":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1598":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1599":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1600":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1601":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1602":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1603":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1604":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1605":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1606":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1607":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1608":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1609":"The page includes mixed content, that is content accessed via HTTP instead of HTTPS.","1610":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1611":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1612":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1613":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1614":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1615":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1616":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1617":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1618":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1619":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1620":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1621":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1622":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1623":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1624":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1625":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1626":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1627":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1628":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1629":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1630":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1631":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1632":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1633":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1634":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1635":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1636":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1637":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1638":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1639":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1640":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1641":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1642":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1643":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1644":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1645":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1646":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1647":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1648":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1649":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1650":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1651":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1652":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1653":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1654":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1655":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1656":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1657":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1658":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1659":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1660":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1661":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1662":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1663":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1664":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1665":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1666":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1667":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1668":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1669":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1670":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1671":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1672":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1673":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1674":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1675":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1676":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1677":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1678":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1679":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1680":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1681":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1682":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1683":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1684":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1685":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1686":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1687":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1688":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1689":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1690":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1691":"The response appears to contain suspicious comments which may help an attacker.","1692":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1693":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1694":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1695":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1696":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1697":"The response appears to contain suspicious comments which may help an attacker.","1698":"The response appears to contain suspicious comments which may help an attacker.","1699":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1700":"The response appears to contain suspicious comments which may help an attacker.","1701":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1702":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1703":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1704":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1705":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1706":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1707":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1708":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1709":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1710":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1711":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1712":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1713":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1714":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1715":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1716":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1717":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1718":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1719":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1720":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1721":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1722":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1723":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1724":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1725":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1726":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1727":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1728":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1729":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1730":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1731":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1732":"This page contains an error\/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.","1733":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1734":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1735":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1736":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1737":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1738":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1739":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1740":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1741":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1742":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1743":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1744":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1745":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1746":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1747":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1748":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1749":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1750":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1751":"The response appears to contain suspicious comments which may help an attacker.","1752":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1753":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1754":"The response appears to contain suspicious comments which may help an attacker.","1755":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1756":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1757":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1758":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1759":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1760":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1761":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1762":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1763":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1764":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1765":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1766":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1767":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1768":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1769":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1770":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1771":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1772":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1773":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1774":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1775":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1776":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1777":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1778":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1779":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1780":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1781":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1782":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1783":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1784":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1785":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1786":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1787":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1788":"The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.","1789":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1790":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1791":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1792":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1793":"HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS\/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.","1794":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1795":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1796":"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.","1797":"The given response has been identified as containing a session management token. The 'Other Info' field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to \"Auto-Detect\" then this rule will change the session management to use the tokens identified.","1798":"The Content Security Policy fails to define one of the directives that has no fallback. Missing\/excluding them is the same as allowing anything.","1799":"The Content Security Policy fails to define one of the directives that has no fallback. Missing\/excluding them is the same as allowing anything.","1800":"The response does not protect against 'ClickJacking' attacks. It should include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options.","1801":"The Content Security Policy fails to define one of the directives that has no fallback. Missing\/excluding them is the same as allowing anything.","1802":"Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.","1803":"The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.","1804":"The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.","1805":"No cookie consent banner detected. This may violate GDPR requirements.","1806":"Privacy policy not found on the website. This may violate GDPR\/CCPA regulations."},"solution":{"0":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","2":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","3":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","4":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","5":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","6":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","7":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","8":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","9":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","10":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","11":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","12":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","13":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","14":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","15":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","16":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","17":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","18":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","19":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","20":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","21":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","22":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","23":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","24":"This is an informational alert and so no changes are required.","25":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","26":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","27":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","28":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","29":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","30":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","31":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","32":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","33":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","34":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","35":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","36":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","37":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","38":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","39":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","40":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","41":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","42":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","43":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","44":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","45":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","46":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","47":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","48":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","49":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","50":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","51":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","52":"Remove the private IP address from the HTTP response body. For comments, use JSP\/ASP\/PHP comment instead of HTML\/JavaScript comment which can be seen by client browsers.","53":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","54":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","55":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","56":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","57":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","58":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","59":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","60":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","61":"This is an informational alert and so no changes are required.","62":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","63":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","64":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","65":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","66":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","67":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","68":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","69":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","70":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","71":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","72":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","73":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","74":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","75":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","76":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","77":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","78":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","79":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","80":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","81":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","82":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","83":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","84":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","85":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","86":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","87":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","88":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","89":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","90":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","91":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","92":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","93":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","94":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","95":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","96":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","97":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","98":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","99":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","100":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","101":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","102":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","103":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","104":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","105":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","106":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","107":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","108":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","109":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","110":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","111":"This is an informational alert and so no changes are required.","112":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","113":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","114":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","115":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","116":"This is an informational alert and so no changes are required.","117":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","118":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","119":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","120":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","121":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","122":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","123":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","124":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","125":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","126":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","127":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","128":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","129":"This is an informational alert and so no changes are required.","130":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","131":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","132":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","133":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","134":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","135":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","136":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","137":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","138":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","139":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","140":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","141":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","142":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","143":"This is an informational alert and so no changes are required.","144":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","145":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","146":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","147":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","148":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","149":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","150":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","151":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","152":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","153":"This is an informational alert and so no changes are required.","154":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","155":"This is an informational alert and so no changes are required.","156":"This is an informational alert and so no changes are required.","157":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","158":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","159":"This is an informational alert and so no changes are required.","160":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","161":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","162":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","163":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","164":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","165":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","166":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","167":"This is an informational alert and so no changes are required.","168":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","169":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","170":"This is an informational alert and so no changes are required.","171":"This is an informational alert and so no changes are required.","172":"This is an informational alert and so no changes are required.","173":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","174":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","175":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","176":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","177":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","178":"This is an informational alert and so no changes are required.","179":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","180":"This is an informational alert and so no changes are required.","181":"This is an informational alert and so no changes are required.","182":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","183":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","184":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","185":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","186":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","187":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","188":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","189":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","190":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","191":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","192":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","193":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","194":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","195":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","196":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","197":"This is an informational alert and so no changes are required.","198":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","199":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","200":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","201":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","202":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","203":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","204":"This is an informational alert and so no changes are required.","205":"This is an informational alert and so no changes are required.","206":"This is an informational alert and so no changes are required.","207":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","208":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","209":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","210":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","211":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","212":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","213":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","214":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","215":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","216":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","217":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","218":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","219":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","220":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","221":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","222":"Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.","223":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","224":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","225":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","226":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","227":"This is an informational alert and so no changes are required.","228":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","229":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","230":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","231":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","232":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","233":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","234":"This is an informational alert and so no changes are required.","235":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","236":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","237":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","238":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","239":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","240":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","241":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","242":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","243":"This is an informational alert and so no changes are required.","244":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","245":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","246":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","247":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","248":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","249":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","250":"This is an informational alert and so no changes are required.","251":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","252":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","253":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","254":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","255":"This is an informational alert and so no changes are required.","256":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","257":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","258":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","259":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","260":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","261":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","262":"This is an informational alert and so no changes are required.","263":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","264":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","265":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","266":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","267":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","268":"This is an informational alert and so no changes are required.","269":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","270":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","271":"This is an informational alert and so no changes are required.","272":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","273":"Remove the private IP address from the HTTP response body. For comments, use JSP\/ASP\/PHP comment instead of HTML\/JavaScript comment which can be seen by client browsers.","274":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","275":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","276":"This is an informational alert and so no changes are required.","277":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","278":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","279":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","280":"This is an informational alert and so no changes are required.","281":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","282":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","283":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","284":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","285":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","286":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","287":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","288":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","289":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","290":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","291":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","292":"This is an informational alert and so no changes are required.","293":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","294":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","295":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","296":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","297":"This is an informational alert and so no changes are required.","298":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","299":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","300":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","301":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","302":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","303":"This is an informational alert and so no changes are required.","304":"This is an informational alert and so no changes are required.","305":"This is an informational alert and so no changes are required.","306":"This is an informational alert and so no changes are required.","307":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","308":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","309":"This is an informational alert and so no changes are required.","310":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","311":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","312":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","313":"This is an informational alert and so no changes are required.","314":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","315":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","316":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","317":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","318":"This is an informational alert and so no changes are required.","319":"Validate all input and sanitize output it before writing to any HTML attributes.","320":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","321":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","322":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","323":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","324":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","325":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","326":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","327":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","328":"This is an informational alert and so no changes are required.","329":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","330":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","331":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","332":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","333":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","334":"This is an informational alert and so no changes are required.","335":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","336":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","337":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","338":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","339":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","340":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","341":"Validate all input and sanitize output it before writing to any HTML attributes.","342":"This is an informational alert and so no changes are required.","343":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","344":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","345":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","346":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","347":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","348":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","349":"Validate all input and sanitize output it before writing to any HTML attributes.","350":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","351":"This is an informational alert and so no changes are required.","352":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","353":"Validate all input and sanitize output it before writing to any HTML attributes.","354":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","355":"This is an informational alert and so no changes are required.","356":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","357":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","358":"Validate all input and sanitize output it before writing to any HTML attributes.","359":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","360":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","361":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","362":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","363":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","364":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","365":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","366":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","367":"This is an informational alert and so no changes are required.","368":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","369":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","370":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","371":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","372":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","373":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","374":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","375":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","376":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","377":"This is an informational alert and so no changes are required.","378":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","379":"This is an informational alert and so no changes are required.","380":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","381":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","382":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","383":"This is an informational alert and so no changes are required.","384":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","385":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","386":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","387":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","388":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","389":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","390":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","391":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","392":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","393":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","394":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","395":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","396":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","397":"This is an informational alert and so no changes are required.","398":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","399":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","400":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","401":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","402":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","403":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","404":"This is an informational alert and so no changes are required.","405":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","406":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","407":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","408":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","409":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","410":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","411":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","412":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","413":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","414":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","415":"This is an informational alert rather than a vulnerability and so there is nothing to fix.","416":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","417":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","418":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","419":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","420":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","421":"Validate all input and sanitize output it before writing to any HTML attributes.","422":"This is an informational alert and so no changes are required.","423":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","424":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","425":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","426":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","427":"This is an informational alert rather than a vulnerability and so there is nothing to fix.","428":"This is an informational alert and so no changes are required.","429":"This is an informational alert and so no changes are required.","430":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","431":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","432":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","433":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","434":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","435":"This is an informational alert and so no changes are required.","436":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","437":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","438":"This is an informational alert and so no changes are required.","439":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","440":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","441":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","442":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","443":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","444":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","445":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","446":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","447":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","448":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","449":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","450":"This is an informational alert and so no changes are required.","451":"This is an informational alert and so no changes are required.","452":"This is an informational alert and so no changes are required.","453":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","454":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","455":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","456":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","457":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","458":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","459":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","460":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","461":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","462":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","463":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","464":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","465":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","466":"This is an informational alert and so no changes are required.","467":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","468":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","469":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","470":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","471":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","472":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","473":"This is an informational alert and so no changes are required.","474":"Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.","475":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","476":"This is an informational alert and so no changes are required.","477":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","478":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","479":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","480":"This is an informational alert and so no changes are required.","481":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","482":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","483":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","484":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","485":"Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.","486":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","487":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","488":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","489":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","490":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","491":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","492":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","493":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","494":"Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.","495":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","496":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","497":"This is an informational alert and so no changes are required.","498":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","499":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","500":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","501":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","502":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","503":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","504":"This is an informational alert and so no changes are required.","505":"Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.","506":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","507":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","508":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","509":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","510":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","511":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","512":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","513":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","514":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","515":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","516":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","517":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","518":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","519":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","520":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","521":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","522":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","523":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","524":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","525":"This is an informational alert and so no changes are required.","526":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","527":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","528":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","529":"To avoid the open redirect vulnerability, parameters of the application script\/program must be validated before sending 302 HTTP code (redirect) to the client browser. Implement safe redirect functionality that only redirects to relative URI's, or a list of trusted domains","530":"This is an informational alert and so no changes are required.","531":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","532":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","533":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","534":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","535":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","536":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","537":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","538":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","539":"This is an informational alert and so no changes are required.","540":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","541":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","542":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","543":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","544":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","545":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","546":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","547":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","548":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","549":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","550":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","551":"This is an informational alert and so no changes are required.","552":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","553":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","554":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","555":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","556":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","557":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","558":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","559":"Validate all input and sanitize output it before writing to any HTML attributes.","560":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","561":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","562":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","563":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","564":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","565":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","566":"This is an informational alert and so no changes are required.","567":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","568":"This is an informational alert and so no changes are required.","569":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","570":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","571":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","572":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","573":"This is an informational alert and so no changes are required.","574":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","575":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","576":"This is an informational alert and so no changes are required.","577":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","578":"Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security with an appropriate max-age value.","579":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","580":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","581":"Validate all input and sanitize output it before writing to any HTML attributes.","582":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","583":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","584":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","585":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","586":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","587":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","588":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","589":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","590":"This is an informational alert and so no changes are required.","591":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","592":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","593":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","594":"This is an informational alert and so no changes are required.","595":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","596":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","597":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","598":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","599":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","600":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","601":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","602":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","603":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","604":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","605":"This is an informational alert and so no changes are required.","606":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","607":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","608":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","609":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","610":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","611":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","612":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","613":"This is an informational alert and so no changes are required.","614":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","615":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","616":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","617":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","618":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","619":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","620":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","621":"Validate all input and sanitize output it before writing to any HTML attributes.","622":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","623":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","624":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","625":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","626":"This is an informational alert and so no changes are required.","627":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","628":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","629":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","630":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","631":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","632":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","633":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","634":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","635":"This is an informational alert and so no changes are required.","636":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","637":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","638":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","639":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","640":"This is an informational alert and so no changes are required.","641":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","642":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","643":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","644":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","645":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","646":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","647":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","648":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","649":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","650":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","651":"This is an informational alert and so no changes are required.","652":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","653":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","654":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","655":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","656":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","657":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","658":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","659":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","660":"This is an informational alert and so no changes are required.","661":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","662":"This is an informational alert and so no changes are required.","663":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","664":"This is an informational alert and so no changes are required.","665":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","666":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","667":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","668":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","669":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","670":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","671":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","672":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","673":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","674":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","675":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","676":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","677":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","678":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","679":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","680":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","681":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","682":"This is an informational alert and so no changes are required.","683":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","684":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","685":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","686":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","687":"This is an informational alert and so no changes are required.","688":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","689":"This is an informational alert and so no changes are required.","690":"This is an informational alert and so no changes are required.","691":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","692":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","693":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","694":"This is an informational alert and so no changes are required.","695":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","696":"This is an informational alert and so no changes are required.","697":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","698":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","699":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","700":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","701":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","702":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","703":"This is an informational alert and so no changes are required.","704":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","705":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","706":"This is an informational alert and so no changes are required.","707":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","708":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","709":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","710":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","711":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","712":"This is an informational alert and so no changes are required.","713":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","714":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","715":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","716":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","717":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","718":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","719":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","720":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","721":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","722":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","723":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","724":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","725":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","726":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","727":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","728":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","729":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","730":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","731":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","732":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","733":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","734":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","735":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","736":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","737":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","738":"This is an informational alert and so no changes are required.","739":"This is an informational alert and so no changes are required.","740":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","741":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","742":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","743":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","744":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","745":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","746":"This is an informational alert and so no changes are required.","747":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","748":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","749":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","750":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","751":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","752":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","753":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","754":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","755":"This is an informational alert and so no changes are required.","756":"This is an informational alert and so no changes are required.","757":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","758":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","759":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","760":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","761":"This is an informational alert and so no changes are required.","762":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","763":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","764":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","765":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","766":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","767":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","768":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","769":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","770":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","771":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","772":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","773":"This is an informational alert and so no changes are required.","774":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","775":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","776":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","777":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","778":"This is an informational alert and so no changes are required.","779":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","780":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","781":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","782":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","783":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","784":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","785":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","786":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","787":"This is an informational alert and so no changes are required.","788":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","789":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","790":"Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.","791":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","792":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","793":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","794":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","795":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","796":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","797":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","798":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","799":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","800":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","801":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","802":"This is an informational alert and so no changes are required.","803":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","804":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","805":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","806":"This is an informational alert and so no changes are required.","807":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","808":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","809":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","810":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","811":"This is an informational alert and so no changes are required.","812":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","813":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","814":"This is an informational alert and so no changes are required.","815":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","816":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","817":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","818":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","819":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","820":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","821":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","822":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","823":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","824":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","825":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","826":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","827":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","828":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","829":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","830":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","831":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","832":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","833":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","834":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","835":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","836":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","837":"This is an informational alert and so no changes are required.","838":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","839":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","840":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","841":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","842":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","843":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","844":"This is an informational alert and so no changes are required.","845":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","846":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","847":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","848":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","849":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","850":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","851":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","852":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","853":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","854":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","855":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","856":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","857":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","858":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","859":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","860":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","861":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","862":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","863":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","864":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","865":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","866":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","867":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","868":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","869":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","870":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","871":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","872":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","873":"This is an informational alert and so no changes are required.","874":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","875":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","876":"This is an informational alert and so no changes are required.","877":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","878":"This is an informational alert and so no changes are required.","879":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","880":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","881":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","882":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","883":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","884":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","885":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","886":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","887":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","888":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","889":"This is an informational alert and so no changes are required.","890":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","891":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","892":"This is an informational alert and so no changes are required.","893":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","894":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","895":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","896":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","897":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","898":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","899":"This is an informational alert and so no changes are required.","900":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","901":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","902":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","903":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","904":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","905":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","906":"This is an informational alert and so no changes are required.","907":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","908":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","909":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","910":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","911":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","912":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","913":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","914":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","915":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","916":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","917":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","918":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","919":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","920":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","921":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","922":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","923":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","924":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","925":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","926":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","927":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","928":"This is an informational alert and so no changes are required.","929":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","930":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","931":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","932":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","933":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","934":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","935":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","936":"This is an informational alert and so no changes are required.","937":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","938":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","939":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","940":"This is an informational alert and so no changes are required.","941":"This is an informational alert and so no changes are required.","942":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","943":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","944":"This is an informational alert and so no changes are required.","945":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","946":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","947":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","948":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","949":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","950":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","951":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","952":"This is an informational alert and so no changes are required.","953":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","954":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","955":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","956":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","957":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","958":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","959":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","960":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","961":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","962":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","963":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","964":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","965":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","966":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","967":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","968":"This is an informational alert and so no changes are required.","969":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","970":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","971":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","972":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","973":"This is an informational alert and so no changes are required.","974":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","975":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","976":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","977":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","978":"This is an informational alert and so no changes are required.","979":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","980":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","981":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","982":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","983":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","984":"This is an informational alert and so no changes are required.","985":"This is an informational alert and so no changes are required.","986":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","987":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","988":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","989":"This is an informational alert and so no changes are required.","990":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","991":"This is an informational alert and so no changes are required.","992":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","993":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","994":"This is an informational alert and so no changes are required.","995":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","996":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","997":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","998":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","999":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1000":"This is an informational alert and so no changes are required.","1001":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1002":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1003":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1004":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1005":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1006":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1007":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1008":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1009":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1010":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1011":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1012":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1013":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1014":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1015":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1016":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1017":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1018":"This is an informational alert and so no changes are required.","1019":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1020":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1021":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1022":"This is an informational alert and so no changes are required.","1023":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1024":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1025":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1026":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1027":"This is an informational alert and so no changes are required.","1028":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1029":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1030":"This is an informational alert and so no changes are required.","1031":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1032":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1033":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1034":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1035":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1036":"This is an informational alert and so no changes are required.","1037":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1038":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1039":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1040":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1041":"This is an informational alert and so no changes are required.","1042":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1043":"This is an informational alert and so no changes are required.","1044":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1045":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1046":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1047":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1048":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1049":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1050":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1051":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1052":"This is an informational alert and so no changes are required.","1053":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1054":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1055":"This is an informational alert and so no changes are required.","1056":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1057":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1058":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1059":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1060":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1061":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1062":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1063":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1064":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1065":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1066":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1067":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1068":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1069":"This is an informational alert and so no changes are required.","1070":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1071":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1072":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1073":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1074":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1075":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1076":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1077":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1078":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1079":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1080":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1081":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1082":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1083":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1084":"This is an informational alert and so no changes are required.","1085":"This is an informational alert and so no changes are required.","1086":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1087":"This is an informational alert and so no changes are required.","1088":"This is an informational alert and so no changes are required.","1089":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1090":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1091":"This is an informational alert and so no changes are required.","1092":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1093":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1094":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1095":"This is an informational alert and so no changes are required.","1096":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1097":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1098":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1099":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1100":"This is an informational alert and so no changes are required.","1101":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1102":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1103":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1104":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1105":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1106":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1107":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1108":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1109":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1110":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1111":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1112":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1113":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1114":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1115":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1116":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1117":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1118":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1119":"This is an informational alert and so no changes are required.","1120":"This is an informational alert and so no changes are required.","1121":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1122":"This is an informational alert and so no changes are required.","1123":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1124":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1125":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1126":"This is an informational alert and so no changes are required.","1127":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1128":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1129":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1130":"This is an informational alert and so no changes are required.","1131":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1132":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1133":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1134":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1135":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1136":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1137":"This is an informational alert and so no changes are required.","1138":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1139":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1140":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1141":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1142":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1143":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1144":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1145":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1146":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1147":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1148":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1149":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1150":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1151":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1152":"This is an informational alert and so no changes are required.","1153":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1154":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1155":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1156":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1157":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1158":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1159":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1160":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1161":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1162":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1163":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1164":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1165":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1166":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1167":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1168":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1169":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1170":"This is an informational alert and so no changes are required.","1171":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1172":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1173":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1174":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1175":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1176":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1177":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1178":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1179":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1180":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1181":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1182":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1183":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1184":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1185":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1186":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1187":"This is an informational alert and so no changes are required.","1188":"This is an informational alert and so no changes are required.","1189":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1190":"This is an informational alert and so no changes are required.","1191":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1192":"This is an informational alert and so no changes are required.","1193":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1194":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1195":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1196":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1197":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1198":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1199":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1200":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1201":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1202":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1203":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1204":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1205":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1206":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1207":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1208":"This is an informational alert and so no changes are required.","1209":"This is an informational alert and so no changes are required.","1210":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1211":"This is an informational alert and so no changes are required.","1212":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1213":"This is an informational alert and so no changes are required.","1214":"This is an informational alert and so no changes are required.","1215":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1216":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1217":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1218":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1219":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1220":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1221":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1222":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1223":"Validate all input and sanitize output it before writing to any Javascript on* events.","1224":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1225":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1226":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1227":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1228":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1229":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1230":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1231":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1232":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1233":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1234":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1235":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1236":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1237":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1238":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1239":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1240":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1241":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1242":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1243":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1244":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1245":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1246":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1247":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1248":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1249":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1250":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1251":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1252":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1253":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1254":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1255":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1256":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1257":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1258":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1259":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1260":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1261":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1262":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1263":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1264":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1265":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1266":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1267":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1268":"This is an informational alert and so no changes are required.","1269":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1270":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1271":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1272":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1273":"This is an informational alert and so no changes are required.","1274":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1275":"This is an informational alert and so no changes are required.","1276":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","1277":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1278":"This is an informational alert and so no changes are required.","1279":"This is an informational alert and so no changes are required.","1280":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1281":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1282":"This is an informational alert and so no changes are required.","1283":"This is an informational alert and so no changes are required.","1284":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","1285":"This is an informational alert and so no changes are required.","1286":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1287":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1288":"Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.","1289":"This is an informational alert and so no changes are required.","1290":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1291":"This is an informational alert and so no changes are required.","1292":"Validate all input and sanitize output it before writing to any Javascript on* events.","1293":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1294":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1295":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1296":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1297":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1298":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","1299":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1300":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1301":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1302":"Validate all input and sanitize output it before writing to any Javascript on* events.","1303":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1304":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","1305":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1306":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1307":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1308":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1309":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","1310":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1311":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1312":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1313":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1314":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1315":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1316":"This is an informational alert and so no changes are required.","1317":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1318":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1319":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1320":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1321":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1322":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1323":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1324":"This is an informational alert and so no changes are required.","1325":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1326":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1327":"This is an informational alert and so no changes are required.","1328":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1329":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1330":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1331":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1332":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1333":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1334":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1335":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1336":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1337":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1338":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1339":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1340":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1341":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1342":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1343":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1344":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1345":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1346":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1347":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1348":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1349":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1350":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1351":"This is an informational alert and so no changes are required.","1352":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1353":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1354":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1355":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1356":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1357":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1358":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1359":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1360":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1361":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1362":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1363":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1364":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1365":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1366":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1367":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1368":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1369":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1370":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1371":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1372":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1373":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1374":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1375":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1376":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1377":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1378":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1379":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1380":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1381":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1382":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1383":"Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.","1384":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1385":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1386":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1387":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1388":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1389":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1390":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1391":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1392":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1393":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1394":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1395":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1396":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1397":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1398":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1399":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1400":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1401":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1402":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1403":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1404":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1405":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1406":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1407":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1408":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1409":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1410":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1411":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1412":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1413":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1414":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1415":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1416":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1417":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1418":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1419":"Phase: Architecture and Design\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\nFor example, use anti-CSRF packages such as the OWASP CSRFGuard.\n\nPhase: Implementation\nEnsure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.\n\nPhase: Architecture and Design\nGenerate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\nNote that this can be bypassed using XSS.\n\nIdentify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.\nNote that this can be bypassed using XSS.\n\nUse the ESAPI Session Management control.\nThis control includes a component for CSRF.\n\nDo not use the GET method for any request that triggers a state change.\n\nPhase: Implementation\nCheck the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.","1420":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1421":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1422":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1423":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1424":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1425":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1426":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1427":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1428":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1429":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1430":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1431":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1432":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1433":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1434":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1435":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1436":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1437":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1438":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1439":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1440":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1441":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1442":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1443":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1444":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1445":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1446":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1447":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1448":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1449":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1450":"Remove the private IP address from the HTTP response body. For comments, use JSP\/ASP\/PHP comment instead of HTML\/JavaScript comment which can be seen by client browsers.","1451":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1452":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1453":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1454":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1455":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1456":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1457":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1458":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1459":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1460":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1461":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1462":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1463":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1464":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1465":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1466":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1467":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1468":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1469":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1470":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1471":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1472":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1473":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1474":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1475":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1476":"This is an informational alert and so no changes are required.","1477":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1478":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1479":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1480":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1481":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1482":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1483":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1484":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1485":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1486":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1487":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1488":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1489":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1490":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1491":"This is an informational alert and so no changes are required.","1492":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1493":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1494":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1495":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1496":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1497":"This is an informational alert and so no changes are required.","1498":"This is an informational alert and so no changes are required.","1499":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1500":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1501":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1502":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1503":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1504":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1505":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1506":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1507":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1508":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1509":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1510":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1511":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1512":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1513":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1514":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1515":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1516":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1517":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1518":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1519":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1520":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1521":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1522":"This is an informational alert and so no changes are required.","1523":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1524":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1525":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1526":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1527":"This is an informational alert and so no changes are required.","1528":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1529":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1530":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1531":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1532":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1533":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1534":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1535":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1536":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1537":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1538":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1539":"This is an informational alert and so no changes are required.","1540":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1541":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1542":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1543":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1544":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1545":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1546":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1547":"This is an informational alert and so no changes are required.","1548":"This is an informational alert and so no changes are required.","1549":"This is an informational alert and so no changes are required.","1550":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1551":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1552":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1553":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1554":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1555":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1556":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1557":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1558":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1559":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1560":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1561":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1562":"This is an informational alert and so no changes are required.","1563":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1564":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1565":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1566":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1567":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1568":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1569":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1570":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1571":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1572":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1573":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1574":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1575":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1576":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1577":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1578":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1579":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1580":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1581":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1582":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1583":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1584":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1585":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1586":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1587":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1588":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1589":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1590":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1591":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1592":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1593":"This is an informational alert rather than a vulnerability and so there is nothing to fix.","1594":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1595":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1596":"This is an informational alert rather than a vulnerability and so there is nothing to fix.","1597":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1598":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1599":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1600":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1601":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1602":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1603":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1604":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1605":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1606":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1607":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1608":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1609":"A page that is available over SSL\/TLS must be comprised completely of content which is transmitted over SSL\/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\nThis includes content from third party sites.","1610":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1611":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1612":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1613":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1614":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1615":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1616":"This is an informational alert and so no changes are required.","1617":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1618":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1619":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1620":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1621":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1622":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1623":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1624":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1625":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1626":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1627":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1628":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1629":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1630":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1631":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1632":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1633":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1634":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1635":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1636":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1637":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1638":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1639":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1640":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1641":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1642":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1643":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1644":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1645":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1646":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1647":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1648":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1649":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1650":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1651":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1652":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1653":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1654":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1655":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1656":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1657":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1658":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1659":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1660":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1661":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1662":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1663":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1664":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1665":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1666":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1667":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1668":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1669":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1670":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1671":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1672":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1673":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1674":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1675":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1676":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1677":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1678":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1679":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1680":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1681":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1682":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1683":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1684":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1685":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1686":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1687":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1688":"This is an informational alert and so no changes are required.","1689":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1690":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1691":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","1692":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1693":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1694":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1695":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1696":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1697":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","1698":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","1699":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1700":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","1701":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1702":"This is an informational alert and so no changes are required.","1703":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1704":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1705":"This is an informational alert and so no changes are required.","1706":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1707":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1708":"This is an informational alert and so no changes are required.","1709":"This is an informational alert and so no changes are required.","1710":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1711":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1712":"This is an informational alert and so no changes are required.","1713":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1714":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1715":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1716":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1717":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1718":"This is an informational alert and so no changes are required.","1719":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1720":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1721":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1722":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1723":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1724":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1725":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1726":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1727":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1728":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1729":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1730":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1731":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1732":"Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference\/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.","1733":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1734":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1735":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1736":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1737":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1738":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1739":"This is an informational alert and so no changes are required.","1740":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1741":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1742":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1743":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1744":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1745":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1746":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1747":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1748":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1749":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1750":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1751":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","1752":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1753":"This is an informational alert and so no changes are required.","1754":"Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.","1755":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1756":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1757":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1758":"This is an informational alert and so no changes are required.","1759":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1760":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1761":"This is an informational alert and so no changes are required.","1762":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1763":"This is an informational alert and so no changes are required.","1764":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1765":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1766":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1767":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1768":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1769":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1770":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1771":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1772":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1773":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1774":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1775":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1776":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1777":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1778":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1779":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1780":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1781":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1782":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1783":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1784":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1785":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1786":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1787":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1788":"For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".","1789":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1790":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1791":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1792":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1793":"Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.","1794":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1795":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1796":"This is an informational alert rather than a vulnerability and so there is nothing to fix.","1797":"This is an informational alert rather than a vulnerability and so there is nothing to fix.","1798":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","1799":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","1800":"Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site\/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.","1801":"Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.","1802":"Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.","1803":"This is an informational alert and so no changes are required.","1804":"Ensure that the application\/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application\/web server to not perform MIME-sniffing.","1805":"Ensure a consent banner is present and allows users to opt in\/out of tracking.","1806":"Ensure a clear and accessible Privacy Policy link is present on the homepage."},"reference":{"0":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","2":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","3":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","4":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","5":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","6":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","7":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","8":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","9":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","10":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","11":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","12":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","13":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","14":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","15":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","16":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","17":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","18":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","19":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","20":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","21":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","22":"","23":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","24":"","25":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","26":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","27":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","28":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","29":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","30":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","31":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","32":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","33":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","34":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","35":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","36":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","37":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","38":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","39":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","40":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","41":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","42":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","43":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","44":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","45":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","46":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","47":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","48":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","49":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","50":"","51":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","52":"https:\/\/tools.ietf.org\/html\/rfc1918","53":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","54":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","55":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","56":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","57":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","58":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","59":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","60":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","61":"","62":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","63":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","64":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","65":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","66":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","67":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","68":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","69":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","70":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","71":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","72":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","73":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","74":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","75":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","76":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","77":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","78":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","79":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","80":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","81":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","82":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","83":"","84":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","85":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","86":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","87":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","88":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","89":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","90":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","91":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","92":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","93":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","94":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","95":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","96":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","97":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","98":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","99":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","100":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","101":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","102":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","103":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","104":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","105":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","106":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","107":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","108":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","109":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","110":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","111":"","112":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","113":"","114":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","115":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","116":"","117":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","118":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","119":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","120":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","121":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","122":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","123":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","124":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","125":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","126":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","127":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","128":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","129":"","130":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","131":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","132":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","133":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","134":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","135":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","136":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","137":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","138":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","139":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","140":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","141":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","142":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","143":"","144":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","145":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","146":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","147":"","148":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","149":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","150":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","151":"","152":"","153":"","154":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","155":"","156":"","157":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","158":"","159":"","160":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","161":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","162":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","163":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","164":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","165":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","166":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","167":"","168":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","169":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","170":"","171":"","172":"","173":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","174":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","175":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","176":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","177":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","178":"","179":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","180":"","181":"","182":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","183":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","184":"","185":"","186":"","187":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","188":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","189":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","190":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","191":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","192":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","193":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","194":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","195":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","196":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","197":"","198":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","199":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","200":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","201":"","202":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","203":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","204":"","205":"","206":"","207":"","208":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","209":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","210":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","211":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","212":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","213":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","214":"","215":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","216":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","217":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","218":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","219":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","220":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","221":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","222":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\nhttps:\/\/cwe.mitre.org\/data\/definitions\/352.html","223":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","224":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","225":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","226":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","227":"","228":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","229":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","230":"","231":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","232":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","233":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","234":"","235":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","236":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","237":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","238":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","239":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","240":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","241":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","242":"","243":"","244":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","245":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","246":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","247":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","248":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","249":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","250":"","251":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","252":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","253":"","254":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","255":"","256":"","257":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","258":"","259":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","260":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","261":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","262":"","263":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","264":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","265":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","266":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","267":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","268":"","269":"","270":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","271":"","272":"","273":"https:\/\/tools.ietf.org\/html\/rfc1918","274":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","275":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","276":"","277":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","278":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","279":"","280":"","281":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","282":"","283":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","284":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","285":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","286":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","287":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","288":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","289":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","290":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","291":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","292":"","293":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","294":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","295":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","296":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","297":"","298":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","299":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","300":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","301":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","302":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","303":"","304":"","305":"","306":"","307":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","308":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","309":"","310":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","311":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","312":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","313":"","314":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","315":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","316":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","317":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","318":"","319":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","320":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","321":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","322":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","323":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","324":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","325":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","326":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","327":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","328":"","329":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","330":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","331":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","332":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","333":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","334":"","335":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","336":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","337":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","338":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","339":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","340":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","341":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","342":"","343":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","344":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","345":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","346":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","347":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","348":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","349":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","350":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","351":"","352":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","353":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","354":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","355":"","356":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","357":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","358":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","359":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","360":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","361":"","362":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","363":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","364":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","365":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","366":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","367":"","368":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","369":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","370":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","371":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","372":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","373":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","374":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","375":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","376":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","377":"","378":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","379":"","380":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","381":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","382":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","383":"","384":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","385":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","386":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","387":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","388":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","389":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","390":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","391":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","392":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","393":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","394":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","395":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","396":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","397":"","398":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","399":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","400":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","401":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","402":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","403":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","404":"","405":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","406":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","407":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","408":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","409":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","410":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","411":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","412":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","413":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","414":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","415":"https:\/\/www.zaproxy.org\/docs\/desktop\/addons\/authentication-helper\/session-mgmt-id","416":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","417":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","418":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","419":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","420":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","421":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","422":"","423":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","424":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","425":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","426":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","427":"https:\/\/www.zaproxy.org\/docs\/desktop\/addons\/authentication-helper\/session-mgmt-id","428":"","429":"","430":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","431":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","432":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","433":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","434":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","435":"","436":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","437":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","438":"","439":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","440":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","441":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","442":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","443":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","444":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","445":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","446":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","447":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","448":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","449":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","450":"","451":"","452":"","453":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","454":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","455":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","456":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","457":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","458":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","459":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","460":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","461":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","462":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","463":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","464":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","465":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","466":"","467":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","468":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","469":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","470":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","471":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","472":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","473":"","474":"https:\/\/tools.ietf.org\/html\/draft-ietf-httpbis-cookie-same-site","475":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","476":"","477":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","478":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","479":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","480":"","481":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","482":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","483":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","484":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","485":"https:\/\/tools.ietf.org\/html\/draft-ietf-httpbis-cookie-same-site","486":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","487":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","488":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","489":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","490":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","491":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","492":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","493":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","494":"https:\/\/owasp.org\/www-project-web-security-testing-guide\/v41\/4-Web_Application_Security_Testing\/06-Session_Management_Testing\/02-Testing_for_Cookies_Attributes.html","495":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","496":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","497":"","498":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","499":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","500":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","501":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","502":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","503":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","504":"","505":"https:\/\/owasp.org\/www-project-web-security-testing-guide\/v41\/4-Web_Application_Security_Testing\/06-Session_Management_Testing\/02-Testing_for_Cookies_Attributes.html","506":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","507":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","508":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","509":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","510":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","511":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","512":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","513":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","514":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","515":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","516":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","517":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","518":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","519":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","520":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","521":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","522":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","523":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","524":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","525":"","526":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","527":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","528":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","529":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\nhttps:\/\/cwe.mitre.org\/data\/definitions\/601.html","530":"","531":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","532":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","533":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","534":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","535":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","536":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","537":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","538":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","539":"","540":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","541":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","542":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","543":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","544":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","545":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","546":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","547":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","548":"","549":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","550":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","551":"","552":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","553":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","554":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","555":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","556":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","557":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","558":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","559":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","560":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","561":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","562":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","563":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","564":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","565":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","566":"","567":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","568":"","569":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","570":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","571":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","572":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","573":"","574":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","575":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","576":"","577":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","578":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc6797#section-6.2","579":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","580":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","581":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","582":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","583":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","584":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","585":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","586":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","587":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","588":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","589":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","590":"","591":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","592":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","593":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","594":"","595":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","596":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","597":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","598":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","599":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","600":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","601":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","602":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","603":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","604":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","605":"","606":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","607":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","608":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","609":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","610":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","611":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","612":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","613":"","614":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","615":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","616":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","617":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","618":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","619":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","620":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","621":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","622":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","623":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","624":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","625":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","626":"","627":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","628":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","629":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","630":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","631":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","632":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","633":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","634":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","635":"","636":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","637":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","638":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","639":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","640":"","641":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","642":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","643":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","644":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","645":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","646":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","647":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","648":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","649":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","650":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","651":"","652":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","653":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","654":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","655":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","656":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","657":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","658":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","659":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","660":"","661":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","662":"","663":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","664":"","665":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","666":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","667":"","668":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","669":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","670":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","671":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","672":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","673":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","674":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","675":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","676":"","677":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","678":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","679":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","680":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","681":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","682":"","683":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","684":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","685":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","686":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","687":"","688":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","689":"","690":"","691":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","692":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","693":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","694":"","695":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","696":"","697":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","698":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","699":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","700":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","701":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","702":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","703":"","704":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","705":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","706":"","707":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","708":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","709":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","710":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","711":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","712":"","713":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","714":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","715":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","716":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","717":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","718":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","719":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","720":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","721":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","722":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","723":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","724":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","725":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","726":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","727":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","728":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","729":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","730":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","731":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","732":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","733":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","734":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","735":"","736":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","737":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","738":"","739":"","740":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","741":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","742":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","743":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","744":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","745":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","746":"","747":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","748":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","749":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","750":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","751":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","752":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","753":"","754":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","755":"","756":"","757":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","758":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","759":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","760":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","761":"","762":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","763":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","764":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","765":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","766":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","767":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","768":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","769":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","770":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","771":"","772":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","773":"","774":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","775":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","776":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","777":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","778":"","779":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","780":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","781":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","782":"","783":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","784":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","785":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","786":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","787":"","788":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","789":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","790":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\nhttps:\/\/cwe.mitre.org\/data\/definitions\/352.html","791":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","792":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","793":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","794":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","795":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","796":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","797":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","798":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","799":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","800":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","801":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","802":"","803":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","804":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","805":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","806":"","807":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","808":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","809":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","810":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","811":"","812":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","813":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","814":"","815":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","816":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","817":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","818":"","819":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","820":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","821":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","822":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","823":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","824":"","825":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","826":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","827":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","828":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","829":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","830":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","831":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","832":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","833":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","834":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","835":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","836":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","837":"","838":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","839":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","840":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","841":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","842":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","843":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","844":"","845":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","846":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","847":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","848":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","849":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","850":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","851":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","852":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","853":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","854":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","855":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","856":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","857":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","858":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","859":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","860":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","861":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","862":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","863":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","864":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","865":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","866":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","867":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","868":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","869":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","870":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","871":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","872":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","873":"","874":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","875":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","876":"","877":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","878":"","879":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","880":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","881":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","882":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","883":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","884":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","885":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","886":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","887":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","888":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","889":"","890":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","891":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","892":"","893":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","894":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","895":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","896":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","897":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","898":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","899":"","900":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","901":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","902":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","903":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","904":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","905":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","906":"","907":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","908":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","909":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","910":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","911":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","912":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","913":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","914":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","915":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","916":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","917":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","918":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","919":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","920":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","921":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","922":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","923":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","924":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","925":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","926":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","927":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","928":"","929":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","930":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","931":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","932":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","933":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","934":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","935":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","936":"","937":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","938":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","939":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","940":"","941":"","942":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","943":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","944":"","945":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","946":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","947":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","948":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","949":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","950":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","951":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","952":"","953":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","954":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","955":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","956":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","957":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","958":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","959":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","960":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","961":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","962":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","963":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","964":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","965":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","966":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","967":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","968":"","969":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","970":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","971":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","972":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","973":"","974":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","975":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","976":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","977":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","978":"","979":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","980":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","981":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","982":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","983":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","984":"","985":"","986":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","987":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","988":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","989":"","990":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","991":"","992":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","993":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","994":"","995":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","996":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","997":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","998":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","999":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1000":"","1001":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1002":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1003":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1004":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1005":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1006":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1007":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1008":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1009":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1010":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1011":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1012":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1013":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1014":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1015":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1016":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1017":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1018":"","1019":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1020":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1021":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1022":"","1023":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1024":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1025":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1026":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1027":"","1028":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1029":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1030":"","1031":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1032":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1033":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1034":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1035":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1036":"","1037":"","1038":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1039":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1040":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1041":"","1042":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1043":"","1044":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1045":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1046":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1047":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1048":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1049":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1050":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1051":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1052":"","1053":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1054":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1055":"","1056":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1057":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1058":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1059":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1060":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1061":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1062":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1063":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1064":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1065":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1066":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1067":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1068":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1069":"","1070":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1071":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1072":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1073":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1074":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1075":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1076":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1077":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1078":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1079":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1080":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1081":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1082":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1083":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1084":"","1085":"","1086":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1087":"","1088":"","1089":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1090":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1091":"","1092":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1093":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1094":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1095":"","1096":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1097":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1098":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1099":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1100":"","1101":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1102":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1103":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1104":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1105":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1106":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1107":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1108":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1109":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1110":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1111":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1112":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1113":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1114":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1115":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1116":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1117":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1118":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1119":"","1120":"","1121":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1122":"","1123":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1124":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1125":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1126":"","1127":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1128":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1129":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1130":"","1131":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1132":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1133":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1134":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1135":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1136":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1137":"","1138":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1139":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1140":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1141":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1142":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1143":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1144":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1145":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1146":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1147":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1148":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1149":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1150":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1151":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1152":"","1153":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1154":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1155":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1156":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1157":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1158":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1159":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1160":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1161":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1162":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1163":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1164":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1165":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1166":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1167":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1168":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1169":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1170":"","1171":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1172":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1173":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1174":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1175":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1176":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1177":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1178":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1179":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1180":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1181":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1182":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1183":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1184":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1185":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1186":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1187":"","1188":"","1189":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1190":"","1191":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1192":"","1193":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1194":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1195":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1196":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1197":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1198":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1199":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1200":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1201":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1202":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1203":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1204":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1205":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1206":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1207":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1208":"","1209":"","1210":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1211":"","1212":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1213":"","1214":"","1215":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1216":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1217":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1218":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1219":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1220":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1221":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1222":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1223":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","1224":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1225":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1226":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1227":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1228":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1229":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1230":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1231":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1232":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1233":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1234":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1235":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1236":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1237":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1238":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1239":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1240":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1241":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1242":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1243":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1244":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1245":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1246":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1247":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1248":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1249":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1250":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1251":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1252":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1253":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1254":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1255":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1256":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1257":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1258":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1259":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1260":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1261":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1262":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1263":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1264":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1265":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1266":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1267":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1268":"","1269":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1270":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1271":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1272":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1273":"","1274":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1275":"","1276":"","1277":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1278":"","1279":"","1280":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1281":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1282":"","1283":"","1284":"","1285":"","1286":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1287":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1288":"","1289":"","1290":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1291":"","1292":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","1293":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1294":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1295":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1296":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1297":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1298":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","1299":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1300":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1301":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1302":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html","1303":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1304":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","1305":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1306":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1307":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1308":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1309":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","1310":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1311":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1312":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1313":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1314":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1315":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1316":"","1317":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1318":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1319":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1320":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1321":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1322":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1323":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1324":"","1325":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1326":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1327":"","1328":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1329":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1330":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1331":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1332":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1333":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1334":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1335":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1336":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1337":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1338":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1339":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1340":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1341":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1342":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1343":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1344":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1345":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1346":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1347":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1348":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1349":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1350":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1351":"","1352":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1353":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1354":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1355":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1356":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1357":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1358":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1359":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1360":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1361":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1362":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1363":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1364":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1365":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1366":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1367":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1368":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1369":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1370":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1371":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1372":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1373":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1374":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1375":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1376":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1377":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1378":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1379":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1380":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1381":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1382":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1383":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\nhttps:\/\/cwe.mitre.org\/data\/definitions\/352.html","1384":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1385":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1386":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1387":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1388":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1389":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1390":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1391":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1392":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1393":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1394":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1395":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1396":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1397":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1398":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1399":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1400":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1401":"","1402":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1403":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1404":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1405":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1406":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1407":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1408":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1409":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1410":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1411":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1412":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1413":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1414":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1415":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1416":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1417":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1418":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1419":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\nhttps:\/\/cwe.mitre.org\/data\/definitions\/352.html","1420":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1421":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1422":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1423":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1424":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1425":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1426":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1427":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1428":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1429":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1430":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1431":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1432":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1433":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1434":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1435":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1436":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1437":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1438":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1439":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1440":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1441":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1442":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1443":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1444":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1445":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1446":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1447":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1448":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1449":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1450":"https:\/\/tools.ietf.org\/html\/rfc1918","1451":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1452":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1453":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1454":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1455":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1456":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1457":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1458":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1459":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1460":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1461":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1462":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1463":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1464":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1465":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1466":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1467":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1468":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1469":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1470":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1471":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1472":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1473":"","1474":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1475":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1476":"","1477":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1478":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1479":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1480":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1481":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1482":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1483":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1484":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1485":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1486":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1487":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1488":"","1489":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1490":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1491":"","1492":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1493":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1494":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1495":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1496":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1497":"","1498":"","1499":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1500":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1501":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1502":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1503":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1504":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1505":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1506":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1507":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1508":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1509":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1510":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1511":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1512":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1513":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1514":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1515":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1516":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1517":"","1518":"","1519":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1520":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1521":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1522":"","1523":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1524":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1525":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1526":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1527":"","1528":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1529":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1530":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1531":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1532":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1533":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1534":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1535":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1536":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1537":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1538":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1539":"","1540":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1541":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1542":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1543":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1544":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1545":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1546":"","1547":"","1548":"","1549":"","1550":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1551":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1552":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1553":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1554":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1555":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1556":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1557":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1558":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1559":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1560":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1561":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1562":"","1563":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1564":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1565":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1566":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1567":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1568":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1569":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1570":"","1571":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1572":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1573":"","1574":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1575":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1576":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1577":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1578":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1579":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1580":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1581":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1582":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1583":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1584":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1585":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1586":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1587":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1588":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1589":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1590":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1591":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1592":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1593":"https:\/\/www.zaproxy.org\/docs\/desktop\/addons\/authentication-helper\/session-mgmt-id","1594":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1595":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1596":"https:\/\/www.zaproxy.org\/docs\/desktop\/addons\/authentication-helper\/session-mgmt-id","1597":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1598":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1599":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1600":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1601":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1602":"","1603":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1604":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1605":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1606":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1607":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1608":"","1609":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Transport_Layer_Protection_Cheat_Sheet.html","1610":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1611":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1612":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1613":"","1614":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1615":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1616":"","1617":"","1618":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1619":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1620":"","1621":"","1622":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1623":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1624":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1625":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1626":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1627":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1628":"","1629":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1630":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1631":"","1632":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1633":"","1634":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1635":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1636":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1637":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1638":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1639":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1640":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1641":"","1642":"","1643":"","1644":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1645":"","1646":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1647":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1648":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1649":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1650":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1651":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1652":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1653":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1654":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1655":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1656":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1657":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1658":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1659":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1660":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1661":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1662":"","1663":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1664":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1665":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1666":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1667":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1668":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1669":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1670":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1671":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1672":"","1673":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1674":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1675":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1676":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1677":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1678":"","1679":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1680":"","1681":"","1682":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1683":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1684":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1685":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1686":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1687":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1688":"","1689":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1690":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1691":"","1692":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1693":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1694":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1695":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1696":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1697":"","1698":"","1699":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1700":"","1701":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1702":"","1703":"","1704":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1705":"","1706":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1707":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1708":"","1709":"","1710":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1711":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1712":"","1713":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1714":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1715":"","1716":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1717":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1718":"","1719":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1720":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1721":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1722":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1723":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1724":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1725":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1726":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1727":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1728":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1729":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1730":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1731":"","1732":"","1733":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1734":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1735":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1736":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1737":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1738":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1739":"","1740":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1741":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1742":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1743":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1744":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1745":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1746":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1747":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1748":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1749":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1750":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1751":"","1752":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1753":"","1754":"","1755":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1756":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1757":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1758":"","1759":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1760":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1761":"","1762":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1763":"","1764":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1765":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1766":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1767":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1768":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1769":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1770":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1771":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1772":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1773":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1774":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1775":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1776":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1777":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1778":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1779":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1780":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1781":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1782":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1783":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1784":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1785":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1786":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1787":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1788":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/Cache-Control\nhttps:\/\/grayduck.mn\/2021\/09\/13\/cache-control-recommendations\/","1789":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1790":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1791":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1792":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1793":"https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps:\/\/owasp.org\/www-community\/Security_Headers\nhttps:\/\/en.wikipedia.org\/wiki\/HTTP_Strict_Transport_Security\nhttps:\/\/caniuse.com\/stricttransportsecurity\nhttps:\/\/datatracker.ietf.org\/doc\/html\/rfc6797","1794":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1795":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1796":"https:\/\/www.zaproxy.org\/docs\/desktop\/addons\/authentication-helper\/session-mgmt-id","1797":"https:\/\/www.zaproxy.org\/docs\/desktop\/addons\/authentication-helper\/session-mgmt-id","1798":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","1799":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","1800":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Headers\/X-Frame-Options","1801":"https:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/caniuse.com\/#search=content+security+policy\nhttps:\/\/content-security-policy.com\/\nhttps:\/\/github.com\/HtmlUnit\/htmlunit-csp\nhttps:\/\/developers.google.com\/web\/fundamentals\/security\/csp#policy_applies_to_a_wide_variety_of_resources","1802":"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/CSP\/Introducing_Content_Security_Policy\nhttps:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html\nhttps:\/\/www.w3.org\/TR\/CSP\/\nhttps:\/\/w3c.github.io\/webappsec-csp\/\nhttps:\/\/web.dev\/articles\/csp\nhttps:\/\/caniuse.com\/#feat=contentsecuritypolicy\nhttps:\/\/content-security-policy.com\/","1803":"","1804":"https:\/\/learn.microsoft.com\/en-us\/previous-versions\/windows\/internet-explorer\/ie-developer\/compatibility\/gg622941(v=vs.85)\nhttps:\/\/owasp.org\/www-community\/Security_Headers","1805":"https:\/\/gdpr.eu\/cookies\/","1806":"https:\/\/gdpr.eu\/privacy-notice\/"}}